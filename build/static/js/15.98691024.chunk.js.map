{"version":3,"sources":["queries/adminQuery.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","queries/sharedQuery.ts","utils/convertDate.ts","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/antd/es/divider/index.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js","pages/Admin/Dashboard/styles.tsx","pages/Admin/Dashboard/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","getDate","time","itemDate","Date","Math","floor","parseInt","getFullYear","getMonth","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Divider","props","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","Col","Row","Container","styled","div","antCol","TableRowSpan","span","ExtendedRow","Dashboard","useQuery","data","loading","refetch","linkData","linkLoading","linkRefetch","linkError","state","useLocation","useState","notice","setNotice","admission","setAdmission","links","setLinks","useMutation","deleteLink","useEffect","getBoard","filter","item","category","includes","slice","getLinks","excuteRefetch","refresh","handleLinkDelete","useCallback","id","a","variables","ok","toast","success","console","gutter","justify","title","Title","level","dataSource","showHeader","rowKey","pagination","size","dataIndex","align","ellipsis","render","record","to","idx","href","danger","onClick","style","marginLeft"],"mappings":"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","file":"static/js/15.98691024.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","export const getDate = (time: string) => {\n  const itemDate = new Date(Math.floor(parseInt(time, 10) / 1000) * 1000);\n  const date =\n    itemDate.getFullYear() +\n    \"-\" +\n    (itemDate.getMonth() + 1 >= 10\n      ? itemDate.getMonth() + 1\n      : `0${itemDate.getMonth() + 1}`) +\n    \"-\" +\n    (itemDate.getDate() >= 10 ? itemDate.getDate() : `0${itemDate.getDate()}`);\n  return date;\n};\n\nexport const convertMonth = (name: string): string => {\n  switch (name) {\n    case \"Jan\":\n      return \"1\";\n    case \"Feb\":\n      return \"2\";\n    case \"Mar\":\n      return \"3\";\n    case \"Apr\":\n      return \"4\";\n    case \"May\":\n      return \"5\";\n    case \"Jun\":\n      return \"6\";\n    case \"Jul\":\n      return \"7\";\n    case \"Aug\":\n      return \"8\";\n    case \"Sep\":\n      return \"9\";\n    case \"Oct\":\n      return \"10\";\n    case \"Nov\":\n      return \"11\";\n    case \"Dec\":\n      return \"12\";\n    default:\n      return name;\n  }\n};\n\nexport const convertDay = (name: string): string => {\n  switch (name) {\n    case \"Sun\":\n      return \"일\";\n    case \"Mon\":\n      return \"월\";\n    case \"Tue\":\n      return \"화\";\n    case \"Wed\":\n      return \"수\";\n    case \"Thu\":\n      return \"목\";\n    case \"Fri\":\n      return \"금\";\n    case \"Sat\":\n      return \"토\";\n    case \"0\":\n      return \"일\";\n    case \"1\":\n      return \"월\";\n    case \"2\":\n      return \"화\";\n    case \"3\":\n      return \"수\";\n    case \"4\":\n      return \"목\";\n    case \"5\":\n      return \"금\";\n    case \"6\":\n      return \"토\";\n    default:\n      return name;\n  }\n};\n","module.exports = require(\"regenerator-runtime\");\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;","import styled from \"@emotion/styled\";\nimport { Col as antCol, Row } from \"antd\";\n\nexport const Container = styled.div``;\n\nexport const Col = styled(antCol)`\n  height: 300px;\n`;\n\nexport const TableRowSpan = styled.span`\n  cursor: pointer;\n  &:hover {\n    transition: 0.2s linear;\n    color: #438ef7;\n  }\n`;\n\nexport const ExtendedRow = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Container, Col, TableRowSpan, ExtendedRow } from \"./styles\";\nimport { Row, Typography, Table, Divider, Button } from \"antd\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD, GET_LINK } from \"../../../queries/sharedQuery\";\nimport {\n  getBoard,\n  getBoard_getBoard_data,\n  getLinks,\n  getLinks_getLinks_data,\n} from \"../../../typings/api\";\nimport Column from \"antd/lib/table/Column\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { DELETE_LINK } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { getDate } from \"../../../utils/convertDate\";\n\ninterface LocationProps {\n  refresh?: boolean;\n}\n\nconst Dashboard: React.VFC = () => {\n  const { data, loading, refetch, error } = useQuery<getBoard>(GET_BOARD);\n  const {\n    data: linkData,\n    loading: linkLoading,\n    refetch: linkRefetch,\n    error: linkError,\n  } = useQuery<getLinks>(GET_LINK);\n  const { state } = useLocation<LocationProps>();\n  const [notice, setNotice] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [admission, setAdmission] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [links, setLinks] = useState<\n    Array<getLinks_getLinks_data> | undefined\n  >();\n\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  useEffect(() => {\n    if (data?.getBoard.data) {\n      setNotice(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-notice\"))\n          .slice(0, 5)\n      );\n      setAdmission(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-administration\"))\n          .slice(0, 5)\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (linkData?.getLinks.data) {\n      setLinks(linkData.getLinks.data as getLinks_getLinks_data[]);\n    }\n  }, [linkData]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) refetch();\n      if (linkRefetch) linkRefetch();\n    };\n    if (state && state.refresh) excuteRefetch();\n    return () => excuteRefetch();\n  }, [refetch, state, linkRefetch]);\n\n  const handleLinkDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: { id },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되엇습니다\");\n        }\n      });\n      refetch();\n      linkRefetch();\n    },\n    [refetch, deleteLink, linkRefetch]\n  );\n\n  if (error) console.error(error);\n  if (linkError) console.error(linkError);\n\n  return (\n    <Container>\n      {loading ? (\n        <>loading...</>\n      ) : (\n        <Row gutter={[30, 40]} justify={\"space-between\"}>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>공지사항</Typography.Title>\n              )}\n              dataSource={notice}\n              showHeader={false}\n              rowKey={\"noticeid\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                key={\"noticesubid\"}\n                render={(value, record: getBoard_getBoard_data, i) => {\n                  return (\n                    <TableRowSpan key={i}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                key={\"noticetime\"}\n                render={(value, record: getBoard_getBoard_data, i) => {\n                  return (\n                    <span key={i}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>학사공지</Typography.Title>\n              )}\n              dataSource={admission}\n              showHeader={false}\n              rowKey={\"admissionkey\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                key={\"subadmissionkey\"}\n                render={(value, record: getBoard_getBoard_data, id) => {\n                  return (\n                    <TableRowSpan key={id}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                key={\"subadmissionkeydate\"}\n                render={(value, record: getBoard_getBoard_data, idx) => {\n                  return (\n                    <span key={idx}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n        </Row>\n      )}\n      <Divider />\n      <ExtendedRow>\n        <Typography.Title level={4}>사이트 링크</Typography.Title>\n        {linkLoading ? (\n          <>loading...</>\n        ) : (\n          <Table\n            showHeader={false}\n            dataSource={links}\n            pagination={false}\n            rowKey=\"linkKey\"\n          >\n            <Column\n              dataIndex=\"title\"\n              align=\"left\"\n              key=\"linkKey0\"\n              render={(value) => {\n                return <span key=\"first\">{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"center\"\n              key=\"linkKey1\"\n              render={(value) => {\n                return <span key=\"second\">{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"right\"\n              key=\"linkKey2\"\n              render={(value, record: getLinks_getLinks_data) => {\n                return (\n                  <div key=\"third\">\n                    <a href={`${value}`}>\n                      <Button>바로가기</Button>\n                    </a>\n                    <Button\n                      danger\n                      onClick={() => handleLinkDelete(record.id)}\n                      style={{ marginLeft: 15 }}\n                    >\n                      링크삭제\n                    </Button>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n        )}\n      </ExtendedRow>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}