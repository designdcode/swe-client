{"version":3,"sources":["hooks/useInput.ts","utils/loginResolver.ts","utils/forceHistory.tsx","assets/AdminNavData.ts","utils/AdminRouteHandler.tsx","layouts/Admin/styles.tsx","layouts/Admin/index.tsx"],"names":["useInput","initioalData","useState","value","setValue","useCallback","e","target","adminQuery","gql","adminLogin","client","cache","writeQuery","query","data","localStorage","setItem","Date","now","adminLoginVar","adminLogOut","removeItem","userLogin","stno","userLogOut","toast","success","forceHistory","push","createBrowserHistory","forceRefresh","AdminNavData","title","ko_title","subMenu","key","BoardDetail","loadable","StoragePage","Dashboard","EditBoardPage","UploadBoardPage","ImageBoardPage","UploadImageBoardPage","EditImageBoardPage","LinkManager","AdminRouteHandler","useParams","param","subparam","includes","routehandler","LoginContainer","styled","div","Admin","loginStatus","useReactiveVar","history","useHistory","adminId","adminIdOnChange","setAdminId","adminPW","adminPWOnChange","setAdminPW","pickMenu","setPickMenu","parentMenu","setParentMenu","setParams","showBreadCrumb","setShowBreadCrumb","SubMenu","Menu","Header","Layout","Content","Sider","onFinish","error","handlePickMenu","koMenu","koParentMenu","menu","handleClickDashboard","useEffect","time","getItem","parseInt","style","minHeight","className","theme","mode","display","justifyContent","Item","onClick","LogoutOutlined","width","defaultSelectedKeys","defaultOpenKeys","height","borderRight","to","pathname","state","refresh","map","elem","padding","margin","name","initialValues","remember","rules","required","message","prefix","UserOutlined","placeholder","onChange","LockOutlined","type","htmlType"],"mappings":"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","file":"static/js/20.05dd5a9e.chunk.js","sourcesContent":["import {\n  ChangeEvent,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n} from \"react\";\n\ntype ReturnTypes<T> = [\n  T,\n  (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n  Dispatch<SetStateAction<T>>\n];\n\nconst useInput = <T>(initioalData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initioalData);\n  const handler = useCallback((e) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import { gql } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\nimport client, { adminLoginVar } from \"./apollo\";\nimport { forceHistory } from \"./forceHistory\";\n\nexport const adminQuery = gql`\n  query adminLogin {\n    adminLogin @client\n  }\n`;\n\nexport const adminLogin = () => {\n  client.cache.writeQuery({\n    query: adminQuery,\n    data: {\n      adminLogin: true,\n    },\n  });\n  localStorage.setItem(\"admin\", `${Date.now() + 7200000}`);\n  adminLoginVar(true);\n};\n\nexport const adminLogOut = () => {\n  client.cache.writeQuery({\n    query: adminQuery,\n    data: {\n      adminLogin: false,\n    },\n  });\n  localStorage.removeItem(\"admin\");\n  adminLoginVar(false);\n};\n\nexport const userLogin = (stno: string) => {\n  localStorage.setItem(`stno`, `${stno}`);\n};\n\nexport const userLogOut = () => {\n  localStorage.removeItem(\"stno\");\n  toast.success(\"로그아웃 되었습니다\");\n  forceHistory.push(\"/main\");\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const forceHistory = createBrowserHistory({ forceRefresh: true });\n","export interface ObjProps {\n  key: string;\n  title: string;\n  ko_title: string;\n}\nexport interface NavProps {\n  title: string;\n  ko_title: string;\n  subMenu: Array<ObjProps>;\n}\n\nexport const AdminNavData: NavProps[] = [\n  {\n    title: \"intro\",\n    ko_title: \"사업단 소개\",\n    subMenu: [\n      {\n        key: \"intro-introduce\",\n        title: \"introduce\",\n        ko_title: \"인사말\",\n      },\n      {\n        key: \"intro-overview\",\n        title: \"overview\",\n        ko_title: \"사업개요\",\n      },\n      {\n        key: \"intro-history\",\n        title: \"history\",\n        ko_title: \"연혁\",\n      },\n      {\n        key: \"intro-task\",\n        title: \"task\",\n        ko_title: \"조직도 및 업무\",\n      },\n      {\n        key: \"intro-route\",\n        title: \"route\",\n        ko_title: \"오시는길\",\n      },\n    ],\n  },\n  {\n    title: \"basic\",\n    ko_title: \"SW기초교육\",\n    subMenu: [\n      {\n        key: \"basic-overview\",\n        title: \"basic-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"basic-pre\",\n        title: \"basic-pre-education\",\n        ko_title: \"입학전 SW교육\",\n      },\n      {\n        key: \"basic-basicedu\",\n        title: \"basic-education\",\n        ko_title: \"SW기초교육\",\n      },\n      {\n        key: \"basic-creativity\",\n        title: \"basic-creativity\",\n        ko_title: \"SW창의역량인증\",\n      },\n      {\n        key: \"basic-lecture\",\n        title: \"basic-lecture\",\n        ko_title: \"ST@R EDX 공개강좌\",\n      },\n      {\n        key: \"basic-clinic\",\n        title: \"basic-clinic\",\n        ko_title: \"SW클리닉\",\n      },\n      {\n        key: \"basic-tutoring\",\n        title: \"basic-tutoring\",\n        ko_title: \"SW튜터링\",\n      },\n      {\n        key: \"basic-AI\",\n        title: \"basic-AI\",\n        ko_title: \"AI SW 서포터즈 맨토링\",\n      },\n      {\n        key: \"basic-online\",\n        title: \"basic-online\",\n        ko_title: \"개방형 온라인 플랫폼(K-MOOC)\",\n      },\n    ],\n  },\n  {\n    title: \"major\",\n    ko_title: \"SW전공교육\",\n    subMenu: [\n      {\n        key: \"major-overview\",\n        title: \"major-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"major-project\",\n        title: \"major-project\",\n        ko_title: \"프로젝트 기반 교육과정\",\n      },\n      {\n        key: \"major-sw\",\n        title: \"major-sw\",\n        ko_title: \"몰입형 SW교육과정\",\n      },\n      {\n        key: \"major-opensource\",\n        title: \"major-opensource\",\n        ko_title: \"오픈소스 SW 교육\",\n      },\n      {\n        key: \"major-verify\",\n        title: \"major-verify\",\n        ko_title: \"소프트웨어 전문역량 인증제\",\n      },\n      {\n        key: \"major-contest\",\n        title: \"major-contest\",\n        ko_title: \"SW 경진대회\",\n      },\n      {\n        key: \"major-training\",\n        title: \"major-training\",\n        ko_title: \"해외현장실습\",\n      },\n      {\n        key: \"major-taprogram\",\n        title: \"major-taprogram\",\n        ko_title: \"프로그래밍교과목 멘토(TA) 프로그램\",\n      },\n    ],\n  },\n  {\n    title: \"integration\",\n    ko_title: \"SW융합교육\",\n    subMenu: [\n      {\n        key: \"integration-overview\",\n        title: \"integration-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"integration-software\",\n        title: \"integration-software\",\n        ko_title: \"소프트웨어 융합경영전공\",\n      },\n      {\n        key: \"integration-product\",\n        title: \"integration-product\",\n        ko_title: \"스마트제조 IOT융합전공\",\n      },\n      {\n        key: \"integration-content\",\n        title: \"integration-content\",\n        ko_title: \"스마트콘텐츠 융합전공\",\n      },\n      {\n        key: \"integration-automobile\",\n        title: \"integration-automobile\",\n        ko_title: \"미래자동차 융합전공\",\n      },\n      {\n        key: \"integration-inteligence\",\n        title: \"integration-inteligence\",\n        ko_title: \"지능형 전장 제어 전공\",\n      },\n    ],\n  },\n  {\n    title: \"value\",\n    ko_title: \"SW가치확산\",\n    subMenu: [\n      {\n        key: \"value-overview\",\n        title: \"value-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"value-edu\",\n        title: \"value-edu\",\n        ko_title: \"수요중심 AI · SW 교육\",\n      },\n      {\n        key: \"value-training\",\n        title: \"value-training\",\n        ko_title: \"AI · SW 선도자 양성\",\n      },\n      {\n        key: \"value-share\",\n        title: \"value-share\",\n        ko_title: \"AI · SW 가치공유\",\n      },\n      {\n        key: \"value-platform\",\n        title: \"value-platform\",\n        ko_title: \"SW 가치확산 플랫폼\",\n      },\n    ],\n  },\n  {\n    title: \"cooperation\",\n    ko_title: \"SW산학협력\",\n    subMenu: [\n      {\n        key: \"cooperation-overview\",\n        title: \"cooperation-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"cooperation-network\",\n        title: \"cooperation-network\",\n        ko_title: \"국내 · 외 기관과의 네트워크\",\n      },\n      {\n        key: \"cooperation-project\",\n        title: \"cooperation-project\",\n        ko_title: \"국내 · 외 기관과의 프로젝트\",\n      },\n      {\n        key: \"cooperation-internship\",\n        title: \"cooperation-internship\",\n        ko_title: \"국내 · 외 기관과의 연계 인턴쉽\",\n      },\n    ],\n  },\n  {\n    title: \"achievement\",\n    ko_title: \"사업성과\",\n    subMenu: [\n      {\n        key: \"achievement-news\",\n        title: \"achievement-news\",\n        ko_title: \"사업단 소식\",\n      },\n      {\n        key: \"achievement-aidnews\",\n        title: \"achievement-aidnews\",\n        ko_title: \"SW교육지원센터 소식\",\n      },\n      {\n        key: \"achievement-valuenews\",\n        title: \"achievement-valuenews\",\n        ko_title: \"SW가치확산센터 소식\",\n      },\n      {\n        key: \"achievement-coopnews\",\n        title: \"achievement-coopnews\",\n        ko_title: \"SW산학협력소식\",\n      },\n      {\n        key: \"achievement-startup\",\n        title: \"achievement-startup\",\n        ko_title: \"창업지원 소식\",\n      },\n    ],\n  },\n  {\n    title: \"community\",\n    ko_title: \"알림마당\",\n    subMenu: [\n      {\n        key: \"community-notice\",\n        title: \"community-notice\",\n        ko_title: \"공지사항\",\n      },\n      {\n        key: \"community-administration\",\n        title: \"community-administration\",\n        ko_title: \"학사공지\",\n      },\n      {\n        key: \"community-storaoge\",\n        title: \"community-storage\",\n        ko_title: \"서식자료실\",\n      },\n      {\n        key: \"community-request\",\n        title: \"community-request\",\n        ko_title: \"건의사항\",\n      },\n      {\n        key: \"community-help\",\n        title: \"community-help\",\n        ko_title: \"헬프데스크\",\n      },\n      {\n        key: \"community-sitemap\",\n        title: \"community-sitemap\",\n        ko_title: \"사이트맵\",\n      },\n    ],\n  },\n  {\n    title: \"sitelink\",\n    ko_title: \"사이트링크\",\n    subMenu: [\n      {\n        key: \"site-link\",\n        title: \"link\",\n        ko_title: \"링크관리\",\n      },\n    ],\n  },\n];\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport loadable from \"@loadable/component\";\n\ninterface IProps {\n  param: string;\n  subparam: string;\n}\n\nconst BoardDetail = loadable(() => import(\"../pages/Admin/BoardDetail/index\"));\nconst StoragePage = loadable(() => import(\"../pages/Admin/StoragePage/index\"));\nconst Dashboard = loadable(() => import(\"../pages/Admin/Dashboard/index\"));\nconst EditBoardPage = loadable(\n  () => import(\"../pages/Admin/EditBoardPage/index\")\n);\nconst UploadBoardPage = loadable(\n  () => import(\"../pages/Admin/UploadBoardPage/index\")\n);\nconst ImageBoardPage = loadable(\n  () => import(\"../pages/Admin/ImageBoardPage/index\")\n);\nconst UploadImageBoardPage = loadable(\n  () => import(\"../pages/Admin/UploadImageBoardPage\")\n);\nconst EditImageBoardPage = loadable(\n  () => import(\"../pages/Admin/EditImageBoardPage/index\")\n);\nconst LinkManager = loadable(() => import(\"../pages/Admin/LinkManager/index\"));\n\nconst AdminRouteHandler: React.VFC = () => {\n  const { param, subparam } = useParams<IProps>();\n  const routehandler = (param: string, subparam: string) => {\n    switch (param) {\n      case \"dashboard\":\n        return <Dashboard />;\n\n      case \"intro\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"basic\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"major\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"integration\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"value\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"cooperation\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"achievement\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <StoragePage />;\n\n      case \"community\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <StoragePage />;\n      case \"sitelink\":\n        return <LinkManager />;\n      default:\n        return;\n    }\n  };\n\n  return <>{routehandler(param, subparam)}</>;\n};\nexport default AdminRouteHandler;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n\nexport const LoginContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  & .login-form {\n    height: 700px;\n    width: 800px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  & .login-input {\n    width: 300px;\n  }\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Layout, Menu, Breadcrumb, Form, Input, Button } from \"antd\";\nimport { AdminNavData, NavProps, ObjProps } from \"../../assets/AdminNavData\";\nimport AdminRouteHandler from \"../../utils/AdminRouteHandler\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { adminLoginVar } from \"../../utils/apollo\";\nimport useInput from \"../../hooks/useInput\";\nimport { adminLogin, adminLogOut } from \"../../utils/loginResolver\";\nimport { toast } from \"react-toastify\";\nimport { UserOutlined, LockOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport { LoginContainer } from \"./styles\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\n\nconst Admin: React.FC = () => {\n  const loginStatus = useReactiveVar(adminLoginVar);\n  const history = useHistory();\n  const [adminId, adminIdOnChange, setAdminId] = useInput(\"\");\n  const [adminPW, adminPWOnChange, setAdminPW] = useInput(\"\");\n  const [pickMenu, setPickMenu] = useState<string>(\"대시보드\");\n  const [parentMenu, setParentMenu] = useState<string>(\"대시보드\");\n  const [params, setParams] = useState<ParamProps>({\n    param: \"dashboard\",\n    subparam: \"dashboard\",\n  });\n  const [showBreadCrumb, setShowBreadCrumb] = useState<boolean>(false);\n  const { SubMenu } = Menu;\n  const { Header, Content, Sider } = Layout;\n\n  const onFinish = useCallback(() => {\n    if (adminId === \"adminswe\" && adminPW === \"adminswe\") {\n      setAdminId(\"\");\n      setAdminPW(\"\");\n      adminLogin();\n      toast.success(\"로그인 되었습니다\");\n    } else {\n      toast.error(\"아이디 & 암호가 틀립니다\");\n    }\n  }, [adminId, adminPW, setAdminId, setAdminPW]);\n\n  const handlePickMenu = useCallback(\n    (koMenu, koParentMenu, menu, parentMenu) => {\n      setShowBreadCrumb(true);\n      setParentMenu(koParentMenu);\n      setPickMenu(koMenu);\n      setParams({\n        param: menu,\n        subparam: parentMenu,\n      });\n    },\n    []\n  );\n\n  const handleClickDashboard = useCallback(() => {\n    setShowBreadCrumb(false);\n    setParentMenu(\"대시보드\");\n    setPickMenu(\"대시보드\");\n    setParams({\n      param: \"dashboard\",\n      subparam: \"dashboard\",\n    });\n  }, []);\n\n  useEffect(() => {\n    const time = localStorage.getItem(\"admin\");\n    if (time) {\n      if (parseInt(time, 10) / 1000 < Date.now() / 1000) {\n        adminLogOut();\n      }\n    }\n  }, []);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {loginStatus ? (\n        <>\n          <Header className=\"header\">\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <Menu.Item\n                key={1}\n                onClick={() => {\n                  adminLogOut();\n                  history.push(\"/main\");\n                }}\n              >\n                메인으로 가기\n              </Menu.Item>\n              <Menu.Item key={2} onClick={() => adminLogOut()}>\n                <LogoutOutlined /> Logout\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Layout>\n            <Sider width={200} className=\"site-layout-background\">\n              <Menu\n                mode=\"inline\"\n                defaultSelectedKeys={[\"dashboard\"]}\n                defaultOpenKeys={[\"dashboard\"]}\n                style={{ height: \"100%\", borderRight: 0 }}\n              >\n                <Menu.Item key={\"dashboard\"} title=\"대시보드\">\n                  <Link\n                    to={{\n                      pathname: `/admin/dashboard/dashboard`,\n                      state: { refresh: true },\n                    }}\n                    onClick={handleClickDashboard}\n                  >\n                    <span>대시보드</span>\n                  </Link>\n                </Menu.Item>\n                {AdminNavData.map((data: NavProps) => {\n                  return (\n                    <SubMenu key={data.ko_title} title={data.ko_title}>\n                      {data.subMenu.map((elem: ObjProps) => {\n                        return (\n                          <Menu.Item key={elem.key}>\n                            <Link\n                              to={`/admin/${data.title}/${elem.key}`}\n                              onClick={() =>\n                                handlePickMenu(\n                                  elem.ko_title,\n                                  data.ko_title,\n                                  data.title,\n                                  elem.key\n                                )\n                              }\n                            >\n                              <span>{elem.ko_title}</span>\n                            </Link>\n                          </Menu.Item>\n                        );\n                      })}\n                    </SubMenu>\n                  );\n                })}\n              </Menu>\n            </Sider>\n            <Layout style={{ padding: \"0 24px 24px\" }}>\n              {showBreadCrumb && (\n                <Breadcrumb style={{ margin: \"16px 0\" }}>\n                  <Breadcrumb.Item>{parentMenu}</Breadcrumb.Item>\n                  <Breadcrumb.Item>{pickMenu}</Breadcrumb.Item>\n                </Breadcrumb>\n              )}\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  padding: 24,\n                  margin: 0,\n                  minHeight: 280,\n                }}\n              >\n                <AdminRouteHandler />\n              </Content>\n            </Layout>\n          </Layout>\n        </>\n      ) : (\n        <LoginContainer>\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Please input your Username!\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n                value={adminId}\n                onChange={adminIdOnChange}\n                className=\"login-input\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                value={adminPW}\n                onChange={adminPWOnChange}\n                className={\"login-input\"}\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </LoginContainer>\n      )}\n    </Layout>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}