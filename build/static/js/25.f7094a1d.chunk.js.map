{"version":3,"sources":["queries/adminQuery.ts","utils/firebase.ts","utils/switcher.ts","utils/fileRemover.ts","utils/fileUploader.ts","pages/Admin/UploadBoardPage/styles.tsx","pages/Admin/UploadBoardPage/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","DELETE_LINK","EDIT_POPUP","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","linkSwitcher","subparam","toString","split","imageSwitcher","typeSwitcher","fileSwitcher","contentSwitcher","fileRemover","type","category","filename","state","ref","delete","then","catch","err","toast","error","fileUploader","file","progress","setProgress","createImage","boardId","put","on","snapshot","console","log","getDownloadURL","url","a","variables","fileName","success","Container","styled","div","layout","wrapperCol","span","modules","toolbar","header","list","formats","Editor","UploadBoardPage","history","useHistory","search","useLocation","queryObj","queryString","parse","param","useInput","title","onChangeTitle","setTitle","useState","content","setContent","link","onChangeLink","setLink","showLink","setShowLink","imgUrl","setImgUrl","imgName","setImgName","setFile","isLinkNeeded","setIsLinkNeeded","isFileNeeded","setIsFileNeeded","isImageNeeded","setIsImageNeeded","isContentNeeded","setIsContentNeeded","isTypeNeeded","setIsTypeNeeded","checkPublic","setCheckPublic","setType","useEffect","useMutation","onCompleted","createBoard","ok","push","pathname","refresh","loading","handleLinkAdd","useCallback","onFinish","length","trim","files","images","private","handleImageUpload","name","handleFileUpload","prev","handleImageRemover","handleFileRemover","propFile","filter","elem","testMenu","useMemo","style","width","Item","onClick","valueMenu","coopMenu","handleMenu","prop","label","onChange","value","defaultChecked","marginLeft","overlay","trigger","className","marginBottom","listType","customRequest","showInfo","status","maxCount","onRemove","icon","UploadOutlined","multiple","callbackFile","marginTop","initialValue","rules","required","theme","offset","htmlType","disabled","LoadingOutlined","ReactQuill"],"mappings":"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","file":"static/js/25.f7094a1d.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n    $type: String\n    $private: Boolean\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n      type: $type\n      private: $private\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n    $private: Boolean\n    $type: String\n  ) {\n    editBoard(\n      id: $id\n      title: $title\n      content: $content\n      link: $link\n      private: $private\n      type: $type\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_POPUP = gql`\n  mutation editPopup($up: String!, $url: String) {\n    editPopup(up: $up, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDM5Cqu1m1YJ7E44OfM9Yo3LH0ZUN8Y6x4\",\n  authDomain: \"sunmoon-swe.firebaseapp.com\",\n  projectId: \"sunmoon-swe\",\n  storageBucket: \"sunmoon-swe.appspot.com\",\n  messagingSenderId: \"1064857281018\",\n  appId: \"1:1064857281018:web:b2881ce151e1a16b068443\",\n  measurementId: \"G-JYK8JT1WEN\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nexport { storage, firebase as default };\n","export const linkSwitcher = (subparam?: string | null) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  switch (sub) {\n    case \"storage\":\n      return true;\n    case \"community\":\n      return false;\n    default:\n      return false;\n  }\n};\n\nexport const imageSwitcher = (subparam: string) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  switch (sub) {\n    case \"storage\":\n      return true;\n    case \"achievement\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const typeSwitcher = (subparam: string) => {\n  const sub = subparam?.toString().split(\"-\")[1];\n  switch (sub) {\n    case \"aidnews\":\n      return true;\n    case \"valuenews\":\n      return true;\n    case \"coopnews\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const fileSwitcher = (subparam?: string | null) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  switch (sub) {\n    case \"storage\":\n      return true;\n    case \"achievement\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const contentSwitcher = (subparam?: string | null) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  if (sub === \"introduce\") return false;\n  else return true;\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileRemover = (\n  type: string,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>\n) => {\n  storage\n    .ref(`/${type}/${category}/${filename}`)\n    .delete()\n    .then(() => {\n      state(\"\");\n    })\n    .catch((err) => toast.error(err));\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileUploader = (\n  type: string,\n  file: any,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>,\n  progress: number,\n  setProgress: Dispatch<SetStateAction<number>>,\n  createImage?: any,\n  boardId?: number\n) => {\n  const upload = storage.ref(`/${type}/${category}/${filename}`).put(file);\n  upload.on(\n    \"state_changed\",\n    (snapshot) => {},\n    (err) => console.log(err),\n    () => {\n      setProgress(1);\n      storage\n        .ref(`/${type}/${category}/${filename}`)\n        .getDownloadURL()\n        .then(async (url) => {\n          state(url);\n          if (createImage && boardId) {\n            await createImage({\n              variables: {\n                url,\n                fileName: filename,\n                boardId,\n              },\n            });\n          }\n          toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n          setProgress(0);\n        });\n    }\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  & .link-checkbox {\n    margin: 20px;\n    margin-left: 40px;\n  }\n\n  & .upload-list-inline {\n    width: 200px;\n    margin-right: 8px;\n  }\n\n  & .ant-upload-list-picture-container {\n    width: 300px;\n  }\n  & .ant-upload-list-item-info {\n    width: 300px;\n  }\n`;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport queryString from \"query-string\";\nimport useInput from \"../../../hooks/useInput\";\nimport { Container } from \"./styles\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Upload,\n  Switch,\n  Menu,\n  Dropdown,\n} from \"antd\";\nimport { useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_BOARD } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { useHistory, useLocation } from \"react-router\";\nimport {\n  contentSwitcher,\n  fileSwitcher,\n  imageSwitcher,\n  linkSwitcher,\n  typeSwitcher,\n} from \"../../../utils/switcher\";\nimport { LoadingOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\nimport { storage } from \"../../../utils/firebase\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport styled from \"@emotion/styled\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface fileProps {\n  url: string;\n  fileName: string;\n}\n\nconst layout = {\n  wrapperCol: { span: 16 },\n};\n\nconst modules = {\n  toolbar: [\n    [{ header: [1, 2, false] }],\n    [\"bold\", \"italic\"],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"clean\"],\n  ],\n};\n\nconst formats = [\"header\", \"bold\", \"italic\", \"underline\", \"list\"];\n\nconst UploadBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const { category, param, subparam } = queryObj;\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  // const [content, onChangeContent, setContent] = useInput(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [showLink, setShowLink] = useState<boolean>(false);\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [file, setFile] = useState<fileProps[]>([]);\n\n  const [isLinkNeeded, setIsLinkNeeded] = useState<boolean>(false);\n  const [isFileNeeded, setIsFileNeeded] = useState<boolean>(false);\n  const [isImageNeeded, setIsImageNeeded] = useState<boolean>(false);\n  const [isContentNeeded, setIsContentNeeded] = useState<boolean>(true);\n  const [isTypeNeeded, setIsTypeNeeded] = useState<boolean>(false);\n  const [checkPublic, setCheckPublic] = useState<boolean>(true);\n  const [progress, setProgress] = useState<number>(0);\n  const [type, setType] = useState<{ type: string; title: string }>();\n\n  useEffect(() => {\n    setIsImageNeeded(imageSwitcher(subparam as string));\n    setIsLinkNeeded(linkSwitcher(subparam as string));\n    setIsFileNeeded(fileSwitcher(subparam as string));\n    setIsContentNeeded(contentSwitcher(subparam as string));\n    setIsTypeNeeded(typeSwitcher(subparam as string));\n  }, [subparam]);\n\n  const handleChange = (value: any) => {\n    setContent(value);\n  };\n\n  const [createBoard, { loading }] = useMutation(CREATE_BOARD, {\n    onCompleted: ({ createBoard }) => {\n      const { ok, err } = createBoard;\n      if (ok) {\n        setTitle(\"\");\n        setContent(\"\");\n        setLink(\"\");\n        setImgUrl(\"\");\n        toast.success(\"게시물을 생성 하였습니다\");\n        history.push({\n          pathname: `/admin/${param}/${subparam}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 생성 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleLinkAdd = useCallback(() => {\n    setShowLink(!showLink);\n    if (!showLink) {\n      setLink(\"\");\n    }\n  }, [showLink, setLink, setShowLink]);\n\n  const onFinish = useCallback(async () => {\n    if (file.length !== 0) {\n      await createBoard({\n        variables: {\n          title: title.trim() ? title : null,\n          content: content.trim() ? content : null,\n          link: link.trim() ? link : null,\n          category,\n          files: file.length !== 0 ? file : null,\n          images: imgUrl?.trim() ? [{ url: imgUrl, fileName: imgName }] : null,\n          private: checkPublic,\n          type: type?.type,\n        },\n      });\n    } else if (imgUrl) {\n      await createBoard({\n        variables: {\n          title: title.trim() ? title : null,\n          content: content.trim() ? content : null,\n          link: link.trim() ? link : null,\n          category,\n          files: null,\n          images: imgUrl?.trim() ? [{ url: imgUrl, fileName: imgName }] : null,\n          private: checkPublic,\n          type: type?.type,\n        },\n      });\n    } else {\n      await createBoard({\n        variables: {\n          title: title.trim() ? title : null,\n          content: content.trim() ? content : null,\n          link: link.trim() ? link : null,\n          private: checkPublic,\n          category,\n          type: type?.type,\n        },\n      });\n    }\n  }, [\n    title,\n    content,\n    link,\n    createBoard,\n    category,\n    file,\n    imgName,\n    imgUrl,\n    checkPublic,\n    type,\n  ]);\n\n  const handleImageUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const filename = file.name;\n      setImgName(file.name);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        filename,\n        setImgUrl,\n        progress,\n        setProgress\n      );\n    },\n    [category, progress]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then((url) => {\n              setFile((prev) => [...prev, { url: url, fileName: file.name }]);\n              toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [category, progress]\n  );\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  const handleFileRemover = useCallback(\n    (propFile: any) => {\n      storage\n        .ref(`/files/${category}/${propFile.name}`)\n        .delete()\n        .then(() => {\n          toast.success(\"업로드 된 파일/이미지가 삭제 되었습니다\");\n          setFile(\n            file.filter((elem: fileProps) => elem.fileName !== propFile.name)\n          );\n        })\n        .catch((err) => toast.error(err));\n    },\n    [category, file]\n  );\n\n  const testMenu = useMemo(() => {\n    return (\n      <Menu style={{ width: 150 }}>\n        <Menu.Item key=\"0\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"test\",\n                title: \"테스트\",\n              })\n            }\n          >\n            테스트\n          </div>\n        </Menu.Item>\n      </Menu>\n    );\n  }, []);\n\n  const valueMenu = useMemo(() => {\n    return (\n      <Menu style={{ width: 150 }}>\n        <Menu.Item key=\"0\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"edu\",\n                title: \"수요중심\",\n              })\n            }\n          >\n            수요중심\n          </div>\n        </Menu.Item>\n        <Menu.Item key=\"1\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"training\",\n                title: \"선도자양성\",\n              })\n            }\n          >\n            선도자양성\n          </div>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"share\",\n                title: \"가치공유\",\n              })\n            }\n          >\n            가치공유\n          </div>\n        </Menu.Item>\n      </Menu>\n    );\n  }, []);\n\n  const coopMenu = useMemo(() => {\n    return (\n      <Menu style={{ width: 150 }}>\n        <Menu.Item key=\"0\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"network\",\n                title: \"기관 네트워크\",\n              })\n            }\n          >\n            기관 네트워크\n          </div>\n        </Menu.Item>\n        <Menu.Item key=\"1\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"project\",\n                title: \"기관 프로젝트\",\n              })\n            }\n          >\n            기관 프로젝트\n          </div>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <div\n            onClick={() =>\n              setType({\n                type: \"internship\",\n                title: \"기관 인턴쉽\",\n              })\n            }\n          >\n            기관 인턴쉽\n          </div>\n        </Menu.Item>\n      </Menu>\n    );\n  }, []);\n\n  const handleMenu = useCallback(\n    (prop?: string) => {\n      switch (prop) {\n        case \"coopnews\":\n          return coopMenu;\n        case \"valuenews\":\n          return valueMenu;\n        default:\n          return testMenu;\n      }\n    },\n    [coopMenu, valueMenu, testMenu]\n  );\n\n  useEffect(() => {\n    if (progress < 0) {\n      setProgress(0);\n    }\n  }, [progress]);\n\n  return (\n    <Container>\n      <Form {...layout} name=\"upload-board\" onFinish={onFinish}>\n        <Form.Item name={[\"title\"]} label=\"제목\">\n          <Input type=\"text\" onChange={onChangeTitle} value={title} />\n        </Form.Item>\n        <Form.Item name={[\"checked\"]} label={\"공개 / 비공개\"}>\n          <Switch\n            defaultChecked\n            onChange={() => setCheckPublic(!checkPublic)}\n          />\n          <span style={{ marginLeft: 15 }}>\n            {checkPublic ? \"공개\" : \"비공개\"}\n          </span>\n        </Form.Item>\n        {isTypeNeeded && (\n          <Form.Item name={[\"type\"]} label=\"대분류\">\n            <Dropdown\n              overlay={() => handleMenu(subparam?.toString().split(\"-\")[1])}\n              trigger={[\"click\"]}\n            >\n              <Button>{!type ? \"선택하기\" : type.title}&ensp;&ensp;&or;</Button>\n            </Dropdown>\n          </Form.Item>\n        )}\n        {isLinkNeeded && (\n          <>\n            <div className=\"link-checkbox\">\n              <Checkbox onChange={handleLinkAdd}>\n                {showLink ? \"링크제거\" : \"링크추가\"}\n              </Checkbox>\n            </div>\n            {showLink && (\n              <Form.Item name={[\"link\"]} label=\"링크\">\n                <Input type=\"text\" onChange={onChangeLink} value={link} />\n              </Form.Item>\n            )}\n          </>\n        )}\n        {isImageNeeded && (\n          <Form.Item name={[\"image\"]} label={\"이미지\"}>\n            <Upload\n              style={{ marginBottom: 20 }}\n              listType=\"picture\"\n              customRequest={({ file }) => handleImageUpload(file)}\n              progress={{ showInfo: true }}\n              onChange={({ file }) => {\n                if (imgUrl !== \"\") {\n                  file.status = \"done\";\n                } else {\n                  file.status = \"removed\";\n                }\n              }}\n              className=\"upload-list-inline\"\n              maxCount={1}\n              onRemove={() => handleImageRemover()}\n            >\n              <Button icon={<UploadOutlined />}>Upload</Button>\n            </Upload>\n          </Form.Item>\n        )}\n        {isFileNeeded && (\n          <Form.Item name={[\"file\"]} label={\"파일\"}>\n            <Upload\n              multiple={true}\n              customRequest={({ file }) => handleFileUpload(file)}\n              maxCount={4}\n              onChange={({ file: callbackFile }) => {\n                if (file.length !== 0) {\n                  callbackFile.status = \"done\";\n                } else {\n                  callbackFile.status = \"removed\";\n                }\n              }}\n              onRemove={(file) => handleFileRemover(file)}\n            >\n              <Button style={{ marginBottom: 20 }} icon={<UploadOutlined />}>\n                Upload\n              </Button>\n            </Upload>\n          </Form.Item>\n        )}\n        {isContentNeeded && (\n          <Form.Item\n            name={\"content\"}\n            label=\"내용\"\n            style={{ marginTop: 20 }}\n            initialValue=\"\"\n            rules={[{ required: true }]}\n          >\n            <Editor\n              modules={modules}\n              formats={formats}\n              value={content || \"\"}\n              onChange={handleChange}\n              theme={\"snow\"}\n            />\n          </Form.Item>\n        )}\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={progress !== 0 ? true : false}\n          >\n            {!loading ? (\n              progress <= 0 ? (\n                \"올리기\"\n              ) : (\n                <>\n                  <LoadingOutlined /> 이미지 / 파일 업로드 중입니다...\n                </>\n              )\n            ) : (\n              \"Uploading...\"\n            )}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n};\n\nexport default UploadBoardPage;\n\nconst Editor = styled(ReactQuill)`\n  background-color: white;\n  .ql-container {\n    min-height: 300px;\n  }\n`;\n"],"sourceRoot":""}