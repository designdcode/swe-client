{"version":3,"sources":["queries/adminQuery.ts","utils/firebase.ts","queries/sharedQuery.ts","utils/switcher.ts","utils/fileRemover.ts","utils/fileUploader.ts","pages/Admin/EditBoardPage/styles.tsx","pages/Admin/EditImageBoardPage/styles.tsx","pages/Admin/EditImageBoardPage/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","DELETE_LINK","EDIT_POPUP","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","GET_POPUP_STATUS","linkSwitcher","subparam","toString","split","imageSwitcher","typeSwitcher","fileSwitcher","contentSwitcher","fileRemover","type","category","filename","state","ref","delete","then","catch","err","toast","error","fileUploader","file","progress","setProgress","createImage","boardId","put","on","snapshot","console","log","getDownloadURL","url","a","variables","fileName","success","Container","styled","div","Button","Btn","EditImageBoardPage","history","useHistory","useParams","param","search","useLocation","queryObj","queryString","parse","id","useState","board","setBoard","setFile","tmpFiles","setTmpFiles","imgUrl","setImgUrl","imgName","setImgName","image","setImage","useInput","link","onChangeLink","setLink","isFileNeeded","setIsFileNeeded","isLinkNeeded","setIsLinkNeeded","useEffect","useQuery","parseInt","loading","data","refetch","useMutation","onCompleted","ok","deleteImage","createFile","deleteFile","editBoard","push","pathname","refresh","handleImageRemover","useCallback","trim","handleImageUpload","name","handleFileUpload","prev","handleDeleteFile","getBoardById","files","images","className","onClick","goBack","disabled","includes","LoadingOutlined","bordered","column","xxl","xl","lg","md","sm","xs","layout","Item","label","span","labelStyle","width","placeholder","undefined","value","onChange","length","map","elem","idx","href","download","target","rel","DeleteOutlined","multiple","maxCount","customRequest","callbackFile","status","icon","UploadOutlined","danger","listType","showInfo","src","alt","Text"],"mappings":"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","file":"static/js/21.f7df5841.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n    $type: String\n    $private: Boolean\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n      type: $type\n      private: $private\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n    $private: Boolean\n    $type: String\n  ) {\n    editBoard(\n      id: $id\n      title: $title\n      content: $content\n      link: $link\n      private: $private\n      type: $type\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_POPUP = gql`\n  mutation editPopup($up: String!, $url: String) {\n    editPopup(up: $up, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDM5Cqu1m1YJ7E44OfM9Yo3LH0ZUN8Y6x4\",\n  authDomain: \"sunmoon-swe.firebaseapp.com\",\n  projectId: \"sunmoon-swe\",\n  storageBucket: \"sunmoon-swe.appspot.com\",\n  messagingSenderId: \"1064857281018\",\n  appId: \"1:1064857281018:web:b2881ce151e1a16b068443\",\n  measurementId: \"G-JYK8JT1WEN\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nexport { storage, firebase as default };\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_POPUP_STATUS = gql`\n  query getPopupStatus {\n    getPopupStatus {\n      ok\n      err\n      data {\n        url\n        up\n      }\n    }\n  }\n`;\n","export const linkSwitcher = (subparam?: string | null) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  switch (sub) {\n    case \"storage\":\n      return true;\n    case \"community\":\n      return false;\n    default:\n      return false;\n  }\n};\n\nexport const imageSwitcher = (subparam: string) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  switch (sub) {\n    case \"storage\":\n      return true;\n    case \"achievement\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const typeSwitcher = (subparam: string) => {\n  const sub = subparam?.toString().split(\"-\")[1];\n  switch (sub) {\n    case \"aidnews\":\n      return true;\n    case \"valuenews\":\n      return true;\n    case \"coopnews\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const fileSwitcher = (subparam?: string | null) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  switch (sub) {\n    case \"storage\":\n      return true;\n    case \"achievement\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const contentSwitcher = (subparam?: string | null) => {\n  const sub = subparam?.toString().split(\"-\")[0];\n  if (sub === \"introduce\") return false;\n  else return true;\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileRemover = (\n  type: string,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>\n) => {\n  storage\n    .ref(`/${type}/${category}/${filename}`)\n    .delete()\n    .then(() => {\n      state(\"\");\n    })\n    .catch((err) => toast.error(err));\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileUploader = (\n  type: string,\n  file: any,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>,\n  progress: number,\n  setProgress: Dispatch<SetStateAction<number>>,\n  createImage?: any,\n  boardId?: number\n) => {\n  const upload = storage.ref(`/${type}/${category}/${filename}`).put(file);\n  upload.on(\n    \"state_changed\",\n    (snapshot) => {},\n    (err) => console.log(err),\n    () => {\n      setProgress(1);\n      storage\n        .ref(`/${type}/${category}/${filename}`)\n        .getDownloadURL()\n        .then(async (url) => {\n          state(url);\n          if (createImage && boardId) {\n            await createImage({\n              variables: {\n                url,\n                fileName: filename,\n                boardId,\n              },\n            });\n          }\n          toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n          setProgress(0);\n        });\n    }\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Button as Btn } from \"antd\";\n\nexport const Container = styled.div`\n  & .button-group {\n    display: flex;\n    align-items: center;\n  }\n\n  & .attach-group {\n    display: flex;\n    margin: 5px 0;\n  }\n\n  & .attach-button {\n    margin-left: 15px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      transition: linear 0.2s;\n    }\n  }\n`;\n\nexport const Button = styled(Btn)`\n  margin: 15px 0;\n  margin-right: 15px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  & .attach-group {\n    display: flex;\n    margin: 5px 0;\n  }\n\n  & .attach-button {\n    margin-left: 15px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      transition: linear 0.2s;\n    }\n  }\n  & .button-group {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  img {\n    object-fit: contain;\n    width: 300px;\n    height: 400px;\n  }\n`;\n","import { Descriptions, Input, Typography, Upload } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { Container } from \"./styles\";\nimport {\n  getBoardById,\n  getBoardByIdVariables,\n  getBoardById_getBoardById_data,\n  getBoardById_getBoardById_data_files,\n  getBoardById_getBoardById_data_images,\n} from \"../../../typings/api\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD_BY_ID } from \"../../../queries/sharedQuery\";\nimport useInput from \"../../../hooks/useInput\";\nimport { Button } from \"../EditBoardPage/styles\";\nimport {\n  UploadOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { storage } from \"../../../utils/firebase\";\nimport {\n  CREATE_FILE,\n  CREATE_IMAGE,\n  DELETE_FILE,\n  DELETE_IMAGE,\n  EDIT_BOARD,\n} from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\nimport { fileSwitcher, linkSwitcher } from \"../../../utils/switcher\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n  subparam: string;\n}\n\nconst EditImageBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { param, subparam } = useParams<paramProps>();\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const { category, id } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [file, setFile] =\n    useState<(getBoardById_getBoardById_data_files | null)[]>();\n  const [tmpFiles, setTmpFiles] = useState<{ url: string; fileName: string }[]>(\n    []\n  );\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [image, setImage] =\n    useState<getBoardById_getBoardById_data_images | null>();\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [progress, setProgress] = useState<number>(0);\n\n  const [isFileNeeded, setIsFileNeeded] = useState<boolean>(false);\n  const [isLinkNeeded, setIsLinkNeeded] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsFileNeeded(fileSwitcher(subparam as string));\n    setIsLinkNeeded(linkSwitcher(subparam as string));\n  }, [subparam]);\n\n  const { loading, data, refetch } = useQuery<\n    getBoardById,\n    getBoardByIdVariables\n  >(GET_BOARD_BY_ID, {\n    variables: {\n      id: parseInt(id as string, 10),\n    },\n  });\n\n  const [createImage] = useMutation(CREATE_IMAGE, {\n    onCompleted: ({ createImage }) => {\n      const { ok } = createImage;\n      if (ok) {\n        setProgress(0);\n        if (refetch) refetch();\n      }\n    },\n  });\n  const [deleteImage] = useMutation(DELETE_IMAGE, {\n    onCompleted: ({ deleteImage }) => {\n      const { ok, err } = deleteImage;\n      if (ok) {\n        if (refetch) refetch();\n        toast.error(\"이미지가 삭제 되었습니다\");\n      } else {\n        console.log(err);\n        toast.error(err);\n      }\n    },\n  });\n  const [createFile] = useMutation(CREATE_FILE, {\n    onCompleted: ({ createFile }) => {\n      const { ok } = createFile;\n      if (ok) {\n        setProgress(0);\n        if (refetch) refetch();\n      }\n    },\n  });\n  const [deleteFile] = useMutation(DELETE_FILE, {\n    onCompleted: ({ deleteFile }) => {\n      const { ok, err } = deleteFile;\n      if (ok) {\n        toast.success(\"파일이 삭제 되었습니다\");\n        if (refetch) refetch();\n      } else {\n        console.log(err);\n        toast.error(err);\n      }\n    },\n  });\n\n  const [editBoard] = useMutation(EDIT_BOARD, {\n    onCompleted: ({ editBoard }) => {\n      const { ok, err } = editBoard;\n      if (ok) {\n        toast.success(\"게시물이 수정 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  const handleImageUpload = useCallback(\n    async (file: any) => {\n      handleImageRemover();\n      setProgress(progress + 1);\n      const filename = file.name;\n      setImgName(file.name);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        filename,\n        setImgUrl,\n        progress,\n        setProgress,\n        createImage,\n        parseInt(id as string, 10)\n      );\n    },\n    [category, progress, handleImageRemover, createImage, id]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then(async (url) => {\n              setTmpFiles((prev) => [\n                ...prev,\n                { url: url, fileName: file.name },\n              ]);\n              await createFile({\n                variables: {\n                  url,\n                  fileName: file.name,\n                  boardId: parseInt(id as string, 10),\n                },\n                onCompleted: ({ createFile }) => {\n                  const { ok, err } = createFile;\n                  if (ok) {\n                    toast.success(\"파일이 업로드 되었습니다\");\n                    if (refetch) refetch();\n                  } else {\n                    toast.error(\"파일 업로드에 실패 하였습니다\");\n                    console.log(err);\n                  }\n                },\n              });\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [createFile, id, category, progress, refetch]\n  );\n\n  const handleDeleteFile = useCallback(\n    async (id?: number, name?: string) => {\n      storage.ref(`/files/${category}/${name}`).delete();\n      await deleteFile({\n        variables: {\n          id,\n        },\n      });\n    },\n    [deleteFile, category]\n  );\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n      setLink(data.getBoardById.data.link || \"\");\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.files\n    ) {\n      setFile(data.getBoardById.data.files);\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.images\n    ) {\n      setImage(data.getBoardById.data.images[0]);\n      setImgName(data.getBoardById.data.images[0]?.fileName);\n    }\n  }, [data, setBoard, setLink]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Container>\n      <div className=\"button-group\">\n        <Button type=\"ghost\" onClick={() => history.goBack()}>\n          뒤로\n        </Button>\n        <Button\n          type=\"primary\"\n          disabled={progress === 0 ? false : true}\n          onClick={() =>\n            editBoard({\n              variables: {\n                id: parseInt(id as string, 10),\n                link: link.includes(\"http\") ? link : `http://${link}`,\n              },\n            })\n          }\n        >\n          {progress === 0 ? (\n            \"완료\"\n          ) : (\n            <>\n              <LoadingOutlined /> 파일 / 이미지 업로딩 중\n            </>\n          )}\n        </Button>\n      </div>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        {isLinkNeeded && (\n          <Descriptions.Item label=\"링크\" span={4} labelStyle={{ width: 100 }}>\n            <Input\n              placeholder={board?.link || undefined}\n              value={link}\n              onChange={onChangeLink}\n            />\n          </Descriptions.Item>\n        )}\n        {isFileNeeded && (\n          <Descriptions.Item label=\"파일\" span={4} labelStyle={{ width: 100 }}>\n            {file && file.length !== 0 ? (\n              <>\n                {file.map((elem, idx) => {\n                  return (\n                    <div key={idx} className=\"attach-group\">\n                      <a\n                        href={elem?.url}\n                        download\n                        target={\"_blank\"}\n                        rel=\"noreferrer\"\n                      >\n                        {elem?.fileName}\n                      </a>\n                      <button\n                        className=\"attach-button\"\n                        onClick={() =>\n                          handleDeleteFile(elem?.id, elem?.fileName)\n                        }\n                      >\n                        <DeleteOutlined />\n                      </button>\n                    </div>\n                  );\n                })}\n              </>\n            ) : tmpFiles.length === 0 ? (\n              <div>첨부파일 없음</div>\n            ) : (\n              <></>\n            )}\n            <Upload\n              multiple={true}\n              maxCount={4}\n              className=\"upload-list-inline\"\n              customRequest={({ file }) => handleFileUpload(file)}\n              onChange={({ file: callbackFile }) => {\n                if (tmpFiles.length !== 0) {\n                  callbackFile.status = \"done\";\n                } else {\n                  callbackFile.status = \"removed\";\n                }\n              }}\n            >\n              <Button icon={<UploadOutlined />}>파일 업로드</Button>\n            </Upload>\n          </Descriptions.Item>\n        )}\n        <Descriptions.Item label=\"이미지\" span={4} labelStyle={{ width: 100 }}>\n          {image && (\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                fileRemover(\n                  \"images\",\n                  category as string,\n                  image.fileName,\n                  setImgUrl\n                );\n                deleteImage({ variables: { id: image.id } });\n              }}\n            >\n              이미지 삭제\n            </Button>\n          )}\n          <Upload\n            listType=\"picture\"\n            customRequest={({ file }) => {\n              if (image) {\n                deleteImage({ variables: { id: image && image.id } });\n              }\n              handleImageUpload(file);\n            }}\n            progress={{ showInfo: true }}\n            onChange={({ file: callbackFile }) => {\n              if (imgUrl) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            maxCount={1}\n          >\n            <Button icon={<UploadOutlined />}>이미지 업로드</Button>\n          </Upload>\n          {image ? (\n            <img src={image.url} alt={image.fileName} />\n          ) : (\n            <Typography.Text>업로드 된 이미지가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n      </Descriptions>\n    </Container>\n  );\n};\n\nexport default EditImageBoardPage;\n"],"sourceRoot":""}