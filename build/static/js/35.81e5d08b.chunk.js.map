{"version":3,"sources":["queries/adminQuery.ts","pages/Admin/LinkManager/styles.tsx","pages/Admin/VideoLink/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","EDIT_POPUP","CREATE_REPLY","DELETE_REPLY","Container","styled","div","Content","VideoLink","useState","videoId","setVideoId","useInput","url","onChangeUrl","setUrl","inputOpen","setInputOpen","useQuery","variables","category","onCompleted","getBoardByCategory","ok","err","data","length","link","split","console","log","loading","refetch","useMutation","createBoard","toast","success","window","location","reload","createBoardMutation","handleSubmit","useCallback","a","title","content","then","res","className","onClick","StyledInput","value","onChange","opts","height","width","playerVars","autoplay","onReady","e","target","pauseVideo","Input"],"mappings":"shBAEaA,EAAeC,YAAH,2oBAiCZC,EAAwBD,YAAH,2hBAiCrBE,EAAeF,YAAH,8HASZG,EAAaH,YAAH,meA6CVI,GAlBYJ,YAAH,2LASIA,YAAH,6LASIA,YAAH,6HASXK,EAAeL,YAAH,8HASZM,EAAcN,YAAH,8MASXO,EAAeP,YAAH,gNAoCZQ,GA3BcR,YAAH,kKASGA,YAAH,4HASCA,YAAH,gLASIA,YAAH,mLASVS,EAAeT,YAAH,mLAiBZU,GATaV,YAAH,8KASKA,YAAH,+I,iHCjNZW,EAAYC,IAAOC,IAAV,0B,GAEFD,IAAOC,IAAV,wsBA8CED,IAAOC,IAAV,iM,qECiEVC,GAFSC,UA9Fc,WAC3B,MAA8BC,mBAAiB,IAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAmCC,YAAS,IAA5C,mBAAOC,EAAP,KAAYC,EAAZ,KAAyBC,EAAzB,KACA,EAAkCN,oBAAkB,GAApD,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA6BC,YAG3BxB,IAAuB,CACvByB,UAAW,CACTC,SAAU,QAEZC,YAAa,YAA6B,IAA1BC,EAAyB,EAAzBA,mBACNC,EAAkBD,EAAlBC,GAAIC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KACbF,GAAME,GAAQA,EAAKC,OAAS,EAC1BD,EAAK,GAAGE,MACVhB,EAAWc,EAAK,GAAGE,KAAKC,MAAM,MAAM,IAGtCC,QAAQC,IAAIN,MAdVO,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAmBjB,EAA8BC,YAC5BzC,IACA,CACE6B,YAAa,YAAsB,IAAnBa,EAAkB,EAAlBA,YACNX,EAAYW,EAAZX,GAAIC,EAAQU,EAARV,IACRD,GACFY,IAAMC,QAAQ,oFACdrB,EAAO,IACPsB,OAAOC,SAASC,UAEhBV,QAAQC,IAAIN,MAVbgB,EAAP,oBAwBMC,EAAeC,sBAAW,sBAAC,sBAAAC,EAAA,sEACzBH,EAAoB,CACxBrB,UAAW,CACTyB,MAAO,aACPC,QAAS,gBACTlB,KAAMd,EACNO,SAAU,UAEX0B,MAAK,SAACC,GACPf,OAT6B,OAW/BjB,EAAO,IAXwB,2CAY9B,CAACF,EAAK2B,EAAqBR,EAASjB,IAMvC,OAAIgB,EACK,6CAIP,cAAC3B,EAAD,UACE,eAACG,EAAD,WACE,sBAAKyC,UAAU,OAAf,UACE,sBAAMA,UAAU,QAAhB,gEACA,qBAAKA,UAAU,cAAcC,QAAS,kBAAMhC,GAAcD,IAA1D,gDAIDA,GACC,sBAAKgC,UAAU,gBAAf,UACE,cAACE,EAAD,CAAaC,MAAOtC,EAAKuC,SAAUtC,IACnC,wBAAQmC,QAASR,EAAjB,mCAGS,KAAZ/B,EACC,cAAC,IAAD,CAAS2C,KA9CK,CACpBC,OAAQ,MACRC,MAAO,MACPC,WAAY,CACVC,SAAU,IA0Ce/C,QAASA,EAASgD,QAxB/B,SAACC,GACfA,EAAEC,OAAOC,gBAyBH,qBAAKb,UAAU,SAAf,4GASM3C,IAAOC,IAAV,msBA0CP4C,EAAc7C,YAAOyD,IAAPzD,CAAH","file":"static/js/35.81e5d08b.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n    $type: String\n    $private: Boolean\n    $writer: String\n    $showAttach: Boolean\n    $inputCreatedAt: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n      type: $type\n      private: $private\n      writer: $writer\n      showAttach: $showAttach\n      inputCreatedAt: $inputCreatedAt\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        writer\n        inputCreatedAt\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n    $private: Boolean\n    $type: String\n    $showAttach: Boolean\n    $inputCreatedAt: String\n  ) {\n    editBoard(\n      id: $id\n      title: $title\n      content: $content\n      link: $link\n      private: $private\n      type: $type\n      showAttach: $showAttach\n      inputCreatedAt: $inputCreatedAt\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_POPUP = gql`\n  mutation editPopup($up: String!, $url: String, $link: String) {\n    editPopup(up: $up, url: $url, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_REPLY = gql`\n  mutation createReply($boardId: Int!, $content: String!) {\n    createReply(boardId: $boardId, content: $content) {\n      ok\n      err\n    }\n  }\n`;\nexport const EDIT_REPLY = gql`\n  mutation editReply($replyId: Int!, $content: String) {\n    editReply(replyId: $replyId, content: $content) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_REPLY = gql`\n  mutation deleteReply($replyId: Int!) {\n    deleteReply(replyId: $replyId) {\n      ok\n      err\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & .list-description {\n    margin: 8px 0;\n    width: 800px;\n  }\n\n  & .list-title {\n    display: inline-block;\n    min-width: 100px;\n  }\n\n  & .list-href {\n    margin-left: 30px;\n  }\n\n  & .button-group {\n    display: inline-block;\n    margin-left: 15px;\n  }\n\n  & .button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover {\n      color: red;\n      transition: 0.2s linear;\n    }\n  }\n\n  & .edit-input {\n    display: block;\n    width: 400px;\n    margin: 8px 0;\n  }\n\n  & .delete-button {\n    margin-left: 5px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & .input-row {\n    margin: 5px 0;\n    max-width: 800px;\n  }\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { Container } from \"../LinkManager/styles\";\nimport styled from \"@emotion/styled\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  CREATE_BOARD,\n  GET_BOARD_BY_CATEGORY,\n} from \"../../../queries/adminQuery\";\nimport {\n  createBoard,\n  createBoardVariables,\n  getBoardByCategory,\n  getBoardByCategoryVariables,\n} from \"../../../typings/api\";\nimport YouTube, { Options } from \"react-youtube\";\nimport useInput from \"../../../hooks/useInput\";\nimport { Input } from \"antd\";\nimport { toast } from \"react-toastify\";\n\nconst VideoLink: React.VFC = () => {\n  const [videoId, setVideoId] = useState<string>(\"\");\n  const [url, onChangeUrl, setUrl] = useInput(\"\");\n  const [inputOpen, setInputOpen] = useState<boolean>(false);\n  const { loading, refetch } = useQuery<\n    getBoardByCategory,\n    getBoardByCategoryVariables\n  >(GET_BOARD_BY_CATEGORY, {\n    variables: {\n      category: \"link\",\n    },\n    onCompleted: ({ getBoardByCategory }) => {\n      const { ok, err, data } = getBoardByCategory;\n      if (ok && data && data.length > 0) {\n        if (data[0].link) {\n          setVideoId(data[0].link.split(\"v=\")[1]);\n        }\n      } else {\n        console.log(err);\n      }\n    },\n  });\n\n  const [createBoardMutation] = useMutation<createBoard, createBoardVariables>(\n    CREATE_BOARD,\n    {\n      onCompleted: ({ createBoard }) => {\n        const { ok, err } = createBoard;\n        if (ok) {\n          toast.success(\"성공적으로 업로드 되었습니다\");\n          setUrl(\"\");\n          window.location.reload();\n        } else {\n          console.log(err);\n        }\n      },\n    }\n  );\n\n  const opts: Options = {\n    height: \"350\",\n    width: \"500\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleSubmit = useCallback(async () => {\n    await createBoardMutation({\n      variables: {\n        title: \"video link\",\n        content: \"video-content\",\n        link: url,\n        category: \"link\",\n      },\n    }).then((res) => {\n      refetch();\n    });\n    setUrl(\"\");\n  }, [url, createBoardMutation, refetch, setUrl]);\n\n  const onReady = (e: any) => {\n    e.target.pauseVideo();\n  };\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Content>\n        <div className=\"head\">\n          <span className=\"title\">현재 업로드된 영상</span>\n          <div className=\"head-button\" onClick={() => setInputOpen(!inputOpen)}>\n            링크 올리기\n          </div>\n        </div>\n        {inputOpen && (\n          <div className=\"input-content\">\n            <StyledInput value={url} onChange={onChangeUrl} />\n            <button onClick={handleSubmit}>올리기</button>\n          </div>\n        )}\n        {videoId !== \"\" ? (\n          <YouTube opts={opts} videoId={videoId} onReady={onReady} />\n        ) : (\n          <div className=\"notice\">현재 업로드 된 비디오가 없습니다</div>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default VideoLink;\n\nconst Content = styled.div`\n  & .head {\n    display: flex;\n    align-items: center;\n\n    & .title {\n      font-size: 16px;\n      display: block;\n    }\n\n    & .head-button {\n      padding: 6px 8px;\n      background-color: skyblue;\n      color: white;\n      margin-left: 150px;\n      cursor: pointer;\n    }\n    margin-bottom: 30px;\n  }\n\n  & .input-content {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 10px 5px;\n\n    & button {\n      border: none;\n      background-color: skyblue;\n      color: white;\n      cursor: pointer;\n      padding: 4px 6px;\n      margin-left: 20px;\n    }\n  }\n\n  & .notice {\n    padding: 15px;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  width: 400px;\n`;\n"],"sourceRoot":""}