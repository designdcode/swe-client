{"version":3,"sources":["queries/adminQuery.ts","queries/sharedQuery.ts","pages/Admin/LinkManager/styles.tsx","pages/Admin/LinkManager/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","Container","styled","div","List","Row","LinkManager","useInput","url","onChangeUrl","setUrl","title","onChangeTitle","setTitle","useState","onAdd","setOnAdd","onEdit","setOnEdit","useQuery","data","loading","refetch","useMutation","createLink","editLink","deleteLink","handleAdd","useCallback","a","trim","toast","error","variables","includes","then","ok","success","handleDelete","id","handleEdit","style","backgroundColor","getLinks","map","elem","idx","marginTop","className","placeholder","value","onChange","href","target","rel","onClick","EditOutlined","CheckOutlined","DeleteOutlined","marginBottom","type","PlusOutlined","fontSize"],"mappings":"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","file":"static/js/27.61a4dc44.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & .list-description {\n    margin: 8px 0;\n    width: 800px;\n  }\n\n  & .list-title {\n    display: inline-block;\n    min-width: 100px;\n  }\n\n  & .list-href {\n    margin-left: 30px;\n  }\n\n  & .button-group {\n    display: inline-block;\n    margin-left: 15px;\n  }\n\n  & .button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover {\n      color: red;\n      transition: 0.2s linear;\n    }\n  }\n\n  & .edit-input {\n    display: block;\n    width: 400px;\n    margin: 8px 0;\n  }\n\n  & .delete-button {\n    margin-left: 5px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & .input-row {\n    margin: 5px 0;\n    max-width: 800px;\n  }\n`;\n","import { Container, List, Row } from \"./styles\";\nimport { Input, Button, Divider } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_LINK } from \"../../../queries/sharedQuery\";\nimport { getLinks } from \"../../../typings/api\";\nimport {\n  CREATE_LINK,\n  DELETE_LINK,\n  EDIT_LINK,\n} from \"../../../queries/adminQuery\";\nimport {\n  CheckOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport React, { useCallback, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst LinkManager: React.VFC = () => {\n  const [url, onChangeUrl, setUrl] = useInput(\"\");\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [onAdd, setOnAdd] = useState<boolean>(false);\n  const [onEdit, setOnEdit] = useState<number>(0);\n\n  const { data, loading, refetch } = useQuery<getLinks>(GET_LINK);\n\n  const [createLink] = useMutation(CREATE_LINK);\n  const [editLink] = useMutation(EDIT_LINK);\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  const handleAdd = useCallback(async () => {\n    if (!url.trim() || !url) {\n      toast.error(\"링크를 입력해 주세요\");\n    } else if (!title.trim() || !title) {\n      toast.error(\"사이트 이름을 입력해 주세요\");\n    }\n    await createLink({\n      variables: {\n        url: url.includes(\"http\") ? url : `http://${url}`,\n        title,\n      },\n    }).then(({ data }) => {\n      if (data?.createLink.ok) {\n        setUrl(\"\");\n        setTitle(\"\");\n        toast.success(\"링크가 생성되었습니다\");\n      }\n    });\n    refetch();\n    setOnAdd(false);\n  }, [url, title, createLink, refetch, setUrl, setTitle]);\n\n  const handleDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: {\n          id,\n        },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되었습니다\");\n        }\n      });\n      refetch();\n    },\n    [refetch, deleteLink]\n  );\n\n  const handleEdit = useCallback(\n    async (id: number) => {\n      await editLink({\n        variables: {\n          id,\n          title,\n          url: url.includes(\"http\") ? url : `http://${url}`,\n        },\n      }).then(({ data }) => {\n        if (data?.editLink.ok) {\n          toast.success(\"링크가 수정 되었습니다\");\n        }\n      });\n      setOnEdit(0);\n      setTitle(\"\");\n      setUrl(\"\");\n      refetch();\n    },\n    [title, url, editLink, refetch, setOnEdit, setTitle, setUrl]\n  );\n\n  if (loading) {\n    return <>loading...</>;\n  }\n\n  return (\n    <Container>\n      <List style={{ backgroundColor: \"white\" }}>\n        {data?.getLinks.data?.map((elem, idx) => {\n          return (\n            <div key={idx}>\n              <Divider style={{ marginTop: 5 }} />\n              <div className=\"list-description\">\n                {onEdit === elem?.id ? (\n                  <Input\n                    placeholder={\"사이트 명\"}\n                    className=\"edit-input\"\n                    value={title}\n                    onChange={onChangeTitle}\n                  />\n                ) : (\n                  <span className=\"list-title\">{elem?.title}</span>\n                )}\n                {onEdit === elem?.id ? (\n                  <Input\n                    placeholder={\"링크 URL\"}\n                    className=\"edit-input\"\n                    value={url}\n                    onChange={onChangeUrl}\n                  />\n                ) : (\n                  <a\n                    href={elem?.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"list-href\"\n                  >\n                    {elem?.url}\n                  </a>\n                )}\n                <div className=\"button-group\">\n                  <button\n                    className=\"button edit-button\"\n                    onClick={() => {\n                      if (onEdit === 0) {\n                        setUrl(elem!.url);\n                        setTitle(elem!.title);\n                        setOnEdit(elem!.id);\n                      } else {\n                        handleEdit(elem!.id);\n                      }\n                    }}\n                  >\n                    {onEdit === 0 ? <EditOutlined /> : <CheckOutlined />}\n                  </button>\n                  <button\n                    className=\"button delete-button\"\n                    onClick={() => handleDelete(elem!.id)}\n                  >\n                    <DeleteOutlined />\n                  </button>\n                </div>\n              </div>\n              <Divider style={{ marginBottom: 5 }} />\n            </div>\n          );\n        })}\n      </List>\n      {onAdd && (\n        <Row>\n          <Input\n            placeholder={\"사이트 명\"}\n            className=\"input-row\"\n            value={title}\n            onChange={onChangeTitle}\n          />\n          <Input\n            placeholder={\"링크 URL\"}\n            className=\"input-row\"\n            value={url}\n            onChange={onChangeUrl}\n          />\n        </Row>\n      )}\n      <Row style={{ marginTop: 20 }}>\n        {!onAdd ? (\n          <Button type=\"dashed\" onClick={() => setOnAdd(!onAdd)}>\n            <PlusOutlined style={{ fontSize: 14 }} /> Add Link\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              url.trim() || title.trim() ? handleAdd() : setOnAdd(false)\n            }\n          >\n            생성\n          </Button>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default LinkManager;\n"],"sourceRoot":""}