{"version":3,"sources":["pages/Admin/EditImageBoardPage/styles.tsx","pages/Admin/EditImageBoardPage/index.tsx"],"names":["Container","styled","div","EditImageBoardPage","history","useHistory","useParams","param","subparam","search","useLocation","queryObj","queryString","parse","category","id","useState","board","setBoard","file","setFile","tmpFiles","setTmpFiles","imgUrl","setImgUrl","imgName","setImgName","image","setImage","useInput","link","onChangeLink","setLink","progress","setProgress","isFileNeeded","setIsFileNeeded","isLinkNeeded","setIsLinkNeeded","useEffect","fileSwitcher","linkSwitcher","useQuery","GET_BOARD_BY_ID","variables","parseInt","loading","data","refetch","useMutation","CREATE_IMAGE","onCompleted","createImage","ok","DELETE_IMAGE","deleteImage","err","toast","error","console","log","CREATE_FILE","createFile","DELETE_FILE","deleteFile","success","EDIT_BOARD","editBoard","push","pathname","state","refresh","handleImageRemover","useCallback","trim","fileRemover","handleImageUpload","a","filename","name","fileUploader","handleFileUpload","storage","ref","put","on","snapshot","getDownloadURL","then","url","prev","fileName","boardId","handleDeleteFile","delete","getBoardById","files","images","className","type","onClick","goBack","disabled","includes","LoadingOutlined","bordered","column","xxl","xl","lg","md","sm","xs","layout","Item","label","span","labelStyle","width","placeholder","undefined","value","onChange","length","map","elem","idx","href","download","target","rel","DeleteOutlined","multiple","maxCount","customRequest","callbackFile","status","icon","UploadOutlined","danger","listType","showInfo","src","alt","Text"],"mappings":"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","file":"static/js/34.829853c4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  & .attach-group {\n    display: flex;\n    margin: 5px 0;\n  }\n\n  & .attach-button {\n    margin-left: 15px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      transition: linear 0.2s;\n    }\n  }\n  & .button-group {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  img {\n    object-fit: contain;\n    width: 300px;\n    height: 400px;\n  }\n`;\n","import { Descriptions, Input, Typography, Upload } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { Container } from \"./styles\";\nimport {\n  getBoardById,\n  getBoardByIdVariables,\n  getBoardById_getBoardById_data,\n  getBoardById_getBoardById_data_files,\n  getBoardById_getBoardById_data_images,\n} from \"../../../typings/api\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD_BY_ID } from \"../../../queries/sharedQuery\";\nimport useInput from \"../../../hooks/useInput\";\nimport { Button } from \"../EditBoardPage/styles\";\nimport {\n  UploadOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { storage } from \"../../../utils/firebase\";\nimport {\n  CREATE_FILE,\n  CREATE_IMAGE,\n  DELETE_FILE,\n  DELETE_IMAGE,\n  EDIT_BOARD,\n} from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\nimport { fileSwitcher, linkSwitcher } from \"../../../utils/switcher\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n  subparam: string;\n}\n\nconst EditImageBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { param, subparam } = useParams<paramProps>();\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const { category, id } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [file, setFile] =\n    useState<(getBoardById_getBoardById_data_files | null)[]>();\n  const [tmpFiles, setTmpFiles] = useState<{ url: string; fileName: string }[]>(\n    []\n  );\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [image, setImage] =\n    useState<getBoardById_getBoardById_data_images | null>();\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [progress, setProgress] = useState<number>(0);\n\n  const [isFileNeeded, setIsFileNeeded] = useState<boolean>(false);\n  const [isLinkNeeded, setIsLinkNeeded] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsFileNeeded(fileSwitcher(subparam as string));\n    setIsLinkNeeded(linkSwitcher(subparam as string));\n  }, [subparam]);\n\n  const { loading, data, refetch } = useQuery<\n    getBoardById,\n    getBoardByIdVariables\n  >(GET_BOARD_BY_ID, {\n    variables: {\n      id: parseInt(id as string, 10),\n    },\n  });\n\n  const [createImage] = useMutation(CREATE_IMAGE, {\n    onCompleted: ({ createImage }) => {\n      const { ok } = createImage;\n      if (ok) {\n        setProgress(0);\n        if (refetch) refetch();\n      }\n    },\n  });\n  const [deleteImage] = useMutation(DELETE_IMAGE, {\n    onCompleted: ({ deleteImage }) => {\n      const { ok, err } = deleteImage;\n      if (ok) {\n        if (refetch) refetch();\n        toast.error(\"이미지가 삭제 되었습니다\");\n      } else {\n        console.log(err);\n        toast.error(err);\n      }\n    },\n  });\n  const [createFile] = useMutation(CREATE_FILE, {\n    onCompleted: ({ createFile }) => {\n      const { ok } = createFile;\n      if (ok) {\n        setProgress(0);\n        if (refetch) refetch();\n      }\n    },\n  });\n  const [deleteFile] = useMutation(DELETE_FILE, {\n    onCompleted: ({ deleteFile }) => {\n      const { ok, err } = deleteFile;\n      if (ok) {\n        toast.success(\"파일이 삭제 되었습니다\");\n        if (refetch) refetch();\n      } else {\n        console.log(err);\n        toast.error(err);\n      }\n    },\n  });\n\n  const [editBoard] = useMutation(EDIT_BOARD, {\n    onCompleted: ({ editBoard }) => {\n      const { ok, err } = editBoard;\n      if (ok) {\n        toast.success(\"게시물이 수정 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  const handleImageUpload = useCallback(\n    async (file: any) => {\n      handleImageRemover();\n      setProgress(progress + 1);\n      const filename = file.name;\n      setImgName(file.name);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        filename,\n        setImgUrl,\n        progress,\n        setProgress,\n        createImage,\n        parseInt(id as string, 10)\n      );\n    },\n    [category, progress, handleImageRemover, createImage, id]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then(async (url) => {\n              setTmpFiles((prev) => [\n                ...prev,\n                { url: url, fileName: file.name },\n              ]);\n              await createFile({\n                variables: {\n                  url,\n                  fileName: file.name,\n                  boardId: parseInt(id as string, 10),\n                },\n                onCompleted: ({ createFile }) => {\n                  const { ok, err } = createFile;\n                  if (ok) {\n                    toast.success(\"파일이 업로드 되었습니다\");\n                    if (refetch) refetch();\n                  } else {\n                    toast.error(\"파일 업로드에 실패 하였습니다\");\n                    console.log(err);\n                  }\n                },\n              });\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [createFile, id, category, progress, refetch]\n  );\n\n  const handleDeleteFile = useCallback(\n    async (id?: number, name?: string) => {\n      storage.ref(`/files/${category}/${name}`).delete();\n      await deleteFile({\n        variables: {\n          id,\n        },\n      });\n    },\n    [deleteFile, category]\n  );\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n      setLink(data.getBoardById.data.link || \"\");\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.files\n    ) {\n      setFile(data.getBoardById.data.files);\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.images\n    ) {\n      setImage(data.getBoardById.data.images[0]);\n      setImgName(data.getBoardById.data.images[0]?.fileName);\n    }\n  }, [data, setBoard, setLink]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Container>\n      <div className=\"button-group\">\n        <Button type=\"ghost\" onClick={() => history.goBack()}>\n          뒤로\n        </Button>\n        <Button\n          type=\"primary\"\n          disabled={progress === 0 ? false : true}\n          onClick={() =>\n            editBoard({\n              variables: {\n                id: parseInt(id as string, 10),\n                link: link.includes(\"http\") ? link : `http://${link}`,\n              },\n            })\n          }\n        >\n          {progress === 0 ? (\n            \"완료\"\n          ) : (\n            <>\n              <LoadingOutlined /> 파일 / 이미지 업로딩 중\n            </>\n          )}\n        </Button>\n      </div>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        {isLinkNeeded && (\n          <Descriptions.Item label=\"링크\" span={4} labelStyle={{ width: 100 }}>\n            <Input\n              placeholder={board?.link || undefined}\n              value={link}\n              onChange={onChangeLink}\n            />\n          </Descriptions.Item>\n        )}\n        {isFileNeeded && (\n          <Descriptions.Item label=\"파일\" span={4} labelStyle={{ width: 100 }}>\n            {file && file.length !== 0 ? (\n              <>\n                {file.map((elem, idx) => {\n                  return (\n                    <div key={idx} className=\"attach-group\">\n                      <a\n                        href={elem?.url}\n                        download\n                        target={\"_blank\"}\n                        rel=\"noreferrer\"\n                      >\n                        {elem?.fileName}\n                      </a>\n                      <button\n                        className=\"attach-button\"\n                        onClick={() =>\n                          handleDeleteFile(elem?.id, elem?.fileName)\n                        }\n                      >\n                        <DeleteOutlined />\n                      </button>\n                    </div>\n                  );\n                })}\n              </>\n            ) : tmpFiles.length === 0 ? (\n              <div>첨부파일 없음</div>\n            ) : (\n              <></>\n            )}\n            <Upload\n              multiple={true}\n              maxCount={4}\n              className=\"upload-list-inline\"\n              customRequest={({ file }) => handleFileUpload(file)}\n              onChange={({ file: callbackFile }) => {\n                if (tmpFiles.length !== 0) {\n                  callbackFile.status = \"done\";\n                } else {\n                  callbackFile.status = \"removed\";\n                }\n              }}\n            >\n              <Button icon={<UploadOutlined />}>파일 업로드</Button>\n            </Upload>\n          </Descriptions.Item>\n        )}\n        <Descriptions.Item label=\"이미지\" span={4} labelStyle={{ width: 100 }}>\n          {image && (\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                fileRemover(\n                  \"images\",\n                  category as string,\n                  image.fileName,\n                  setImgUrl\n                );\n                deleteImage({ variables: { id: image.id } });\n              }}\n            >\n              이미지 삭제\n            </Button>\n          )}\n          <Upload\n            listType=\"picture\"\n            customRequest={({ file }) => {\n              if (image) {\n                deleteImage({ variables: { id: image && image.id } });\n              }\n              handleImageUpload(file);\n            }}\n            progress={{ showInfo: true }}\n            onChange={({ file: callbackFile }) => {\n              if (imgUrl) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            maxCount={1}\n          >\n            <Button icon={<UploadOutlined />}>이미지 업로드</Button>\n          </Upload>\n          {image ? (\n            <img src={image.url} alt={image.fileName} />\n          ) : (\n            <Typography.Text>업로드 된 이미지가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n      </Descriptions>\n    </Container>\n  );\n};\n\nexport default EditImageBoardPage;\n"],"sourceRoot":""}