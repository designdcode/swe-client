{"version":3,"sources":["../../../../src/react/parser/index.ts","../../../../src/react/data/OperationData.ts","../../../../src/react/data/QueryData.ts","../../../../../src/react/hooks/utils/useBaseQuery.ts","../../../../../src/react/hooks/utils/useDeepMemo.ts","../../../../../src/react/hooks/utils/useAfterFastRefresh.ts","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../node_modules/antd/es/descriptions/Cell.js","../node_modules/antd/es/descriptions/Row.js","../node_modules/antd/es/descriptions/Item.js","../node_modules/antd/es/descriptions/index.js"],"names":["DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","variables","cached","get","fragments","definitions","filter","x","kind","queries","operation","mutations","subscriptions","length","definition","options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","requiredOperationName","usedOperationName","onNewData","runLazy","previous","Object","create","runLazyQuery","lazyOptions","obsRefetch","currentObservable","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","query","removeQuerySubscription","removeObservable","updateObservableQuery","getExecuteSsrResult","getExecuteResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","Promise","resolve","startQuerySubscription","afterExecute","lazy","ssrInitiated","handleErrorOrCompleted","bind","result","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","displayName","fetchPolicy","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","currentSubscription","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","last","resetLastResults","currentResult","getCurrentResult","partial","errors","graphQLErrors","assign","getLastResult","keys","previousData","resetQueryStoreErrors","onCompleted","onError","unsubscribe","andDelete","useBaseQuery","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","then","memoFn","key","ref","value","useDeepMemo","queryResult","__DEV__","effectFn","useAfterFastRefresh","CloseOutlined","props","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","CheckOutlined","CheckOutlinedSvg","notEmpty","val","Cell","_ref","_classNames","itemPrefixCls","component","span","className","style","labelStyle","contentStyle","bordered","label","content","colon","Component","classNames","_defineProperty","concat","colSpan","renderCells","items","_ref2","prefixCls","showLabel","showContent","rootLabelStyle","rootContentStyle","map","_ref3","index","_ref3$props","_ref3$props$prefixCls","_ref3$props$span","_extends","Row","descContext","DescriptionsContext","vertical","row","DescriptionsItem","DEFAULT_COLUMN_MAP","xxl","xl","lg","md","sm","xs","getFilledItem","node","rowRestCol","clone","cloneElement","devWarning","Descriptions","customizePrefixCls","title","extra","_ref$column","column","_ref$colon","layout","size","_React$useContext","ConfigContext","getPrefixCls","direction","_React$useState","_React$useState2","_slicedToArray","screens","setScreens","mergedColumn","_typeof","i","responsiveArray","breakpoint","getColumn","token","ResponsiveObserve","newScreens","rows","childNodes","toArray","n","tmpRow","forEach","_a","mergedSpan","push","getRows","contextValue","Provider","Item"],"mappings":"yGAAA,0GASYA,EATZ,QASA,SAAYA,GACV,qBACA,2BACA,mCAHF,CAAYA,MAAY,KAYxB,IAAMC,EAAQ,IAAIC,IAEZ,SAAUC,EAAcC,GAC5B,IAAIC,EACJ,OAAQD,GACN,KAAKJ,EAAaM,MAChBD,EAAO,QACP,MACF,KAAKL,EAAaO,SAChBF,EAAO,WACP,MACF,KAAKL,EAAaQ,aAChBH,EAAO,eAGX,OAAOA,EAIH,SAAUI,EAAOC,GACrB,IAGIC,EAAWP,EAHTQ,EAASX,EAAMY,IAAIH,GACzB,GAAIE,EAAQ,OAAOA,EAInB,QACE,cAAU,KAAe,EACzB,oBAAuB,EAAvB,yJAGA,8BAEF,IAAME,EAAYJ,EAASK,YAAYC,QACrC,SAACC,GAAsB,6BAAAA,EAAEC,QAGrBC,EAAUT,EAASK,YAAYC,QACnC,SAACC,GACC,MAAW,wBAAXA,EAAEC,MAAkD,UAAhBD,EAAEG,aAGpCC,EAAYX,EAASK,YAAYC,QACrC,SAACC,GACC,MAAW,wBAAXA,EAAEC,MAAkD,aAAhBD,EAAEG,aAGpCE,EAAgBZ,EAASK,YAAYC,QACzC,SAACC,GACC,MAAW,wBAAXA,EAAEC,MAAkD,iBAAhBD,EAAEG,aAG1C,QACE,aAAW,EAAM,QACdD,EAAQI,QAAUF,EAAUE,QAAUD,EAAcC,OACvD,yHAEA,uBAEF,EACE,QAAQ,EAAS,QAAgB,EAAG,OAAoB,IAEnD,oBAAQ,EAAQ,OAAQ,EAAM,SAAa,QAAoB,8EAClE,YAAqB,OAAU,aAAM,EAAc,OADe,sBAElE,SAFkE,qFAKH,8CACnE,EAAKJ,EAAQI,OAAW,EAAU,MAAM,WAAE,EAAO,QAAa,WAExD,IAAc,c,IAClB,EAAS,SACP,EACF,EAAE,OACA,EAGF,EAEK,oBAAkC,IAAtB,EAAM,OAAgB,gEACrC,SADqC,uFAIoB,6BAC7D,MAAY,EAAW,GAEvB,EAAIC,EAAmB,qBAAoB,GAO3C,MAAU,MANR,EAAO,MAAsB,SAAX,EAAW,UAC9B,aAEA,OAG2B,KAAC,eAE9B,OADC,MAAO,EAAQ,GAChB,I,iCCnHD,6DASA,aAUE,WAAYC,EAAmCC,GATxC,KAAAC,WAAqB,EACrB,KAAAC,gBAA2C,GAG3C,KAAAF,QAAe,GAGd,KAAAD,QAAmC,GAGzCI,KAAKJ,QAAUA,GAAY,GAC3BI,KAAKH,QAAUA,GAAW,GA2D9B,OAxDS,YAAAI,WAAP,WACE,OAAOD,KAAKJ,SAGP,YAAAM,WAAP,SACEC,EACAC,QAAA,IAAAA,OAAA,GAEIA,IAAkB,YAAMJ,KAAKJ,QAASO,KACxCH,KAAKD,gBAAkBC,KAAKJ,SAE9BI,KAAKJ,QAAUO,GAOP,YAAAE,QAAV,WACEL,KAAKF,WAAY,GAGT,YAAAQ,cAAV,WACE,IAAMC,EACHP,KAAKJ,SAAWI,KAAKJ,QAAQW,QAC7BP,KAAKH,SAAWG,KAAKH,QAAQU,OAEhC,QACE,cACA,wKAGA,oBAEF,IAAIC,GAAQ,EAMZ,OALID,IAAWP,KAAKO,SAClBC,GAAQ,EACRR,KAAKO,OAASA,EACdP,KAAKS,WAEA,CACLF,OAAQP,KAAKO,OACbC,MAAK,IAIC,YAAAE,mBAAV,SAA6B7B,EAAwBN,GACnD,IAAMgB,EAAY,YAAOV,GACnB8B,EAAwB,YAAcpC,GACtCqC,EAAoB,YAAcrB,EAAUhB,MAClD,QACE,YAAU,EAASA,OACnB,eAAaoC,EAAqB,uBAC7BA,EAAqB,WAAWC,EAAiB,sBACtD,4BAEN,EAvEA,I,2HCwBA,cAkBE,WAAY,G,IACVhB,EAAO,UACPC,EAAO,UACPgB,EAAS,YAHX,EASE,YAAMjB,EAASC,IAAQ,K,OArBjB,EAAAiB,SAAmB,EAEnB,EAAAC,SAQJC,OAAOC,OAAO,MAkGV,EAAAC,aAAe,SAACtB,GACtB,EAAKa,UACL,EAAKK,SAAU,EACf,EAAKK,YAAcvB,EACnB,EAAKiB,aA8UC,EAAAO,WAAa,SAACtC,GAA+B,MACnD,OAAsB,QAAtB,IAAKuC,yBAAiB,eAAEC,QAAQxC,IAE1B,EAAAyC,aAAe,SACrBC,GACqC,MAClC,OAAsB,QAAtB,IAAKH,yBAAiB,eAAEI,UAAUD,IAE/B,EAAAE,eAAiB,SACvBC,GAGU,MACP,OAAsB,QAAtB,IAAKN,yBAAiB,eAAEO,YAAYD,IAEjC,EAAAE,gBAAkB,SAACC,G,MACH,QAAtB,IAAKT,yBAAiB,SAAEU,aAAaD,IAG/B,EAAAE,eAAiB,W,MACD,QAAtB,IAAKX,yBAAiB,SAAEY,eAGlB,EAAAC,mBAAqB,SAI3BtC,GAIC,MACE,OAAsB,QAAtB,IAAKyB,yBAAiB,eAAEc,gBAAgBvC,IAxc3C,EAAKiB,UAAYA,E,EAqdrB,OAjfkD,iBA+BzC,YAAAuB,QAAP,WACEpC,KAAKM,gBAEC,MAAkBN,KAAKC,aAArBoC,EAAI,OAAEC,EAAK,QASnB,OARID,GAAQC,IAAUtC,KAAKe,SAASuB,SAClCtC,KAAKuC,0BACLvC,KAAKwC,kBAAkBH,GACvBrC,KAAKe,SAASuB,MAAQA,GAGxBtC,KAAKyC,wBAEEzC,KAAK0C,uBAAyB1C,KAAK2C,oBAGrC,YAAAC,YAAP,WACE,OAAQ5C,KAAKc,QAUT,CAACd,KAAKkB,aAAclB,KAAKoC,WATzB,CACEpC,KAAKkB,aACL,CACE2B,SAAS,EACTC,cAAe,IAAcC,MAC7BC,QAAQ,EACRC,UAAMC,KAOT,YAAAC,UAAP,sBACQvD,EAAUI,KAAKC,aACrB,OAAIL,EAAQyC,OAAwB,IAAhBzC,EAAQwD,KACrB,IAAIC,SAAQ,SAAAC,GAAW,SAAKC,uBAAL,OAGzB,YAAAC,aAAP,SAAoB,G,IAAE,QAAF,MAAuC,GAAE,GAAvCC,YAAI,IAAG,GAAK,EAChCzD,KAAKF,WAAY,EACjB,IAAMF,EAAUI,KAAKC,aAUrB,OATID,KAAKqB,oBAAsBrB,KAAK0D,gBAClC1D,KAAKuD,yBAGFE,IAAQzD,KAAKc,SAChBd,KAAK2D,yBAGP3D,KAAKD,gBAAkBH,EAChBI,KAAKK,QAAQuD,KAAK5D,OAGpB,YAAAS,QAAP,WACET,KAAKuC,0BACLvC,KAAKwC,kBAAiB,UACfxC,KAAKe,SAAS8C,QAGhB,YAAA5D,WAAP,WACE,IAAML,EAAU,YAAMK,WAAU,WAkBhC,OAhBID,KAAKmB,cACPvB,EAAQd,UAAY,2BACfc,EAAQd,WACRkB,KAAKmB,YAAYrC,WAEtBc,EAAQC,QAAO,2BACVD,EAAQC,SACRG,KAAKmB,YAAYtB,UAKpBG,KAAKc,gBACAlB,EAAQyC,KAGVzC,GAGF,YAAA8D,aAAP,WACE,OAAO1D,KAAKH,SAAWG,KAAKH,QAAQiE,gBAU9B,YAAApB,oBAAR,WACQ,MAAgB1C,KAAKC,aAAnBmD,EAAG,MAAEf,EAAI,OACX0B,GAAsB,IAARX,EACdY,EAAgBhE,KAAKM,gBAAgBC,OAAO0D,sBAE5CC,EAAa,aACjBrB,SAAS,EACTC,cAAe,IAAcD,QAC7BG,QAAQ,EACRC,UAAMC,EACNiB,OAAO,EACP5D,OAAQP,KAAKO,QACVP,KAAKoE,yBAKV,GAAIL,IAAgB/D,KAAK0D,gBAAkBM,GAEzC,OADAhE,KAAKe,SAAS8C,OAASK,EAChBA,EAGT,GAAIlE,KAAK0D,eAAgB,CACvB,IAAMG,EAAS7D,KAAK2C,oBAAsBuB,EAI1C,OAHIL,EAAOhB,UAAYR,GACrBrC,KAAKH,QAAQiE,eAAgBO,gBAAgBrE,MAAM,WAAM,eAEpD6D,IAIH,YAAAS,8BAAR,WACE,IAAM1E,EAAUI,KAAKC,aACrBD,KAAKU,mBAAmBd,EAAQ0C,MAAO,IAAa7D,OACpD,IAAM8F,EAAc3E,EAAQ2E,aAAe,QAY3C,OAPEvE,KAAK0D,gBACoB,iBAAxB9D,EAAQ4E,aACiB,sBAAxB5E,EAAQ4E,cAEV5E,EAAQ4E,YAAc,eAGxB,2BACK5E,GAAO,CACV2E,YAAW,EACX1E,QAASD,EAAQC,WAIb,YAAA4E,0BAAR,WAUE,GANIzE,KAAK0D,iBACP1D,KAAKqB,kBAAoBrB,KAAKH,QAASiE,eAAgBY,iBACrD1E,KAAKC,gBAIJD,KAAKqB,kBAAmB,CAC3B,IAAMsD,EAAyB3E,KAAKsE,gCAEpCtE,KAAKe,SAAS4D,uBAAsB,2BAC/BA,GAAsB,CACzBC,cAAU,IAEZ5E,KAAKqB,kBAAoBrB,KAAKM,gBAAgBC,OAAOsE,WAAU,eAC1DF,IAGD3E,KAAK0D,gBACP1D,KAAKH,QAASiE,eAAgBgB,sBAC5B9E,KAAKqB,kBACLsD,KAMA,YAAAlC,sBAAR,WAEE,GAAKzC,KAAKqB,kBAAV,CAKA,IAAM0D,EAA4B,OAAH,IAAG,CAAH,eAC1B/E,KAAKsE,iCAA+B,CACvCM,cAAU,IAGR5E,KAAKC,aAAaoC,KACpBrC,KAAKe,SAAS4D,uBAAyBI,EAKtC,YAAMA,EAA2B/E,KAAKe,SAAS4D,0BAEhD3E,KAAKe,SAAS4D,uBAAyBI,EACvC/E,KAAKqB,kBACFnB,WAAW6E,GAKXC,OAAM,qBAxBThF,KAAKyE,6BAkCD,YAAAlB,uBAAR,SAA+B1C,GAA/B,gBAA+B,IAAAA,MAAwBb,KAAKa,WACtDb,KAAKiF,qBAAuBjF,KAAKC,aAAaoC,OAElDrC,KAAKiF,oBAAsBjF,KAAKqB,kBAAmB6D,UAAU,CAC3DC,KAAM,SAAC,G,IAAEtC,EAAO,UAAEC,EAAa,gBAAEG,EAAI,OAC7BmC,EAAiB,EAAKrE,SAAS8C,OAInCuB,GACAA,EAAevC,UAAYA,GAC3BuC,EAAetC,gBAAkBA,GACjC,YAAMsC,EAAenC,KAAMA,IAK7BpC,KAEFwE,MAAO,YAEL,GADA,EAAKC,sBACA,EAAMC,eAAe,iBAAkB,MAAM,EAElD,IAAMH,EAAiB,EAAKrE,SAAS8C,QAElCuB,GAAkBA,EAAevC,UACjC,YAAM,EAAO,EAAK9B,SAASsE,UAE5B,EAAKtE,SAASsE,MAAQ,EACtBxE,UAMA,YAAAyE,mBAAR,WACEtF,KAAKuC,0BASG,IAAAlB,EAAsBrB,KAAL,kBACzB,GAAIqB,EAAmB,CACrB,IAAMmE,EAAOnE,EAAiB,KAC9B,IACEA,EAAkBoE,mBAClBzF,KAAKuD,yBAFP,QAIElC,EAAiB,KAAWmE,KAK1B,YAAA7C,iBAAR,WACE,IAAIkB,EAAS7D,KAAKoE,wBACZxE,EAAUI,KAAKC,aAYrB,GAAIL,EAAQyC,KACVwB,EAAS,OAAH,IAAG,CAAH,eACDA,GAAM,CACTZ,UAAMC,EACNmC,WAAOnC,EACPL,SAAS,EACTC,cAAe,IAAcC,MAC7BC,QAAQ,SAEL,GAAIhD,KAAKqB,kBAAmB,CAEjC,IAAMqE,EAAgB1F,KAAKqB,kBAAkBsE,mBACrC1C,EAAkDyC,EAA9C,KAAE7C,EAA4C6C,EAArC,QAAEE,EAAmCF,EAA5B,QAAE5C,EAA0B4C,EAAb,cAAEG,EAAWH,EAAL,OAC/CL,EAAUK,EAAL,MAiBX,GAbIG,GAAUA,EAAOnG,OAAS,IAC5B2F,EAAQ,IAAI,IAAY,CAAES,cAAeD,KAG3ChC,EAAS,OAAH,IAAG,CAAH,eACDA,GAAM,CACTZ,KAAI,EACJJ,QAAO,EACPC,cAAa,EACbuC,MAAK,EACLrC,QAAQ,IAGNH,QAEG,GAAIwC,EACTrE,OAAO+E,OAAOlC,EAAQ,CACpBZ,MAAOjD,KAAKqB,kBAAkB2E,iBAAoB,IAC/C/C,WAEA,CACG,IAAAuB,EAAgBxE,KAAKqB,kBAAkBzB,QAA5B,YAEnB,GAD2BA,EAAL,gBAGpBgG,KACE3C,GAAqC,IAA7BjC,OAAOiF,KAAKhD,GAAMvD,SACZ,eAAhB8E,EAeA,OALAxD,OAAO+E,OAAOlC,EAAQ,CACpBhB,SAAS,EACTC,cAAe,IAAcD,UAE/BgB,EAAOvC,UACAuC,GAKbA,EAAOtD,OAASP,KAAKO,OAErBP,KAAKE,WAAWN,GAAS,GAEzB,IAAMwF,EAAiBpF,KAAKe,SAAS8C,OAqBrC,OAnBA7D,KAAKe,SAAS8B,QACZuC,GAAkBA,EAAevC,UAAW,EAO9CgB,EAAOqC,aAAed,IACnBA,EAAenC,MAAQmC,EAAec,cAEzClG,KAAKe,SAAS8C,OAASA,EAMvB7D,KAAKqB,mBAAqBrB,KAAKqB,kBAAkB8E,wBAE1CtC,GAGD,YAAAF,uBAAR,WACE,GAAK3D,KAAKqB,mBAAsBrB,KAAKe,SAAS8C,OAA9C,CAEM,MAA2B7D,KAAKe,SAAS8C,OAAvCZ,EAAI,OAAEJ,EAAO,UAAEwC,EAAK,QAE5B,IAAKxC,EAAS,CACN,MAMF7C,KAAKC,aALPqC,EAAK,QACLxD,EAAS,YACTsH,EAAW,cACXC,EAAO,UACPhE,EAAI,OAIN,GACErC,KAAKD,kBACJC,KAAKe,SAAS8B,SACf,YAAM7C,KAAKD,gBAAgBuC,MAAOA,IAClC,YAAMtC,KAAKD,gBAAgBjB,UAAWA,GAEtC,QAGEsH,GAAgBf,GAAUhD,EAEnBgE,GAAWhB,GACpBgB,EAAQhB,GAFRe,EAAYnD,MAOV,YAAAV,wBAAR,WACMvC,KAAKiF,sBACPjF,KAAKiF,oBAAoBqB,qBAClBtG,KAAKiF,sBAIR,YAAAzC,iBAAR,SAAyB+D,GACnBvG,KAAKqB,oBACPrB,KAAKqB,kBAAL,gBACIkF,UACKvG,KAAKqB,oBAuCV,YAAA+C,sBAAR,W,MACE,MAAO,CACLtF,UAAiC,QAAtB,EAAAkB,KAAKqB,yBAAiB,eAAEvC,UACnCwC,QAAStB,KAAKoB,WACdK,UAAWzB,KAAKuB,aAChBK,YAAa5B,KAAK0B,eAClBK,aAAc/B,KAAK6B,gBACnBI,YAAajC,KAAKgC,eAClBG,gBAAiBnC,KAAKkC,qBAG5B,EAjfA,C,OAAkD,G,YCf5C,SAAUsE,EACdlE,EACA1C,EACA6D,QAAA,IAAAA,OAAA,GAEA,IAAM5D,EAAU,qBAAW,eACrB,EAAsB,sBAAW,SAAAT,GAAK,OAAAA,EAAA,IAAO,GAA5CqH,EAAI,KAAEC,EAAW,KAClBC,EAAiB/G,EAAS,2BAAMA,GAAO,CAAE0C,MAAK,IAAK,CAAEA,MAAK,GAE1DsE,EAAe,mBACfC,EAAYD,EAAaE,UAC7BF,EAAaE,QAAU,IAAI,EAA6B,CACtDlH,QAAS+G,EACT9G,QAAO,EACPgB,UAAS,WACFgG,EAAUnD,eAWbgD,IAJArD,QAAQC,UAAUyD,MAAK,WAAM,OAAAH,EAAaE,SAAWF,EAAaE,QAAQhH,WAAa4G,WAU/FG,EAAU3G,WAAWyG,GACrBE,EAAUhH,QAAUA,EAKpB,IAUMgE,ECxDF,SACJmD,EACAC,GAEA,IAAMC,EAAM,mBAMZ,OAJKA,EAAIJ,SAAY,YAAMG,EAAKC,EAAIJ,QAAQG,OAC1CC,EAAIJ,QAAU,CAAEG,IAAG,EAAEE,MAAOH,MAGvBE,EAAIJ,QAAQK,MD8CJC,EACb,WAAM,OAAC3D,EAAOoD,EAAUjE,cAAgBiE,EAAlC,YAXK,CACXjH,QAAS,2BACJ+G,GAAc,CACjBN,aAAS,EACTD,iBAAa,IAEfvG,QAAO,EACP4G,KAAI,IAQAY,EAAc5D,EACfI,EAAyC,GACzCA,EAwBL,OAtBIyD,SEhEA,SAA8BC,GAClC,GAAID,QAAS,CACX,IAAM,EAAa,kBAAO,GAC1B,qBAAU,WACR,OAAO,WAEL,EAAWR,SAAU,KAEtB,IAEH,qBAAU,YACmB,IAAvB,EAAWA,UAEb,EAAWA,SAAU,EACrBS,OAED,KFkDHC,CAAoBd,GAGtB,qBAAU,WACR,OAAO,WACLG,EAAUpG,UAGVmG,EAAaE,aAAU,KAExB,IAEH,qBAAU,WAAM,OAAAD,EAAUrD,aAAa,CAAEC,KAAzB,MAAkC,CAChD4D,EAAYxE,QACZwE,EAAYvE,cACZuE,EAAYhC,MACZgC,EAAYpE,KACZ4D,EAAUxF,oBAGLwC,I,oDG/FM4D,EADK,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+TAAmU,KAAQ,QAAS,MAAS,Y,QCMpfA,EAAgB,SAAuBC,EAAOR,GAChD,OAAoBS,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIH,GAAQ,GAAI,CAC5FR,IAAKA,EACLY,KAAMC,MAIVN,EAAclD,YAAc,gBACAoD,iBAAiBF,I,oDCb9BO,EADK,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+LAAmM,KAAQ,QAAS,MAAS,Y,QCMpXA,EAAgB,SAAuBN,EAAOR,GAChD,OAAoBS,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIH,GAAQ,GAAI,CAC5FR,IAAKA,EACLY,KAAMG,MAIVD,EAAczD,YAAc,gBACAoD,iBAAiBK,I,kKCX7C,SAASE,EAASC,GAChB,YAAejF,IAARiF,GAA6B,OAARA,EAG9B,IA2CeC,EA3CJ,SAAcC,GACvB,IAcMC,EAdFC,EAAgBF,EAAKE,cACrBC,EAAYH,EAAKG,UACjBC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAQN,EAAKM,MACbC,EAAaP,EAAKO,WAClBC,EAAeR,EAAKQ,aACpBC,EAAWT,EAAKS,SAChBC,EAAQV,EAAKU,MACbC,EAAUX,EAAKW,QACfC,EAAQZ,EAAKY,MACbC,EAAYV,EAEhB,OAAIM,EAGkBnB,gBAAoBuB,EAAW,CACjDR,UAAWS,KAAYb,EAAc,GAAIc,YAAgBd,EAAa,GAAGe,OAAOd,EAAe,eAAgBL,EAASa,IAASK,YAAgBd,EAAa,GAAGe,OAAOd,EAAe,iBAAkBL,EAASc,IAAWV,GAAcI,GAC3OC,MAAOA,EACPW,QAASb,GACRP,EAASa,IAAuBpB,gBAAoB,OAAQ,CAC7DgB,MAAOC,GACNG,GAAQb,EAASc,IAAyBrB,gBAAoB,OAAQ,CACvEgB,MAAOE,GACNG,IAGerB,gBAAoBuB,EAAW,CACjDR,UAAWS,IAAW,GAAGE,OAAOd,EAAe,SAAUG,GACzDC,MAAOA,EACPW,QAASb,GACKd,gBAAoB,MAAO,CACzCe,UAAW,GAAGW,OAAOd,EAAe,oBACnCQ,GAAsBpB,gBAAoB,OAAQ,CACnDe,UAAWS,IAAW,GAAGE,OAAOd,EAAe,eAAgBa,YAAgB,GAAI,GAAGC,OAAOd,EAAe,mBAAoBU,IAChIN,MAAOC,GACNG,GAAQC,GAAwBrB,gBAAoB,OAAQ,CAC7De,UAAWS,IAAW,GAAGE,OAAOd,EAAe,kBAC/CI,MAAOE,GACNG,MC3CL,SAASO,EAAYC,EAAOnB,EAAMoB,GAChC,IAAIR,EAAQZ,EAAKY,MACbS,EAAYrB,EAAKqB,UACjBZ,EAAWT,EAAKS,SAChBN,EAAYiB,EAAMjB,UAClBjK,EAAOkL,EAAMlL,KACboL,EAAYF,EAAME,UAClBC,EAAcH,EAAMG,YACpBC,EAAiBJ,EAAMb,WACvBkB,EAAmBL,EAAMZ,aAC7B,OAAOW,EAAMO,KAAI,SAAUC,EAAOC,GAChC,IAAIC,EAAcF,EAAMtC,MACpBqB,EAAQmB,EAAYnB,MACpBnE,EAAWsF,EAAYtF,SACvBuF,EAAwBD,EAAYR,UACpCnB,OAA0C,IAA1B4B,EAAmCT,EAAYS,EAC/DzB,EAAYwB,EAAYxB,UACxBC,EAAQuB,EAAYvB,MACpBC,EAAasB,EAAYtB,WACzBC,EAAeqB,EAAYrB,aAC3BuB,EAAmBF,EAAYzB,KAC/BA,OAA4B,IAArB2B,EAA8B,EAAIA,EACzCnD,EAAM+C,EAAM/C,IAEhB,MAAyB,kBAAduB,EACWb,gBAAoBS,EAAM,CAC5CnB,IAAK,GAAGoC,OAAO9K,EAAM,KAAK8K,OAAOpC,GAAOgD,GACxCvB,UAAWA,EACXC,MAAOA,EACPC,WAAYyB,YAASA,YAAS,GAAIR,GAAiBjB,GACnDC,aAAcwB,YAASA,YAAS,GAAIP,GAAmBjB,GACvDJ,KAAMA,EACNQ,MAAOA,EACPT,UAAWA,EACXD,cAAeA,EACfO,SAAUA,EACVC,MAAOY,EAAYZ,EAAQ,KAC3BC,QAASY,EAAchF,EAAW,OAI/B,CAAc+C,gBAAoBS,EAAM,CAC7CnB,IAAK,SAASoC,OAAOpC,GAAOgD,GAC5BvB,UAAWA,EACXC,MAAO0B,YAASA,YAASA,YAAS,GAAIR,GAAiBlB,GAAQC,GAC/DH,KAAM,EACNQ,MAAOA,EACPT,UAAWA,EAAU,GACrBD,cAAeA,EACfO,SAAUA,EACVC,MAAOA,IACQpB,gBAAoBS,EAAM,CACzCnB,IAAK,WAAWoC,OAAOpC,GAAOgD,GAC9BvB,UAAWA,EACXC,MAAO0B,YAASA,YAASA,YAAS,GAAIP,GAAmBnB,GAAQE,GACjEJ,KAAa,EAAPA,EAAW,EACjBD,UAAWA,EAAU,GACrBD,cAAeA,EACfO,SAAUA,EACVE,QAASpE,QAKf,IAqCe0F,EArCL,SAAa5C,GACrB,IAAI6C,EAAc5C,aAAiB6C,GAC/Bd,EAAYhC,EAAMgC,UAClBe,EAAW/C,EAAM+C,SACjBC,EAAMhD,EAAMgD,IACZT,EAAQvC,EAAMuC,MACdnB,EAAWpB,EAAMoB,SAErB,OAAI2B,EACkB9C,gBAAoBA,WAAgB,KAAmBA,gBAAoB,KAAM,CACnGV,IAAK,SAASoC,OAAOY,GACrBvB,UAAW,GAAGW,OAAOK,EAAW,SAC/BH,EAAYmB,EAAKhD,EAAO2C,YAAS,CAClC7B,UAAW,KACXjK,KAAM,QACNoL,WAAW,GACVY,KAA6B5C,gBAAoB,KAAM,CACxDV,IAAK,WAAWoC,OAAOY,GACvBvB,UAAW,GAAGW,OAAOK,EAAW,SAC/BH,EAAYmB,EAAKhD,EAAO2C,YAAS,CAClC7B,UAAW,KACXjK,KAAM,UACNqL,aAAa,GACZW,MAGe5C,gBAAoB,KAAM,CAC5CV,IAAKgD,EACLvB,UAAW,GAAGW,OAAOK,EAAW,SAC/BH,EAAYmB,EAAKhD,EAAO2C,YAAS,CAClC7B,UAAWM,EAAW,CAAC,KAAM,MAAQ,KACrCvK,KAAM,OACNoL,WAAW,EACXC,aAAa,GACZW,MClGUI,EALQ,SAA0BtC,GAE/C,OADeA,EAAKzD,U,SCaX4F,EAAmC7C,gBAAoB,IAC9DiD,EAAqB,CACvBC,IAAK,EACLC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAqBN,SAASC,EAAcC,EAAM3C,EAAM4C,GACjC,IAAIC,EAAQF,EASZ,YAPalI,IAATuF,GAAsBA,EAAO4C,KAC/BC,EAAQC,YAAaH,EAAM,CACzB3C,KAAM4C,IAERG,iBAAoBtI,IAATuF,EAAoB,eAAgB,uEAG1C6C,EAmCT,SAASG,EAAapD,GACpB,IAAIC,EAEAoD,EAAqBrD,EAAKqB,UAC1BiC,EAAQtD,EAAKsD,MACbC,EAAQvD,EAAKuD,MACbC,EAAcxD,EAAKyD,OACnBA,OAAyB,IAAhBD,EAAyBjB,EAAqBiB,EACvDE,EAAa1D,EAAKY,MAClBA,OAAuB,IAAf8C,GAA+BA,EACvCjD,EAAWT,EAAKS,SAChBkD,EAAS3D,EAAK2D,OACdpH,EAAWyD,EAAKzD,SAChB8D,EAAYL,EAAKK,UACjBC,EAAQN,EAAKM,MACbsD,EAAO5D,EAAK4D,KACZrD,EAAaP,EAAKO,WAClBC,EAAeR,EAAKQ,aAEpBqD,EAAoBvE,aAAiBwE,KACrCC,EAAeF,EAAkBE,aACjCC,EAAYH,EAAkBG,UAE9B3C,EAAY0C,EAAa,eAAgBV,GAEzCY,EAAkB3E,WAAe,IACjC4E,EAAmBC,YAAeF,EAAiB,GACnDG,EAAUF,EAAiB,GAC3BG,EAAaH,EAAiB,GAE9BI,EA7FN,SAAmBb,EAAQW,GACzB,GAAsB,kBAAXX,EACT,OAAOA,EAGT,GAAwB,WAApBc,YAAQd,GACV,IAAK,IAAIe,EAAI,EAAGA,EAAIC,IAAgBpN,OAAQmN,IAAK,CAC/C,IAAIE,EAAaD,IAAgBD,GAEjC,GAAIJ,EAAQM,SAAsC7J,IAAvB4I,EAAOiB,GAChC,OAAOjB,EAAOiB,IAAenC,EAAmBmC,GAKtD,OAAO,EA8EYC,CAAUlB,EAAQW,GAErC9E,aAAgB,WACd,IAAIsF,EAAQC,IAAkBhI,WAAU,SAAUiI,GACxB,WAApBP,YAAQd,IAIZY,EAAWS,MAEb,OAAO,WACLD,IAAkB5G,YAAY2G,MAE/B,IAEH,IAAIG,EA7EN,SAAiBxI,EAAUkH,GACzB,IAAIuB,EAAaC,YAAQ1I,GAAUzF,QAAO,SAAUoO,GAClD,OAAOA,KAELH,EAAO,GACPI,EAAS,GACTnC,EAAaS,EAuBjB,OAtBAuB,EAAWI,SAAQ,SAAUrC,EAAMnB,GACjC,IAAIyD,EAEAjF,EAA6B,QAArBiF,EAAKtC,EAAK1D,aAA0B,IAAPgG,OAAgB,EAASA,EAAGjF,KACjEkF,EAAalF,GAAQ,EAEzB,GAAIwB,IAAUoD,EAAW3N,OAAS,EAGhC,OAFA8N,EAAOI,KAAKzC,EAAcC,EAAM3C,EAAM4C,SACtC+B,EAAKQ,KAAKJ,GAIRG,EAAatC,GACfA,GAAcsC,EACdH,EAAOI,KAAKxC,KAEZoC,EAAOI,KAAKzC,EAAcC,EAAMuC,EAAYtC,IAC5C+B,EAAKQ,KAAKJ,GACVnC,EAAaS,EACb0B,EAAS,OAGNJ,EAgDIS,CAAQjJ,EAAU+H,GACzBmB,EAAenG,WAAc,WAC/B,MAAO,CACLiB,WAAYA,EACZC,aAAcA,KAEf,CAACD,EAAYC,IAChB,OAAoBlB,gBAAoB6C,EAAoBuD,SAAU,CACpE5G,MAAO2G,GACOnG,gBAAoB,MAAO,CACzCe,UAAWS,IAAWO,GAAYpB,EAAc,GAAIc,YAAgBd,EAAa,GAAGe,OAAOK,EAAW,KAAKL,OAAO4C,GAAOA,GAAiB,YAATA,GAAqB7C,YAAgBd,EAAa,GAAGe,OAAOK,EAAW,eAAgBZ,GAAWM,YAAgBd,EAAa,GAAGe,OAAOK,EAAW,QAAuB,QAAd2C,GAAsB/D,GAAcI,GAClUC,MAAOA,IACLgD,GAASC,IAAuBjE,gBAAoB,MAAO,CAC7De,UAAW,GAAGW,OAAOK,EAAW,YAC/BiC,GAAsBhE,gBAAoB,MAAO,CAClDe,UAAW,GAAGW,OAAOK,EAAW,WAC/BiC,GAAQC,GAAsBjE,gBAAoB,MAAO,CAC1De,UAAW,GAAGW,OAAOK,EAAW,WAC/BkC,IAAsBjE,gBAAoB,MAAO,CAClDe,UAAW,GAAGW,OAAOK,EAAW,UAClB/B,gBAAoB,QAAS,KAAmBA,gBAAoB,QAAS,KAAMyF,EAAKrD,KAAI,SAAUW,EAAKT,GACzH,OAAoBtC,gBAAoB2C,EAAK,CAC3CrD,IAAKgD,EACLA,MAAOA,EACPhB,MAAOA,EACPS,UAAWA,EACXe,SAAqB,aAAXuB,EACVlD,SAAUA,EACV4B,IAAKA,YAKXe,EAAauC,KAAOrD,EACLc","file":"static/js/22.68eee027.chunk.js","sourcesContent":["import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to saftey check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n","import { invariant } from '../../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\n\nimport { ApolloClient } from '../../core';\nimport { DocumentType, parser, operationName } from '../parser';\nimport { CommonOptions } from '../types/types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: any = {};\n  public client: ApolloClient<object>;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: any) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import { equal } from '@wry/equality';\n\nimport { ApolloError } from '../../errors';\n\nimport {\n  ApolloClient,\n  NetworkStatus,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  DocumentNode,\n  TypedDocumentNode,\n} from '../../core';\n\nimport {\n  ObservableSubscription\n} from '../../utilities';\n\nimport { DocumentType } from '../parser';\nimport {\n  QueryResult,\n  QueryDataOptions,\n  QueryTuple,\n  QueryLazyOptions,\n  ObservableQueryFields,\n} from '../types/types';\nimport { OperationData } from './OperationData';\n\ntype ObservableQueryOptions<TData, TVars> =\n  ReturnType<QueryData<TData, TVars>[\"prepareObservableQueryOptions\"]>;\n\nexport class QueryData<TData, TVariables> extends OperationData<\n  QueryDataOptions<TData, TVariables>\n> {\n  public onNewData: () => void;\n  public currentObservable?: ObservableQuery<TData, TVariables>;\n  private currentSubscription?: ObservableSubscription;\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n  private previous: {\n    client?: ApolloClient<object>;\n    query?: DocumentNode | TypedDocumentNode<TData, TVariables>;\n    observableQueryOptions?: ObservableQueryOptions<TData, TVariables>;\n    result?: QueryResult<TData, TVariables>;\n    loading?: boolean;\n    options?: QueryDataOptions<TData, TVariables>;\n    error?: ApolloError;\n  } = Object.create(null);\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryDataOptions<TData, TVariables>;\n    context: any;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previous.query) {\n      this.removeQuerySubscription();\n      this.removeObservable(!skip);\n      this.previous.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          }\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<void> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    return new Promise(resolve => this.startQuerySubscription(resolve));\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n    const options = this.getOptions();\n    if (this.currentObservable && !this.ssrInitiated()) {\n      this.startQuerySubscription();\n    }\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = options;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    this.removeObservable(true);\n    delete this.previous.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      } as TVariables;\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteSsrResult() {\n    const { ssr, skip } = this.getOptions();\n    const ssrDisabled = ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client,\n      ...this.observableQueryFields(),\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previous.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    if (this.ssrInitiated()) {\n      const result = this.getExecuteResult() || ssrLoading;\n      if (result.loading && !skip) {\n        this.context.renderPromises!.addQueryPromise(this, () => null);\n      }\n      return result;\n    }\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previous.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: void 0,\n      };\n      this.currentObservable = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context!.renderPromises!.registerSSRObservable(\n          this.currentObservable,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: void 0,\n    };\n\n    if (this.getOptions().skip) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      return;\n    }\n\n    if (\n      !equal(newObservableQueryOptions, this.previous.observableQueryOptions)\n    ) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  // Setup a subscription to watch for Apollo Client `ObservableQuery` changes.\n  // When new data is received, and it doesn't match the data that was used\n  // during the last `QueryData.execute` call (and ultimately the last query\n  // component render), trigger the `onNewData` callback. If not specified,\n  // `onNewData` will fallback to the default `QueryData.onNewData` function\n  // (which usually leads to a query component re-render).\n  private startQuerySubscription(onNewData: () => void = this.onNewData) {\n    if (this.currentSubscription || this.getOptions().skip) return;\n\n    this.currentSubscription = this.currentObservable!.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previous.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          equal(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previous.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !equal(error, this.previous.error)\n        ) {\n          this.previous.error = error;\n          onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const { currentObservable } = this;\n    if (currentObservable) {\n      const last = currentObservable[\"last\"];\n      try {\n        currentObservable.resetLastResults();\n        this.startQuerySubscription();\n      } finally {\n        currentObservable[\"last\"] = last;\n      }\n    }\n  }\n\n  private getExecuteResult(): QueryResult<TData, TVariables> {\n    let result = this.observableQueryFields() as QueryResult<TData, TVariables>;\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate\n    // that previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client\n    // 4.0 to address this.\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: NetworkStatus.ready,\n        called: true,\n      };\n    } else if (this.currentObservable) {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.getCurrentResult();\n      const { data, loading, partial, networkStatus, errors } = currentResult;\n      let { error } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        data,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        // Fall through without modifying result...\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          partial &&\n          (!data || Object.keys(data).length === 0) &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n      }\n    }\n\n    result.client = this.client;\n    // Store options as this.previousOptions.\n    this.setOptions(options, true);\n\n    const previousResult = this.previous.result;\n\n    this.previous.loading =\n      previousResult && previousResult.loading || false;\n\n    // Ensure the returned result contains previousData as a separate\n    // property, to give developers the flexibility of leveraging outdated\n    // data while new data is loading from the network. Falling back to\n    // previousResult.previousData when previousResult.data is falsy here\n    // allows result.previousData to persist across multiple results.\n    result.previousData = previousResult &&\n      (previousResult.data || previousResult.previousData);\n\n    this.previous.result = result;\n\n    // Any query errors that exist are now available in `result`, so we'll\n    // remove the original errors from the `ObservableQuery` query store to\n    // make sure they aren't re-displayed on subsequent (potentially error\n    // free) requests/responses.\n    this.currentObservable && this.currentObservable.resetQueryStoreErrors();\n\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    if (!this.currentObservable || !this.previous.result) return;\n\n    const { data, loading, error } = this.previous.result;\n\n    if (!loading) {\n      const {\n        query,\n        variables,\n        onCompleted,\n        onError,\n        skip\n      } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previous.loading &&\n        equal(this.previousOptions.query, query) &&\n        equal(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error && !skip) {\n        onCompleted(data as TData);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentSubscription) {\n      this.currentSubscription.unsubscribe();\n      delete this.currentSubscription;\n    }\n  }\n\n  private removeObservable(andDelete: boolean) {\n    if (this.currentObservable) {\n      this.currentObservable[\"tearDownQuery\"]();\n      if (andDelete) {\n        delete this.currentObservable;\n      }\n    }\n  }\n\n  private obsRefetch = (variables?: Partial<TVariables>) =>\n    this.currentObservable?.refetch(variables);\n\n  private obsFetchMore = (\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable?.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable?.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable?.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable?.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable?.subscribeToMore(options);\n\n  private observableQueryFields() {\n    return {\n      variables: this.currentObservable?.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import '../../../utilities/globals';\n\nimport { useContext, useEffect, useReducer, useRef } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport {\n  QueryHookOptions,\n  QueryDataOptions,\n  QueryTuple,\n  QueryResult,\n} from '../../types/types';\nimport { QueryData } from '../../data';\nimport { useDeepMemo } from './useDeepMemo';\nimport { OperationVariables } from '../../../core';\nimport { getApolloContext } from '../../context';\nimport { useAfterFastRefresh } from './useAfterFastRefresh';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData = queryDataRef.current || (\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryDataOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        if (!queryData.ssrInitiated()) {\n          // When new data is received from the `QueryData` object, we want to\n          // force a re-render to make sure the new data is displayed. We can't\n          // force that re-render if we're already rendering however so to be\n          // safe we'll trigger the re-render in a microtask. In case the\n          // component gets unmounted before this callback fires, we re-check\n          // queryDataRef.current.isMounted before calling forceUpdate().\n          Promise.resolve().then(() => queryDataRef.current && queryDataRef.current.isMounted && forceUpdate());\n        } else {\n          // If we're rendering on the server side we can force an update at\n          // any point.\n          forceUpdate();\n        }\n      }\n    })\n  );\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: {\n      ...updatedOptions,\n      onError: void 0,\n      onCompleted: void 0\n    } as QueryHookOptions<TData, TVariables>,\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  if (__DEV__) {\n    // ensure we run an update after refreshing so that we reinitialize\n    useAfterFastRefresh(forceUpdate);\n  }\n\n  useEffect(() => {\n    return () => {\n      queryData.cleanup();\n      // this effect can run multiple times during a fast-refresh\n      // so make sure we clean up the ref\n      queryDataRef.current = void 0;\n    }\n  }, []);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data,\n    queryData.currentObservable,\n  ]);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import '../../../utilities/globals';\nimport { useEffect, useRef } from \"react\";\n\n/**\n * This hook allows running a function only immediately after a react\n * fast refresh or live reload.\n *\n * Useful in order to ensure that we can reinitialize things that have been\n * disposed by cleanup functions in `useEffect`.\n * @param effectFn a function to run immediately after a fast refresh\n */\nexport function useAfterFastRefresh(effectFn: () => unknown) {\n  if (__DEV__) {\n    const didRefresh = useRef(false);\n    useEffect(() => {\n      return () => {\n        // Detect fast refresh, only runs multiple times in fast refresh\n        didRefresh.current = true;\n      };\n    }, []);\n\n    useEffect(() => {\n      if (didRefresh.current === true) {\n        // This block only runs after a fast refresh\n        didRefresh.current = false;\n        effectFn();\n      }\n    }, [])\n  }\n}\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\n\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\n\nvar Cell = function Cell(_ref) {\n  var itemPrefixCls = _ref.itemPrefixCls,\n      component = _ref.component,\n      span = _ref.span,\n      className = _ref.className,\n      style = _ref.style,\n      labelStyle = _ref.labelStyle,\n      contentStyle = _ref.contentStyle,\n      bordered = _ref.bordered,\n      label = _ref.label,\n      content = _ref.content,\n      colon = _ref.colon;\n  var Component = component;\n\n  if (bordered) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-label\"), notEmpty(label)), _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-content\"), notEmpty(content)), _classNames), className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item\"), className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(itemPrefixCls, \"-item-container\")\n  }, label && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-label\"), _defineProperty({}, \"\".concat(itemPrefixCls, \"-item-no-colon\"), !colon)),\n    style: labelStyle\n  }, label), content && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-content\")),\n    style: contentStyle\n  }, content)));\n};\n\nexport default Cell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from './Cell';\nimport { DescriptionsContext } from '.';\n\nfunction renderCells(items, _ref, _ref2) {\n  var colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  var component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent,\n      rootLabelStyle = _ref2.labelStyle,\n      rootContentStyle = _ref2.contentStyle;\n  return items.map(function (_ref3, index) {\n    var _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        labelStyle = _ref3$props.labelStyle,\n        contentStyle = _ref3$props.contentStyle,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: \"\".concat(type, \"-\").concat(key || index),\n        className: className,\n        style: style,\n        labelStyle: _extends(_extends({}, rootLabelStyle), labelStyle),\n        contentStyle: _extends(_extends({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: \"label-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: \"content-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nvar Row = function Row(props) {\n  var descContext = React.useContext(DescriptionsContext);\n  var prefixCls = props.prefixCls,\n      vertical = props.vertical,\n      row = props.row,\n      index = props.index,\n      bordered = props.bordered;\n\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"label-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"content-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"\".concat(prefixCls, \"-row\")\n  }, renderCells(row, props, _extends({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\n\nexport default Row;","var DescriptionsItem = function DescriptionsItem(_ref) {\n  var children = _ref.children;\n  return children;\n};\n\nexport default DescriptionsItem;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport devWarning from '../_util/devWarning';\nimport { ConfigContext } from '../config-provider';\nimport Row from './Row';\nimport DescriptionsItem from './Item';\nimport { cloneElement } from '../_util/reactNode';\nexport var DescriptionsContext = /*#__PURE__*/React.createContext({});\nvar DEFAULT_COLUMN_MAP = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\nfunction getColumn(column, screens) {\n  if (typeof column === 'number') {\n    return column;\n  }\n\n  if (_typeof(column) === 'object') {\n    for (var i = 0; i < responsiveArray.length; i++) {\n      var breakpoint = responsiveArray[i];\n\n      if (screens[breakpoint] && column[breakpoint] !== undefined) {\n        return column[breakpoint] || DEFAULT_COLUMN_MAP[breakpoint];\n      }\n    }\n  }\n\n  return 3;\n}\n\nfunction getFilledItem(node, span, rowRestCol) {\n  var clone = node;\n\n  if (span === undefined || span > rowRestCol) {\n    clone = cloneElement(node, {\n      span: rowRestCol\n    });\n    devWarning(span === undefined, 'Descriptions', 'Sum of column `span` in a line not match `column` of Descriptions.');\n  }\n\n  return clone;\n}\n\nfunction getRows(children, column) {\n  var childNodes = toArray(children).filter(function (n) {\n    return n;\n  });\n  var rows = [];\n  var tmpRow = [];\n  var rowRestCol = column;\n  childNodes.forEach(function (node, index) {\n    var _a;\n\n    var span = (_a = node.props) === null || _a === void 0 ? void 0 : _a.span;\n    var mergedSpan = span || 1; // Additional handle last one\n\n    if (index === childNodes.length - 1) {\n      tmpRow.push(getFilledItem(node, span, rowRestCol));\n      rows.push(tmpRow);\n      return;\n    }\n\n    if (mergedSpan < rowRestCol) {\n      rowRestCol -= mergedSpan;\n      tmpRow.push(node);\n    } else {\n      tmpRow.push(getFilledItem(node, mergedSpan, rowRestCol));\n      rows.push(tmpRow);\n      rowRestCol = column;\n      tmpRow = [];\n    }\n  });\n  return rows;\n}\n\nfunction Descriptions(_ref) {\n  var _classNames;\n\n  var customizePrefixCls = _ref.prefixCls,\n      title = _ref.title,\n      extra = _ref.extra,\n      _ref$column = _ref.column,\n      column = _ref$column === void 0 ? DEFAULT_COLUMN_MAP : _ref$column,\n      _ref$colon = _ref.colon,\n      colon = _ref$colon === void 0 ? true : _ref$colon,\n      bordered = _ref.bordered,\n      layout = _ref.layout,\n      children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      size = _ref.size,\n      labelStyle = _ref.labelStyle,\n      contentStyle = _ref.contentStyle;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      screens = _React$useState2[0],\n      setScreens = _React$useState2[1];\n\n  var mergedColumn = getColumn(column, screens); // Responsive\n\n  React.useEffect(function () {\n    var token = ResponsiveObserve.subscribe(function (newScreens) {\n      if (_typeof(column) !== 'object') {\n        return;\n      }\n\n      setScreens(newScreens);\n    });\n    return function () {\n      ResponsiveObserve.unsubscribe(token);\n    };\n  }, []); // Children\n\n  var rows = getRows(children, mergedColumn);\n  var contextValue = React.useMemo(function () {\n    return {\n      labelStyle: labelStyle,\n      contentStyle: contentStyle\n    };\n  }, [labelStyle, contentStyle]);\n  return /*#__PURE__*/React.createElement(DescriptionsContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size && size !== 'default'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), !!bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    style: style\n  }, (title || extra) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\")\n  }, title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-title\")\n  }, title), extra && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-extra\")\n  }, extra)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-view\")\n  }, /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tbody\", null, rows.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      index: index,\n      colon: colon,\n      prefixCls: prefixCls,\n      vertical: layout === 'vertical',\n      bordered: bordered,\n      row: row\n    });\n  }))))));\n}\n\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;"],"sourceRoot":""}