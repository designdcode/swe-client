{"version":3,"sources":["queries/adminQuery.ts","hooks/useWindowSize.ts","../../../../src/react/hooks/useQuery.ts","pages/Detail/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","DELETE_LINK","EDIT_POPUP","CREATE_REPLY","DELETE_REPLY","useWindowSize","isClient","window","getSize","useCallback","width","innerWidth","height","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useQuery","query","options","context","client","Query","partial","watchQueryOptions","createWatchQueryOptions","obsQuery","renderPromises","getSSRObservable","watchQuery","registerSSRObservable","ssr","skip","getCurrentResult","loading","addQueryPromise","getOptions","fetchData","Promise","resolve","sub","subscribe","next","result","unsubscribe","error","complete","setObsQuery","onError","data","onCompleted","setResult","ref","previousData","nextResult","current","setOptions","catch","previousResult","Object","assign","subscription","onNext","last","resetLastResults","hasOwnProperty","networkStatus","disableNetworkFetches","partialRefetch","keys","length","fetchPolicy","refetch","ready","errors","graphQLErrors","obsQueryFields","bind","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","variables","called","Detail","screen","useParams","param","subparam","category","renderButton","split","className","href","target","rel","src","alt","Wrapper","Cover","CoverTitle","margin","NavigationData","map","item","idx","title","ko_title","description","key","SubMenu","isBigger","subMenu","elem","i","to","colored","ContentCell","first","FakeLine","StyleLink","style","fontWeight","Content","ContentImage","getBoardByCategory","images","url","toString","styled","div","mediaQueries","BREAKPOINT_PHONE_MEDIUM","BREAKPOINT_BIGGER_THAN_PC","props","Link"],"mappings":"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","file":"static/js/29.9a9c390e.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n    $type: String\n    $private: Boolean\n    $writer: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n      type: $type\n      private: $private\n      writer: $writer\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        writer\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n    $private: Boolean\n    $type: String\n  ) {\n    editBoard(\n      id: $id\n      title: $title\n      content: $content\n      link: $link\n      private: $private\n      type: $type\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_POPUP = gql`\n  mutation editPopup($up: String!, $url: String) {\n    editPopup(up: $up, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_REPLY = gql`\n  mutation createReply($boardId: Int!, $content: String!) {\n    createReply(boardId: $boardId, content: $content) {\n      ok\n      err\n    }\n  }\n`;\nexport const EDIT_REPLY = gql`\n  mutation editReply($replyId: Int!, $content: String) {\n    editReply(replyId: $replyId, content: $content) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_REPLY = gql`\n  mutation deleteReply($replyId: Int!) {\n    deleteReply(replyId: $replyId) {\n      ok\n      err\n    }\n  }\n`;\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useWindowSize = () => {\n  const isClient = typeof window === \"object\";\n\n  const getSize = useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : 0,\n      height: isClient ? window.innerWidth : 0,\n    };\n  }, [isClient]);\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return;\n    }\n    const handleResize = () => {\n      setWindowSize(getSize());\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize, isClient]);\n\n  return windowSize;\n};\n","import { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { equal } from '@wry/equality';\nimport { OperationVariables } from '../../core';\nimport { getApolloContext } from '../context';\nimport { ApolloError } from '../../errors';\nimport {\n  ApolloQueryResult,\n  NetworkStatus,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from '../../core';\nimport {\n  QueryHookOptions,\n  QueryResult,\n} from '../types/types';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useQuery<\n  TData = any,\n  TVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n): QueryResult<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(query, DocumentType.Query);\n  const [obsQuery, setObsQuery] = useState(() => {\n    const watchQueryOptions = createWatchQueryOptions(query, options);\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    let obsQuery: ObservableQuery<TData, TVariables> | null = null;\n    if (context.renderPromises) {\n      obsQuery = context.renderPromises.getSSRObservable(watchQueryOptions);\n    }\n\n    if (!obsQuery) {\n      // Is it safe (StrictMode/memory-wise) to call client.watchQuery here?\n      obsQuery = client.watchQuery(watchQueryOptions);\n      if (context.renderPromises) {\n        context.renderPromises.registerSSRObservable(\n          obsQuery,\n          watchQueryOptions,\n        );\n      }\n    }\n\n    if (\n      context.renderPromises &&\n      options?.ssr !== false &&\n      !options?.skip &&\n      obsQuery.getCurrentResult().loading\n    ) {\n      // TODO: This is a legacy API which could probably be cleaned up\n      context.renderPromises.addQueryPromise(\n        {\n          // The only options which seem to actually be used by the\n          // RenderPromises class are query and variables.\n          getOptions: () => createWatchQueryOptions(query, options),\n          fetchData: () => new Promise<void>((resolve) => {\n            const sub = obsQuery!.subscribe({\n              next(result) {\n                if (!result.loading) {\n                  resolve()\n                  sub.unsubscribe();\n                }\n              },\n              error() {\n                resolve();\n                sub.unsubscribe();\n              },\n              complete() {\n                resolve();\n              },\n            });\n          }),\n        },\n        // This callback never seemed to do anything\n        () => null,\n      );\n    }\n\n    return obsQuery;\n  });\n\n  let [result, setResult] = useState(() => {\n    const result = obsQuery.getCurrentResult();\n    if (!result.loading && options) {\n      if (result.error) {\n        options.onError?.(result.error);\n      } else if (result.data) {\n        options.onCompleted?.(result.data);\n      }\n    }\n\n    return result;\n  });\n\n  const ref = useRef({\n    client,\n    query,\n    options,\n    result,\n    previousData: void 0 as TData | undefined,\n    watchQueryOptions: createWatchQueryOptions(query, options),\n  });\n\n  // An effect to recreate the obsQuery whenever the client or query changes.\n  // This effect is also responsible for checking and updating the obsQuery\n  // options whenever they change.\n  useEffect(() => {\n    const watchQueryOptions = createWatchQueryOptions(query, options);\n    let nextResult: ApolloQueryResult<TData> | undefined;\n    if (ref.current.client !== client || !equal(ref.current.query, query)) {\n      const obsQuery = client.watchQuery(watchQueryOptions);\n      setObsQuery(obsQuery);\n      nextResult = obsQuery.getCurrentResult();\n    } else if (!equal(ref.current.watchQueryOptions, watchQueryOptions)) {\n      obsQuery.setOptions(watchQueryOptions).catch(() => {});\n      nextResult = obsQuery.getCurrentResult();\n      ref.current.watchQueryOptions = watchQueryOptions;\n    }\n\n    if (nextResult) {\n      const previousResult = ref.current.result;\n      if (previousResult.data) {\n        ref.current.previousData = previousResult.data;\n      }\n\n      setResult(ref.current.result = nextResult);\n      if (!nextResult.loading && options) {\n        if (!result.loading) {\n          if (result.error) {\n            options.onError?.(result.error);\n          } else if (result.data) {\n            options.onCompleted?.(result.data);\n          }\n        }\n      }\n    }\n\n    Object.assign(ref.current, { client, query });\n  }, [obsQuery, client, query, options]);\n\n  // An effect to subscribe to the current observable query\n  useEffect(() => {\n    if (context.renderPromises) {\n      return;\n    }\n\n    let subscription = obsQuery.subscribe(onNext, onError);\n    // We use `getCurrentResult()` instead of the callback argument because\n    // the values differ slightly. Specifically, loading results will have\n    // an empty object for data instead of `undefined` for some reason.\n    function onNext() {\n      const previousResult = ref.current.result;\n      const result = obsQuery.getCurrentResult();\n      // Make sure we're not attempting to re-render similar results\n      if (\n        previousResult &&\n        previousResult.loading === result.loading &&\n        previousResult.networkStatus === result.networkStatus &&\n        equal(previousResult.data, result.data)\n      ) {\n        return;\n      }\n\n      if (previousResult.data) {\n        ref.current.previousData = previousResult.data;\n      }\n\n      setResult(ref.current.result = result);\n      if (!result.loading) {\n        ref.current.options?.onCompleted?.(result.data);\n      }\n    }\n\n    function onError(error: Error) {\n      const last = obsQuery[\"last\"];\n      subscription.unsubscribe();\n      // Unfortunately, if `lastError` is set in the current\n      // `observableQuery` when the subscription is re-created,\n      // the subscription will immediately receive the error, which will\n      // cause it to terminate again. To avoid this, we first clear\n      // the last error/result from the `observableQuery` before re-starting\n      // the subscription, and restore it afterwards (so the subscription\n      // has a chance to stay open).\n      try {\n        obsQuery.resetLastResults();\n        subscription = obsQuery.subscribe(onNext, onError);\n      } finally {\n        obsQuery[\"last\"] = last;\n      }\n\n      if (!error.hasOwnProperty('graphQLErrors')) {\n        // The error is not a GraphQL error\n        throw error;\n      }\n\n      const previousResult = ref.current.result;\n      if (\n        (previousResult && previousResult.loading) ||\n        !equal(error, previousResult.error)\n      ) {\n        setResult(ref.current.result = {\n          data: previousResult.data,\n          error: error as ApolloError,\n          loading: false,\n          networkStatus: NetworkStatus.error,\n        });\n        ref.current.options?.onError?.(error as ApolloError);\n      }\n    }\n\n    return () => subscription.unsubscribe();\n  }, [obsQuery, context.renderPromises, client.disableNetworkFetches]);\n\n  let partial: boolean | undefined;\n  ({ partial, ...result } = result);\n\n  {\n    // BAD BOY CODE BLOCK WHERE WE PUT SIDE-EFFECTS IN THE RENDER FUNCTION\n    //\n    // TODO: This code should be removed when the partialRefetch option is\n    // removed. I was unable to get this hook to behave reasonably in certain\n    // edge cases when this block was put in an effect.\n    if (\n      partial &&\n      options?.partialRefetch &&\n      !result.loading &&\n      (!result.data || Object.keys(result.data).length === 0) &&\n      obsQuery.options.fetchPolicy !== 'cache-only'\n    ) {\n      result = {\n        ...result,\n        loading: true,\n        networkStatus: NetworkStatus.refetch,\n      };\n\n      obsQuery.refetch();\n    }\n\n    // TODO: This is a hack to make sure useLazyQuery executions update the\n    // obsevable query options for ssr.\n    if (\n      context.renderPromises &&\n      options?.ssr !== false &&\n      !options?.skip &&\n      result.loading\n    ) {\n      obsQuery.setOptions(createWatchQueryOptions(query, options)).catch(() => {});\n    }\n\n    // We assign options during rendering as a guard to make sure that\n    // callbacks like onCompleted and onError are not stale.\n    Object.assign(ref.current, { options });\n  }\n\n  if (\n    (context.renderPromises || client.disableNetworkFetches) &&\n    options?.ssr === false\n  ) {\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    result = ref.current.result = {\n      loading: true,\n      data: void 0 as unknown as TData,\n      error: void 0,\n      networkStatus: NetworkStatus.loading,\n    };\n  } else if (options?.skip || options?.fetchPolicy === 'standby') {\n    // When skipping a query (ie. we're not querying for data but still want to\n    // render children), make sure the `data` is cleared out and `loading` is\n    // set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate that\n    // previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n    // to address this.\n    result = {\n      loading: false,\n      data: void 0 as unknown as TData,\n      error: void 0,\n      networkStatus: NetworkStatus.ready,\n    };\n  }\n\n  if (result.errors && result.errors.length) {\n    // Until a set naming convention for networkError and graphQLErrors is\n    // decided upon, we map errors (graphQLErrors) to the error options.\n    // TODO: Is it possible for both result.error and result.errors to be\n    // defined here?\n    result = {\n      ...result,\n      error: result.error || new ApolloError({ graphQLErrors: result.errors }),\n    };\n  }\n\n  const obsQueryFields = useMemo(() => ({\n    refetch: obsQuery.refetch.bind(obsQuery),\n    fetchMore: obsQuery.fetchMore.bind(obsQuery),\n    updateQuery: obsQuery.updateQuery.bind(obsQuery),\n    startPolling: obsQuery.startPolling.bind(obsQuery),\n    stopPolling: obsQuery.stopPolling.bind(obsQuery),\n    subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n  }), [obsQuery]);\n\n  return {\n    ...obsQueryFields,\n    variables: createWatchQueryOptions(query, options).variables,\n    client,\n    called: true,\n    previousData: ref.current.previousData,\n    ...result,\n  };\n}\n\n/**\n * A function to massage options before passing them the ObservableQuery.\n */\nfunction createWatchQueryOptions<TData, TVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<TData, TVariables> = {},\n): WatchQueryOptions<TVariables, TData> {\n  // TODO: For some reason, we pass context, which is the React Apollo Context,\n  // into observable queries, and test for that.\n  // removing hook specific options\n  const {\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    displayName,\n    ...watchQueryOptions\n  } = options;\n\n  if (skip) {\n    watchQueryOptions.fetchPolicy = 'standby';\n  } else if (\n    watchQueryOptions.context?.renderPromises &&\n    (\n      watchQueryOptions.fetchPolicy === 'network-only' ||\n      watchQueryOptions.fetchPolicy === 'cache-and-network'\n    )\n  ) {\n    // this behavior was added to react-apollo without explanation in this PR\n    // https://github.com/apollographql/react-apollo/pull/1579\n    watchQueryOptions.fetchPolicy = 'cache-first';\n  } else if (!watchQueryOptions.fetchPolicy) {\n    // cache-first is the default policy, but we explicitly assign it here so\n    // the cache policies computed based on options can be cleared\n    watchQueryOptions.fetchPolicy = 'cache-first';\n  }\n\n  if (!watchQueryOptions.variables) {\n    watchQueryOptions.variables = {} as TVariables;\n  }\n\n  return { query, ...watchQueryOptions };\n}\n","import React, { useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useParams } from \"react-router\";\nimport { NavigationData } from \"../../assets/NavigationData\";\nimport {\n  BREAKPOINT_BIGGER_THAN_PC,\n  BREAKPOINT_PHONE_MEDIUM,\n  mediaQueries,\n} from \"../../utils/mediaQuery\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { getBoardByCategory } from \"../../typings/api\";\nimport { GET_BOARD_BY_CATEGORY } from \"../../queries/adminQuery\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\n\ninterface middleMenuProps {\n  isBigger: boolean;\n}\n\ninterface MenuCellProps {\n  first: number;\n}\n\nconst Detail = () => {\n  const screen = useWindowSize();\n  const { param, subparam } = useParams<ParamProps>();\n  const { loading, data } = useQuery<getBoardByCategory>(\n    GET_BOARD_BY_CATEGORY,\n    {\n      variables: {\n        category: subparam,\n      },\n    }\n  );\n\n  const renderButton = useCallback(() => {\n    switch (subparam.split(\"-\")[1]) {\n      case \"cs\":\n        return (\n          <a\n            className=\"link-button\"\n            href=\"https://cs.sunmoon.ac.kr/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={\"/img/cs_button.jpeg\"} alt=\"buttonimg\" />\n          </a>\n        );\n      case \"ai\":\n        return (\n          <a\n            className=\"link-button\"\n            href=\"https://ais.sunmoon.ac.kr/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={\"/img/ai_button.jpg\"} alt=\"buttonimg\" />\n          </a>\n        );\n      case \"convergence\":\n        return (\n          <a\n            className=\"link-button\"\n            href=\"https://swc.sunmoon.ac.kr/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={\"/img/swc_button.jpeg\"} alt=\"buttonimg\" />\n          </a>\n        );\n      case \"it\":\n        return (\n          <a\n            className=\"link-button\"\n            href=\"https://itedu.sunmoon.ac.kr/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={\"/img/itedu_button.jpg\"} alt=\"buttonimg\" />\n          </a>\n        );\n      case \"smartcar\":\n        return (\n          <a\n            className=\"link-button\"\n            href=\"https://smartcar.sunmoon.ac.kr/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={\"/img/smartcar_button.jpeg\"} alt=\"buttonimg\" />\n          </a>\n        );\n      case \"sw\":\n        return (\n          <a\n            className=\"link-button\"\n            href=\"https://sw.sunmoon.ac.kr/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img src={\"/img/sw_button.jpeg\"} alt=\"buttonimg\" />\n          </a>\n        );\n      default:\n        return null;\n    }\n  }, [subparam]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Wrapper>\n      <Cover>\n        <CoverTitle margin={screen.width > 1500 ? \"25%\" : \"15%\"}>\n          {NavigationData.map((item, idx) => {\n            if (item.title === param.split(\"-\")[0]) {\n              return (\n                <div key={item.key}>\n                  <span className=\"cover-main-title\">{item.ko_title}</span>\n                  <span className=\"cover-description\">{item.description}</span>\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </CoverTitle>\n        <SubMenu isBigger={param === \"major\" ? true : false}>\n          <div className=\"submenu-content\">\n            {NavigationData.map((item, idx) => {\n              if (item.title === param) {\n                return item.subMenu.map((elem, i) => {\n                  const colored = elem.key === subparam ? 0 : 1;\n                  let to;\n                  if (\n                    elem.title.split(\"-\")[0] === \"achievement\" ||\n                    elem.title.split(\"-\")[0] === \"community\"\n                  ) {\n                    if (elem.key.split(\"-\")[1] === \"sitemap\") {\n                      to = `/main/detail/${elem.title.split(\"-\")[0]}/${\n                        elem.key.split(\"-\")[1]\n                      }`;\n                    } else {\n                      to = `/main/board/${elem.title.split(\"-\")[0]}/${\n                        elem.key\n                      }`;\n                    }\n                  } else {\n                    to = `/main/detail/${elem.title.split(\"-\")[0]}/${elem.key}`;\n                  }\n                  return (\n                    <ContentCell\n                      className=\"submenu-col\"\n                      first={colored}\n                      key={`${i}key`}\n                    >\n                      <FakeLine first={colored} />\n                      <StyleLink to={to} first={colored}>\n                        <span style={{ fontWeight: 400 }}>{elem.ko_title}</span>\n                      </StyleLink>\n                    </ContentCell>\n                  );\n                });\n              } else {\n                return null;\n              }\n            })}\n          </div>\n        </SubMenu>\n        <img src=\"/img/detailBG.jpeg\" alt=\"cover\" />\n      </Cover>\n      <Content>\n        <ContentImage>\n          {data?.getBoardByCategory.data &&\n            data.getBoardByCategory.data[0] &&\n            data.getBoardByCategory.data[0].images && (\n              <img\n                src={data.getBoardByCategory.data[0].images[0]?.url}\n                alt=\"uploadedImage\"\n              />\n            )}\n        </ContentImage>\n        {param.toString() === \"sitelink\" && (\n          <div className=\"button-text\">\n            버튼을 클릭하시면 해당 사이트로 이동합니다\n            {renderButton()}\n          </div>\n        )}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Detail;\n\ninterface CoverTitleMarginProps {\n  margin: string;\n}\n\nconst Wrapper = styled.div`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n    min-height: 50vh;\n  }\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    margin-top: 15px;\n    width: 100%;\n    min-width: 1280px;\n    max-width: 1920px;\n    min-height: 100%;\n  }\n`;\n\nconst Cover = styled.div`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n    width: 100%;\n    height: 120px;\n    & img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n      object-position: center;\n    }\n  }\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    width: 100%;\n    height: 350px;\n    margin: 0 auto;\n    position: relative;\n    & img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n      object-position: center;\n    }\n  }\n`;\n\nconst CoverTitle = styled.div<CoverTitleMarginProps>`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n    position: absolute;\n    top: 10%;\n    left: 5%;\n    & .cover-main-title {\n      font-size: 20px;\n      font-weight: 500px;\n      color: white;\n      display: block;\n    }\n    & .cover-description {\n      display: block;\n      font-size: 10px;\n      letter-spacing: 0.43px;\n      color: #ffffff;\n    }\n  }\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    position: absolute;\n    font-size: 20px;\n    margin-left: ${(props) => props.margin};\n    margin-top: 50px;\n    & .cover-main-title {\n      font-size: 40px;\n      font-weight: 500;\n      letter-spacing: 0.43px;\n      color: #ffffff;\n      text-shadow: 3px 3px 3px #000000e3;\n      display: block;\n    }\n\n    & .cover-description {\n      display: block;\n      font-size: 20px;\n      letter-spacing: 0.43px;\n      color: #ffffff;\n      text-shadow: 3px 3px 3px #000000e3;\n    }\n  }\n`;\n\nconst SubMenu = styled.div<middleMenuProps>`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n    display: none;\n  }\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    width: 100%;\n    background-color: #e5e2e2b8;\n    position: absolute;\n    bottom: 0;\n    font-size: 15px;\n    & .submenu-content {\n      max-width: 1280px;\n      min-width: 1000px;\n      min-height: 50px;\n      height: ${(props) => (props.isBigger ? \"100px\" : \"50px\")};\n      margin: 0 auto;\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      padding-left: 5%;\n    }\n    & .submenu-col {\n      width: 16%;\n      height: 50px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n`;\n\nconst StyleLink = styled(Link)<MenuCellProps>`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n  }\n\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2px 5px;\n    font-size: 16px;\n    color: ${(props) => (props.first === 0 ? \"white\" : \"black\")};\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nconst ContentCell = styled.div<MenuCellProps>`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n  }\n\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    background-color: ${(props) => (props.first === 0 ? \"#0c1b58\" : \"\")};\n    color: ${(props) => (props.first === 0 ? \"white\" : \"black\")};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    &:hover {\n      background-color: #0c1b58;\n      transition: 0.2s linear;\n      color: white;\n    }\n  }\n`;\n\nconst FakeLine = styled.div<MenuCellProps>`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n  }\n\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    width: 50%;\n    height: 2px;\n    border-top: ${(props) => (props.first === 0 ? \"2px solid white\" : \"\")};\n  }\n`;\n\nconst Content = styled.div`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n    height: 100%;\n\n    & .link-button {\n      display: flex;\n      justify-content: center;\n      width: 100%;\n      min-height: 50px;\n      margin: 10px auto;\n      & img {\n        width: 200px;\n      }\n    }\n    & .button-text {\n      margin-top: 50px;\n      width: 100%;\n      height: 200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    width: 1280px;\n    min-height: 100vh;\n    margin: 0 auto;\n    & .link-button {\n      display: flex;\n      justify-content: center;\n      width: 100%;\n      min-height: 50px;\n      margin: 20px auto;\n      & img {\n        width: 300px;\n      }\n    }\n    & .button-text {\n      margin-top: 50px;\n      width: 400px;\n      height: 500px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n`;\n\nconst ContentImage = styled.div`\n  ${mediaQueries(BREAKPOINT_PHONE_MEDIUM)} {\n    width: 100%;\n    padding: 40px 0;\n    display: flex;\n    justify-content: center;\n    & img {\n      width: 80%;\n      object-fit: contain;\n    }\n  }\n  ${mediaQueries(BREAKPOINT_BIGGER_THAN_PC)} {\n    padding: 60px 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    & img {\n      width: 80%;\n      margin: 0 auto;\n    }\n  }\n`;\n"],"sourceRoot":""}