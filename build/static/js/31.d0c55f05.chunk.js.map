{"version":3,"sources":["queries/adminQuery.ts","utils/firebase.ts","queries/sharedQuery.ts","pages/Admin/PopupManager/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","DELETE_LINK","EDIT_POPUP","CREATE_REPLY","DELETE_REPLY","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","GET_POPUP_STATUS","GET_VIDEO_LINK","PopupManager","useState","status","setStatus","imgUrl","setImgUrl","useQuery","data","loading","refetch","useMutation","onCompleted","editPopup","ok","err","toast","success","error","console","log","uploading","setUploading","useEffect","getPopupStatus","up","uploadImage","useCallback","file","ref","filename","put","on","snapshot","getDownloadURL","then","url","a","handleSubmit","variables","Container","bordered","layout","Item","label","span","labelStyle","width","checked","onChange","style","marginBottom","display","src","alt","listType","customRequest","progress","showInfo","maxCount","callbackFile","onRemove","delete","catch","icon","StyledButton","type","disabled","onClick","styled","div","Button"],"mappings":"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","file":"static/js/31.d0c55f05.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n    $type: String\n    $private: Boolean\n    $writer: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n      type: $type\n      private: $private\n      writer: $writer\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        writer\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n    $private: Boolean\n    $type: String\n  ) {\n    editBoard(\n      id: $id\n      title: $title\n      content: $content\n      link: $link\n      private: $private\n      type: $type\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_POPUP = gql`\n  mutation editPopup($up: String!, $url: String) {\n    editPopup(up: $up, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_REPLY = gql`\n  mutation createReply($boardId: Int!, $content: String!) {\n    createReply(boardId: $boardId, content: $content) {\n      ok\n      err\n    }\n  }\n`;\nexport const EDIT_REPLY = gql`\n  mutation editReply($replyId: Int!, $content: String) {\n    editReply(replyId: $replyId, content: $content) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_REPLY = gql`\n  mutation deleteReply($replyId: Int!) {\n    deleteReply(replyId: $replyId) {\n      ok\n      err\n    }\n  }\n`;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDM5Cqu1m1YJ7E44OfM9Yo3LH0ZUN8Y6x4\",\n  authDomain: \"sunmoon-swe.firebaseapp.com\",\n  projectId: \"sunmoon-swe\",\n  storageBucket: \"sunmoon-swe.appspot.com\",\n  messagingSenderId: \"1064857281018\",\n  appId: \"1:1064857281018:web:b2881ce151e1a16b068443\",\n  measurementId: \"G-JYK8JT1WEN\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nexport { storage, firebase as default };\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        writer\n        showAttach\n        replies {\n          id\n          content\n        }\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_POPUP_STATUS = gql`\n  query getPopupStatus {\n    getPopupStatus {\n      ok\n      err\n      data {\n        url\n        up\n      }\n    }\n  }\n`;\n\nexport const GET_VIDEO_LINK = gql`\n  query getVideoLink {\n    getVideoLink {\n      ok\n      err\n      link\n    }\n  }\n`;\n\nexport const SEARCH_BOARD = gql`\n  query searchBoard($category: String!, $title: String!) {\n    searchBoard(category: $category, title: $title) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        writer\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const SEARCH_BOARD_BY_CONTENT = gql`\n  query searchBoardByContent($category: String!, $content: String!) {\n    searchBoardByContent(category: $category, content: $content) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        writer\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_POPUP_STATUS } from \"../../../queries/sharedQuery\";\nimport {\n  editPopup,\n  editPopupVariables,\n  getPopupStatus,\n} from \"../../../typings/api\";\nimport { Button, Descriptions, Switch, Upload } from \"antd\";\nimport { EDIT_POPUP } from \"../../../queries/adminQuery\";\nimport { storage } from \"../../../utils/firebase\";\nimport { toast } from \"react-toastify\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nconst PopupManager: React.FC = () => {\n  const [status, setStatus] = useState<string>(\"\");\n  const [imgUrl, setImgUrl] = useState<string>();\n  const { data, loading, refetch } = useQuery<getPopupStatus>(GET_POPUP_STATUS);\n  const [editPopup] = useMutation<editPopup, editPopupVariables>(EDIT_POPUP, {\n    onCompleted: ({ editPopup }) => {\n      const { ok, err } = editPopup;\n      if (ok) {\n        toast.success(\"팝업이 성공적으로 설정 되었습니다\");\n        refetch();\n      } else {\n        toast.error(err);\n        console.log(err);\n      }\n    },\n  });\n  const [uploading, setUploading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (data?.getPopupStatus.data?.up) {\n      setStatus(\"on\");\n    } else {\n      setStatus(\"off\");\n    }\n  }, [data]);\n\n  const uploadImage = useCallback((file: any) => {\n    setUploading(true);\n    const upload = storage.ref(`/popup/${file.filename}`).put(file);\n    upload.on(\n      \"state_changed\",\n      (snapshot) => {},\n      (err) => console.log(err),\n      () => {\n        storage\n          .ref(`/popup/${file.filename}`)\n          .getDownloadURL()\n          .then(async (url) => {\n            setImgUrl(url);\n            toast.success(\n              \"파일 / 이미지가 업로드 되었습니다, 설정 버튼을 눌러주세요\"\n            );\n            setUploading(false);\n          });\n      }\n    );\n  }, []);\n\n  const handleSubmit = useCallback(async () => {\n    await editPopup({\n      variables: {\n        up: status,\n        url: imgUrl,\n      },\n    });\n  }, [status, imgUrl, editPopup]);\n\n  const imageRemover = () => {\n    storage\n      .ref(`/popup`)\n      .delete()\n      .then(() => {\n        setImgUrl(\"\");\n      })\n      .catch((err) => toast.error(err));\n  };\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Descriptions bordered layout=\"horizontal\">\n        <Descriptions.Item\n          label=\"게시여부\"\n          span={4}\n          key={\"게시\"}\n          labelStyle={{ width: 120 }}\n        >\n          <Switch\n            checked={status === \"on\" ? true : false}\n            onChange={() => setStatus(status === \"on\" ? \"off\" : \"on\")}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item\n          label=\"게시물\"\n          key={\"게시\"}\n          labelStyle={{ width: 120 }}\n        >\n          <span style={{ marginBottom: 20, display: \"block\" }}>\n            &#8251;팝업 이미지는 가로 500 세로 700의 이미지를 사용 해 주세요.\n          </span>\n          {data &&\n          data.getPopupStatus.data &&\n          data.getPopupStatus.data.url !== \"\" ? (\n            <img\n              src={data.getPopupStatus.data.url || \"\"}\n              alt=\"popupimg\"\n              width={300}\n              style={{ display: \"block\", marginBottom: 15 }}\n            />\n          ) : (\n            <span style={{ display: \"block\", marginBottom: 15 }}>\n              게시물이 없습니다\n            </span>\n          )}\n          <Upload\n            style={{ marginBottom: 20, display: \"block\" }}\n            listType={\"picture\"}\n            customRequest={({ file }) => {\n              setUploading(true);\n              uploadImage(file);\n            }}\n            progress={{ showInfo: true }}\n            maxCount={0}\n            onChange={({ file: callbackFile }) => {\n              if (imgUrl !== \"\") {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            onRemove={imageRemover}\n          >\n            <Button icon={<UploadOutlined />}>Upload</Button>\n          </Upload>\n        </Descriptions.Item>\n      </Descriptions>\n      {uploading ? (\n        <StyledButton type=\"default\" disabled>\n          이미지 업로드중...\n        </StyledButton>\n      ) : (\n        <StyledButton\n          type=\"primary\"\n          onClick={handleSubmit}\n          disabled={uploading}\n        >\n          설정\n        </StyledButton>\n      )}\n    </Container>\n  );\n};\n\nexport default PopupManager;\n\nconst Container = styled.div``;\n\nconst StyledButton = styled(Button)`\n  margin: 30px;\n`;\n"],"sourceRoot":""}