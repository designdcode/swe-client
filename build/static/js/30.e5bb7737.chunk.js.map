{"version":3,"sources":["queries/adminQuery.ts","pages/Admin/ImageBoardPage/styles.tsx","pages/Admin/ImageBoardPage/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","Container","styled","div","Button","Btn","ImageBoardPage","history","useHistory","useParams","param","subparam","sub","state","useLocation","useState","file","setFile","image","setImage","useQuery","variables","category","data","loading","refetch","useEffect","initData","getBoardByCategory","ok","length","files","images","excuteRefetch","refresh","className","type","onClick","goBack","push","id","bordered","column","xxl","xl","lg","md","sm","xs","layout","Item","label","span","labelStyle","width","href","link","target","rel","Text","map","elem","idx","url","download","fileName","src","alt"],"mappings":"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","file":"static/js/30.e5bb7737.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { Button as Btn } from \"antd\";\n\nexport const Container = styled.div`\n  & .button-group {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &.attach-group {\n    display: flex;\n    flex-direction: column;\n  }\n\n  img {\n    object-fit: contain;\n    width: 400px;\n    height: 400px;\n  }\n`;\n\nexport const Button = styled(Btn)`\n  margin: 15px 0;\n`;\n","import { Descriptions, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { Container, Button } from \"./styles\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  getBoardByCategory,\n  getBoardByCategoryVariables,\n  getBoardByCategory_getBoardByCategory_data_files,\n  getBoardByCategory_getBoardByCategory_data_images,\n} from \"../../../typings/api\";\nimport { GET_BOARD_BY_CATEGORY } from \"../../../queries/adminQuery\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\n\ninterface locationProps {\n  search: string;\n  refresh?: boolean;\n}\n\nconst ImageBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { param, subparam } = useParams<ParamProps>();\n  let sub = subparam;\n  const { state } = useLocation<locationProps>();\n  const [file, setFile] = useState<\n    (getBoardByCategory_getBoardByCategory_data_files | null)[] | undefined\n  >();\n  const [image, setImage] =\n    useState<\n      (getBoardByCategory_getBoardByCategory_data_images | null | undefined)[]\n    >();\n\n  const { data, loading, refetch } = useQuery<\n    getBoardByCategory,\n    getBoardByCategoryVariables\n  >(GET_BOARD_BY_CATEGORY, {\n    variables: {\n      category: sub,\n    },\n  });\n\n  useEffect(() => {\n    const initData = () => {\n      if (\n        data?.getBoardByCategory.ok &&\n        data.getBoardByCategory.data?.length !== 0\n      ) {\n        if (\n          data.getBoardByCategory.data &&\n          data.getBoardByCategory.data.length !== 0\n        ) {\n          if (data.getBoardByCategory.data[0].files)\n            setFile(data.getBoardByCategory.data[0].files);\n          if (data.getBoardByCategory.data[0].images)\n            setImage(data.getBoardByCategory.data[0].images);\n        }\n      } else {\n        setFile([]);\n        setImage([]);\n      }\n    };\n    initData();\n    return () => initData();\n  }, [data]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) refetch();\n    };\n    if (state && state.refresh) {\n      excuteRefetch();\n    }\n    return () => excuteRefetch();\n  }, [refetch, state]);\n\n  if (loading) {\n    return <>loading</>;\n  }\n\n  return (\n    <Container>\n      <div className=\"button-group\">\n        <Button type=\"ghost\" onClick={() => history.goBack()}>\n          뒤로\n        </Button>\n        {data?.getBoardByCategory.data?.length !== 0 &&\n        data?.getBoardByCategory.ok ? (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              history.push(\n                `/admin/${param}/edit-image-${param}?category=${subparam}&id=${\n                  data.getBoardByCategory.data &&\n                  data.getBoardByCategory.data[0].id\n                }`\n              )\n            }\n          >\n            수정하기\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              history.push(\n                `/admin/${param}/create-image-${param}?category=${subparam}&param=${param}&subparam=${subparam}`\n              )\n            }\n          >\n            글쓰기\n          </Button>\n        )}\n      </div>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        <Descriptions.Item label=\"링크\" span={4} labelStyle={{ width: 100 }}>\n          {data?.getBoardByCategory.data?.length !== 0 &&\n          data?.getBoardByCategory.ok ? (\n            <a\n              href={`${\n                data.getBoardByCategory.data &&\n                data.getBoardByCategory.data[0].link\n              }`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {data.getBoardByCategory.data &&\n                data.getBoardByCategory.data[0].link}\n            </a>\n          ) : (\n            <Typography.Text>링크가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"파일\" span={4} labelStyle={{ width: 100 }}>\n          {file && file.length ? (\n            file.map((elem, idx) => {\n              return (\n                <span key={elem?.fileName} className={\"attach-group\"}>\n                  <a\n                    href={`${elem?.url}`}\n                    download\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {elem?.fileName}\n                  </a>\n                </span>\n              );\n            })\n          ) : (\n            <Typography.Text>첨부파일이 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"이미지\" span={4} labelStyle={{ width: 100 }}>\n          {image && image[0] ? (\n            <img src={image[0].url} alt={image[0].fileName} />\n          ) : (\n            <Typography.Text>업로드 된 이미지가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n      </Descriptions>\n    </Container>\n  );\n};\n\nexport default ImageBoardPage;\n"],"sourceRoot":""}