{"version":3,"sources":["../../../../src/react/hooks/useQuery.ts","pages/Admin/EditBoardPage/index.tsx"],"names":["useQuery","query","options","EditBoardPage","search","useLocation","queryObj","queryString","parse","history","useHistory","param","useParams","id","category","useState","board","setBoard","files","setFiles","tmpFiles","setTmpFiles","images","setImages","useInput","title","onChangeTitle","setTitle","content","onChangeContent","setContent","link","onChangeLink","setLink","progress","setProgress","imgUrl","setImgUrl","imgName","setImgName","uploadLoading","setUploadLoading","GET_BOARD_BY_ID","variables","parseInt","data","loading","refetch","useMutation","DELETE_BOARD","onCompleted","deleteBoard","ok","err","toast","success","push","pathname","state","refresh","console","log","error","DELETE_FILE","deleteFile","CREATE_FILE","createFile","CREATE_IMAGE","createImage","EDIT_BOARD","editBoard","handleDeleteBoard","useCallback","handleEditBoard","a","handleDeleteFile","name","storage","ref","delete","handleImageUpload","file","fileUploader","handleFileUpload","put","on","snapshot","getDownloadURL","then","url","prev","fileName","boardId","handleImageRemover","trim","fileRemover","useEffect","getBoardById","type","onClick","goBack","bordered","column","xxl","xl","lg","md","sm","xs","layout","Item","label","span","labelStyle","width","placeholder","undefined","value","onChange","length","map","elem","idx","className","href","download","target","rel","multiple","maxCount","customRequest","callbackFile","status","icon","src","alt","listType","showInfo","onRemove","TextArea","rows","disabled","danger"],"mappings":"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","file":"static/js/29.a10e611a.chunk.js","sourcesContent":["import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport queryString from \"query-string\";\nimport {\n  createFile,\n  createFileVariables,\n  createImage,\n  createImageVariables,\n  deleteBoard,\n  deleteBoardVariables,\n  deleteFile,\n  deleteFileVariables,\n  editBoard,\n  editBoardVariables,\n  getBoardByCategory_getBoardByCategory_data_files,\n  getBoardById,\n  getBoardByIdVariables,\n  getBoardById_getBoardById_data,\n  getBoardById_getBoardById_data_images,\n} from \"../../../typings/api\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD_BY_ID } from \"../../../queries/sharedQuery\";\nimport {\n  CREATE_FILE,\n  CREATE_IMAGE,\n  DELETE_BOARD,\n  DELETE_FILE,\n  EDIT_BOARD,\n} from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { Container, Button } from \"./styles\";\nimport { Descriptions, Input, Upload } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport {\n  DeleteOutlined,\n  LoadingOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport { storage } from \"../../../utils/firebase\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n}\n\nconst EditBoardPage: React.VFC = () => {\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const history = useHistory();\n  const { param } = useParams<paramProps>();\n  const { id, category } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [files, setFiles] =\n    useState<\n      (getBoardByCategory_getBoardByCategory_data_files | null | undefined)[]\n    >();\n  const [tmpFiles, setTmpFiles] = useState<{ url: string; fileName: string }[]>(\n    []\n  );\n  const [images, setImages] =\n    useState<(getBoardById_getBoardById_data_images | undefined | null)[]>();\n\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [content, onChangeContent, setContent] = useInput(\"\");\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [progress, setProgress] = useState<number>(0);\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [uploadLoading, setUploadLoading] = useState<boolean>(false);\n\n  const { data, loading, refetch } = useQuery<\n    getBoardById,\n    getBoardByIdVariables\n  >(GET_BOARD_BY_ID, {\n    variables: {\n      id: parseInt(id as string, 10),\n    },\n  });\n\n  const [deleteBoard] = useMutation<deleteBoard, deleteBoardVariables>(\n    DELETE_BOARD,\n    {\n      onCompleted: ({ deleteBoard }) => {\n        const { ok, err } = deleteBoard;\n        if (ok) {\n          toast.success(\"게시물이 삭제 되었습니다\");\n          history.push({\n            pathname: `/admin/${param}/${category}`,\n            state: { refresh: true },\n          });\n        } else {\n          console.log(err);\n          toast.error(\"게시물을 삭제 할 수 없습니다\");\n        }\n      },\n    }\n  );\n\n  const [deleteFile] = useMutation<deleteFile, deleteFileVariables>(\n    DELETE_FILE,\n    {\n      onCompleted: ({ deleteFile }) => {\n        const { ok, err } = deleteFile;\n        if (ok) {\n          toast.success(\"파일이 삭제 되었습니다\");\n          if (refetch) refetch();\n          else {\n            console.log(err);\n            toast.error(err);\n          }\n        }\n      },\n    }\n  );\n\n  const [createFile] = useMutation<createFile, createFileVariables>(\n    CREATE_FILE\n  );\n  const [createImage] = useMutation<createImage, createImageVariables>(\n    CREATE_IMAGE\n  );\n\n  const [editBoard] = useMutation<editBoard, editBoardVariables>(EDIT_BOARD, {\n    onCompleted: ({ editBoard }) => {\n      const { ok, err } = editBoard;\n      if (ok) {\n        toast.success(\"게시물이 수정 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleDeleteBoard = useCallback(() => {\n    deleteBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n      },\n    });\n  }, [id, deleteBoard]);\n\n  const handleEditBoard = useCallback(async () => {\n    await editBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n        title,\n        content: content,\n        link,\n      },\n    });\n  }, [id, title, content, link, editBoard]);\n\n  const handleDeleteFile = useCallback(\n    async (id: number, name?: string) => {\n      storage.ref(`/files/${category}/${name}`).delete();\n      await deleteFile({\n        variables: {\n          id,\n        },\n      });\n    },\n    [deleteFile, category]\n  );\n\n  const handleImageUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      setImgName(file.name);\n      setUploadLoading(true);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        file.name,\n        setImgUrl,\n        progress,\n        setProgress,\n        createImage,\n        parseInt(id as string, 10)\n      );\n      setUploadLoading(false);\n      setProgress(0);\n    },\n    [category, progress, createImage, id]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setUploadLoading(true);\n      setProgress(progress + 1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then(async (url) => {\n              setTmpFiles((prev) => [\n                ...prev,\n                { url: url, fileName: file.name },\n              ]);\n              await createFile({\n                variables: {\n                  url,\n                  fileName: file.name,\n                  boardId: parseInt(id as string, 10),\n                },\n                onCompleted: ({ createFile }) => {\n                  const { ok, err } = createFile;\n                  if (ok) {\n                    toast.success(\"파일이 업로드 되었습니다\");\n                    if (refetch) refetch();\n                  } else {\n                    toast.error(\"파일 업로드에 실패 하였습니다\");\n                    console.log(err);\n                  }\n                },\n              });\n              setUploadLoading(false);\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [createFile, id, category, progress, refetch]\n  );\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n      setTitle(data.getBoardById.data.title || \"\");\n      setContent(data.getBoardById.data.content || \"\");\n      setLink(data.getBoardById.data.link || \"\");\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.files\n    ) {\n      setFiles(data.getBoardById.data.files);\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.images\n    ) {\n      setImages(data.getBoardById.data.images);\n    }\n  }, [data, setTitle, setContent, setLink]);\n\n  useEffect(() => {\n    if (progress < 0) {\n      setProgress(0);\n    }\n  }, [progress]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Button type=\"ghost\" onClick={() => history.goBack()}>\n        뒤로\n      </Button>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        <Descriptions.Item label=\"제목\" span={4} labelStyle={{ width: 100 }}>\n          <Input\n            placeholder={board?.title || undefined}\n            value={title}\n            onChange={onChangeTitle}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"파일\" span={4} labelStyle={{ width: 100 }}>\n          {files && files.length !== 0 ? (\n            <>\n              {files.map((elem, idx) => {\n                return (\n                  <div key={idx} className=\"attach-group\">\n                    <a\n                      href={elem?.url}\n                      download\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      {elem?.fileName}\n                    </a>\n                    <button\n                      className=\"attach-button\"\n                      onClick={() => handleDeleteFile(elem!.id, elem!.fileName)}\n                    >\n                      <DeleteOutlined />\n                    </button>\n                  </div>\n                );\n              })}\n            </>\n          ) : tmpFiles.length === 0 ? (\n            <div>첨부파일 없음</div>\n          ) : (\n            <></>\n          )}\n          <Upload\n            multiple={true}\n            maxCount={4}\n            className=\"upload-list-inline\"\n            customRequest={({ file }) => handleFileUpload(file)}\n            onChange={({ file: callbackFile }) => {\n              if (tmpFiles.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n          >\n            <Button icon={<UploadOutlined />}>파일 업로드</Button>\n          </Upload>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"링크\" span={4}>\n          <Input\n            placeholder={board?.link || undefined}\n            value={link}\n            onChange={onChangeLink}\n          />\n        </Descriptions.Item>\n        {param === \"achievement\" && (\n          <Descriptions.Item\n            label=\"이미지\"\n            span={4}\n            labelStyle={{ width: 100 }}\n          >\n            {images && images.length !== 0 ? (\n              <div>\n                {imgUrl ? (\n                  <img src={imgUrl} width={300} alt=\"upimage\" />\n                ) : (\n                  <img src={images[0]!.url} alt=\"ima\" width={300} />\n                )}\n              </div>\n            ) : (\n              <div>이미지 없음</div>\n            )}\n            <Upload\n              multiple={true}\n              maxCount={1}\n              listType=\"picture\"\n              className=\"upload-list-inline\"\n              progress={{ showInfo: true }}\n              onRemove={() => handleImageRemover()}\n              customRequest={({ file }) => handleImageUpload(file)}\n              onChange={({ file: callbackFile }) => {\n                if (tmpFiles.length !== 0) {\n                  callbackFile.status = \"done\";\n                } else {\n                  callbackFile.status = \"removed\";\n                }\n              }}\n            >\n              <Button icon={<UploadOutlined />}>이미지 업로드</Button>\n            </Upload>\n          </Descriptions.Item>\n        )}\n        <Descriptions.Item label=\"내용\" span={4}>\n          <Input.TextArea\n            placeholder={board?.content || undefined}\n            rows={10}\n            value={content}\n            onChange={onChangeContent}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n      <div className=\"button-group\">\n        <Button\n          type=\"primary\"\n          onClick={() => handleEditBoard()}\n          disabled={uploadLoading}\n        >\n          {!loading ? (\n            <>\n              <LoadingOutlined /> 이미지 / 파일 업로드 중입니다...\n            </>\n          ) : (\n            \"Uploading...\"\n          )}\n        </Button>\n        <Button type=\"primary\" danger onClick={handleDeleteBoard}>\n          삭제하기\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default EditBoardPage;\n"],"sourceRoot":""}