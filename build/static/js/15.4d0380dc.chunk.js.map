{"version":3,"sources":["queries/sharedQuery.ts","utils/convertDate.ts","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/rc-util/es/getScrollBarSize.js","../node_modules/antd/es/_util/hooks/useForceUpdate.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","pages/Admin/Dashboard/styles.tsx","../node_modules/antd/es/divider/index.js","pages/Admin/Dashboard/index.tsx"],"names":["GET_BOARD_BY_ID","gql","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","getDate","time","itemDate","Date","Math","floor","parseInt","getFullYear","getMonth","CloseOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","displayName","cached","getScrollBarSize","fresh","document","undefined","inner","createElement","style","width","height","outer","outerStyle","position","top","left","pointerEvents","visibility","overflow","appendChild","body","widthContained","offsetWidth","widthScroll","clientWidth","removeChild","ensureSize","str","match","value","Number","isNaN","getTargetScrollBarSize","target","Element","_getComputedStyle","getComputedStyle","useForceUpdate","_React$useReducer","x","_slicedToArray","Row","Col","Container","styled","div","antCol","TableRowSpan","span","ExtendedRow","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Divider","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","Dashboard","useQuery","data","loading","refetch","error","linkData","linkLoading","linkRefetch","linkError","state","useLocation","useState","notice","setNotice","admission","setAdmission","links","setLinks","useMutation","DELETE_LINK","deleteLink","useEffect","getBoard","filter","item","category","includes","slice","getLinks","excuteRefetch","refresh","handleLinkDelete","useCallback","id","a","variables","then","ok","toast","success","console","gutter","justify","title","Title","level","dataSource","showHeader","rowKey","pagination","size","dataIndex","align","ellipsis","render","record","to","idx","href","danger","onClick","marginLeft"],"mappings":"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","file":"static/js/15.4d0380dc.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        private\n        type\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","export const getDate = (time: string) => {\n  const itemDate = new Date(Math.floor(parseInt(time, 10) / 1000) * 1000);\n  const date =\n    itemDate.getFullYear() +\n    \"-\" +\n    (itemDate.getMonth() + 1 >= 10\n      ? itemDate.getMonth() + 1\n      : `0${itemDate.getMonth() + 1}`) +\n    \"-\" +\n    (itemDate.getDate() >= 10 ? itemDate.getDate() : `0${itemDate.getDate()}`);\n  return date;\n};\n\nexport const convertMonth = (name: string): string => {\n  switch (name) {\n    case \"Jan\":\n      return \"1\";\n    case \"Feb\":\n      return \"2\";\n    case \"Mar\":\n      return \"3\";\n    case \"Apr\":\n      return \"4\";\n    case \"May\":\n      return \"5\";\n    case \"Jun\":\n      return \"6\";\n    case \"Jul\":\n      return \"7\";\n    case \"Aug\":\n      return \"8\";\n    case \"Sep\":\n      return \"9\";\n    case \"Oct\":\n      return \"10\";\n    case \"Nov\":\n      return \"11\";\n    case \"Dec\":\n      return \"12\";\n    default:\n      return name;\n  }\n};\n\nexport const convertDay = (name: string): string => {\n  switch (name) {\n    case \"Sun\":\n      return \"일\";\n    case \"Mon\":\n      return \"월\";\n    case \"Tue\":\n      return \"화\";\n    case \"Wed\":\n      return \"수\";\n    case \"Thu\":\n      return \"목\";\n    case \"Fri\":\n      return \"금\";\n    case \"Sat\":\n      return \"토\";\n    case \"0\":\n      return \"일\";\n    case \"1\":\n      return \"월\";\n    case \"2\":\n      return \"화\";\n    case \"3\":\n      return \"수\";\n    case \"4\":\n      return \"목\";\n    case \"5\":\n      return \"금\";\n    case \"6\":\n      return \"토\";\n    default:\n      return name;\n  }\n};\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","/* eslint-disable no-param-reassign */\nvar cached;\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n\n  if (fresh || cached === undefined) {\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    inner.style.height = '200px';\n    var outer = document.createElement('div');\n    var outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.top = '0';\n    outerStyle.left = '0';\n    outerStyle.pointerEvents = 'none';\n    outerStyle.visibility = 'hidden';\n    outerStyle.width = '200px';\n    outerStyle.height = '150px';\n    outerStyle.overflow = 'hidden';\n    outer.appendChild(inner);\n    document.body.appendChild(outer);\n    var widthContained = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var widthScroll = inner.offsetWidth;\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n    cached = widthContained - widthScroll;\n  }\n\n  return cached;\n}\n\nfunction ensureSize(str) {\n  var match = str.match(/^(.*)px$/);\n  var value = Number(match === null || match === void 0 ? void 0 : match[1]);\n  return Number.isNaN(value) ? getScrollBarSize() : value;\n}\n\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _getComputedStyle = getComputedStyle(target, '::-webkit-scrollbar'),\n      width = _getComputedStyle.width,\n      height = _getComputedStyle.height;\n\n  return {\n    width: ensureSize(width),\n    height: ensureSize(height)\n  };\n}","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useForceUpdate() {\n  var _React$useReducer = React.useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      forceUpdate = _React$useReducer2[1];\n\n  return forceUpdate;\n}","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import styled from \"@emotion/styled\";\nimport { Col as antCol, Row } from \"antd\";\n\nexport const Container = styled.div``;\n\nexport const Col = styled(antCol)`\n  height: 300px;\n`;\n\nexport const TableRowSpan = styled.span`\n  cursor: pointer;\n  &:hover {\n    transition: 0.2s linear;\n    color: #438ef7;\n  }\n`;\n\nexport const ExtendedRow = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Container, Col, TableRowSpan, ExtendedRow } from \"./styles\";\nimport { Row, Typography, Table, Divider, Button } from \"antd\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD, GET_LINK } from \"../../../queries/sharedQuery\";\nimport {\n  getBoard,\n  getBoard_getBoard_data,\n  getLinks,\n  getLinks_getLinks_data,\n} from \"../../../typings/api\";\nimport Column from \"antd/lib/table/Column\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { DELETE_LINK } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { getDate } from \"../../../utils/convertDate\";\n\ninterface LocationProps {\n  refresh?: boolean;\n}\n\nconst Dashboard: React.VFC = () => {\n  const { data, loading, refetch, error } = useQuery<getBoard>(GET_BOARD);\n  const {\n    data: linkData,\n    loading: linkLoading,\n    refetch: linkRefetch,\n    error: linkError,\n  } = useQuery<getLinks>(GET_LINK);\n  const { state } = useLocation<LocationProps>();\n  const [notice, setNotice] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [admission, setAdmission] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [links, setLinks] = useState<\n    Array<getLinks_getLinks_data> | undefined\n  >();\n\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  useEffect(() => {\n    if (data?.getBoard.data) {\n      setNotice(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-notice\"))\n          .slice(0, 5)\n      );\n      setAdmission(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-administration\"))\n          .slice(0, 5)\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (linkData?.getLinks.data) {\n      setLinks(linkData.getLinks.data as getLinks_getLinks_data[]);\n    }\n  }, [linkData]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) refetch();\n      if (linkRefetch) linkRefetch();\n    };\n    if (state && state.refresh) excuteRefetch();\n    return () => excuteRefetch();\n  }, [refetch, state, linkRefetch]);\n\n  const handleLinkDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: { id },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되엇습니다\");\n        }\n      });\n      refetch();\n      linkRefetch();\n    },\n    [refetch, deleteLink, linkRefetch]\n  );\n\n  if (error) console.error(error);\n  if (linkError) console.error(linkError);\n\n  return (\n    <Container>\n      {loading ? (\n        <>loading...</>\n      ) : (\n        <Row gutter={[30, 40]} justify={\"space-between\"}>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>공지사항</Typography.Title>\n              )}\n              dataSource={notice}\n              showHeader={false}\n              rowKey={\"noticeid\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                key={\"noticesubid\"}\n                render={(value, record: getBoard_getBoard_data, i) => {\n                  return (\n                    <TableRowSpan key={i}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                key={\"noticetime\"}\n                render={(value, record: getBoard_getBoard_data, i) => {\n                  return (\n                    <span key={i}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>학사공지</Typography.Title>\n              )}\n              dataSource={admission}\n              showHeader={false}\n              rowKey={\"admissionkey\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                key={\"subadmissionkey\"}\n                render={(value, record: getBoard_getBoard_data, id) => {\n                  return (\n                    <TableRowSpan key={id}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                key={\"subadmissionkeydate\"}\n                render={(value, record: getBoard_getBoard_data, idx) => {\n                  return (\n                    <span key={idx}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n        </Row>\n      )}\n      <Divider />\n      <ExtendedRow>\n        <Typography.Title level={4}>사이트 링크</Typography.Title>\n        {linkLoading ? (\n          <>loading...</>\n        ) : (\n          <Table\n            showHeader={false}\n            dataSource={links}\n            pagination={false}\n            rowKey=\"linkKey\"\n          >\n            <Column\n              dataIndex=\"title\"\n              align=\"left\"\n              key=\"linkKey0\"\n              render={(value) => {\n                return <span key=\"first\">{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"center\"\n              key=\"linkKey1\"\n              render={(value) => {\n                return <span key=\"second\">{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"right\"\n              key=\"linkKey2\"\n              render={(value, record: getLinks_getLinks_data) => {\n                return (\n                  <div key=\"third\">\n                    <a href={`${value}`}>\n                      <Button>바로가기</Button>\n                    </a>\n                    <Button\n                      danger\n                      onClick={() => handleLinkDelete(record.id)}\n                      style={{ marginLeft: 15 }}\n                    >\n                      링크삭제\n                    </Button>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n        )}\n      </ExtendedRow>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}