{"version":3,"sources":["queries/adminQuery.ts","hooks/useInput.ts","queries/sharedQuery.ts","utils/convertDate.ts","utils/loginResolver.ts","utils/forceHistory.tsx","assets/AdminNavData.ts","pages/Admin/BoardDetail/styles.tsx","pages/Admin/BoardDetail/index.tsx","pages/Admin/StoragePage/styles.tsx","pages/Admin/StoragePage/index.tsx","pages/Admin/Dashboard/styles.tsx","pages/Admin/Dashboard/index.tsx","pages/Admin/EditBoardPage/styles.tsx","utils/firebase.ts","pages/Admin/EditBoardPage/index.tsx","pages/Admin/UploadBoardPage/styles.tsx","utils/switcher.ts","utils/fileUploader.ts","utils/fileRemover.ts","pages/Admin/UploadBoardPage/index.tsx","pages/Admin/ImageBoardPage/styles.tsx","pages/Admin/ImageBoardPage/index.tsx","pages/Admin/UploadImageBoardPage/styles.tsx","pages/Admin/UploadImageBoardPage/index.tsx","pages/Admin/EditImageBoardPage/styles.tsx","pages/Admin/EditImageBoardPage/index.tsx","pages/Admin/LinkManager/styles.tsx","pages/Admin/LinkManager/index.tsx","utils/AdminRouteHandler.tsx","layouts/Admin/styles.tsx","layouts/Admin/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","useInput","initioalData","useState","value","setValue","useCallback","e","target","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","getDate","time","itemDate","Date","Math","floor","parseInt","getFullYear","getMonth","adminQuery","adminLogin","client","cache","writeQuery","query","data","localStorage","setItem","now","adminLoginVar","adminLogOut","removeItem","userLogin","stno","userLogOut","toast","success","forceHistory","push","createBrowserHistory","forceRefresh","AdminNavData","title","ko_title","subMenu","key","Container","styled","div","Button","Btn","BoardDetail","search","useLocation","param","useParams","history","useHistory","queryObj","queryString","parse","id","category","board","setBoard","files","setFiles","useLazyQuery","getBoardById","loading","useMutation","onCompleted","deleteBoard","ok","err","pathname","state","refresh","console","log","error","handleDeleteBoard","variables","useEffect","type","onClick","goBack","bordered","layout","style","display","flexDirection","Item","label","span","labelStyle","width","Title","level","createdAt","length","map","elem","idx","href","url","download","rel","fileName","whiteSpace","content","className","to","danger","StoragePage","subparam","boards","setBoards","getBoard","refetch","excuteRefetch","getBoardByCategory","res","dataSource","i","obj","index","marginTop","marginBottom","rowKey","dataIndex","render","text","record","size","Col","antCol","TableRowSpan","ExtendedRow","Row","Dashboard","useQuery","linkData","linkLoading","linkRefetch","linkError","notice","setNotice","admission","setAdmission","links","setLinks","deleteLink","filter","item","includes","slice","getLinks","handleLinkDelete","a","then","gutter","justify","showHeader","pagination","align","ellipsis","marginLeft","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","EditBoardPage","tmpFiles","setTmpFiles","onChangeTitle","setTitle","onChangeContent","setContent","link","onChangeLink","setLink","progress","setProgress","deleteFile","createFile","editBoard","handleEditBoard","handleDeleteFile","name","ref","delete","handleFileUpload","file","put","on","snapshot","getDownloadURL","prev","boardId","column","xxl","xl","lg","md","sm","xs","placeholder","undefined","onChange","DeleteOutlined","multiple","maxCount","customRequest","callbackFile","status","icon","UploadOutlined","TextArea","rows","disabled","LoadingOutlined","linkSwitcher","fileUploader","filename","createImage","fileRemover","catch","wrapperCol","UploadBoardPage","showLink","setShowLink","imgUrl","setImgUrl","imgName","setImgName","setFile","isLinkNeeded","setIsLinkNeeded","isFileNeeded","setIsFileNeeded","isImageNeeded","setIsImageNeeded","isContentNeeded","setIsContentNeeded","imageSwitcher","fileSwitcher","contentSwitcher","createBoard","handleLinkAdd","onFinish","trim","images","handleImageUpload","handleImageRemover","handleFileRemover","propFile","listType","showInfo","onRemove","offset","htmlType","ImageBoardPage","sub","image","setImage","initData","Text","src","alt","UploadImageBoardPage","EditImageBoardPage","deleteImage","List","LinkManager","onChangeUrl","setUrl","onAdd","setOnAdd","onEdit","setOnEdit","createLink","editLink","handleAdd","handleDelete","handleEdit","backgroundColor","EditOutlined","CheckOutlined","PlusOutlined","fontSize","AdminRouteHandler","routehandler","LoginContainer","Admin","loginStatus","useReactiveVar","adminId","adminIdOnChange","setAdminId","adminPW","adminPWOnChange","setAdminPW","pickMenu","setPickMenu","parentMenu","setParentMenu","setParams","showBreadCrumb","setShowBreadCrumb","SubMenu","Menu","Header","Layout","Content","Sider","handlePickMenu","koMenu","koParentMenu","menu","handleClickDashboard","getItem","minHeight","theme","mode","justifyContent","LogoutOutlined","defaultSelectedKeys","defaultOpenKeys","height","borderRight","padding","margin","initialValues","remember","rules","required","message","prefix","UserOutlined","LockOutlined"],"mappings":"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","file":"static/js/6.1c80c27d.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import {\n  ChangeEvent,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n} from \"react\";\n\ntype ReturnTypes<T> = [\n  T,\n  (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n  Dispatch<SetStateAction<T>>\n];\n\nconst useInput = <T>(initioalData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initioalData);\n  const handler = useCallback((e) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n","export const getDate = (time: string) => {\n  const itemDate = new Date(Math.floor(parseInt(time, 10) / 1000) * 1000);\n  const date =\n    itemDate.getFullYear() +\n    \"-\" +\n    (itemDate.getMonth() + 1 >= 10\n      ? itemDate.getMonth() + 1\n      : `0${itemDate.getMonth() + 1}`) +\n    \"-\" +\n    (itemDate.getDate() >= 10 ? itemDate.getDate() : `0${itemDate.getDate()}`);\n  return date;\n};\n\nexport const convertMonth = (name: string): string => {\n  switch (name) {\n    case \"Jan\":\n      return \"1\";\n    case \"Feb\":\n      return \"2\";\n    case \"Mar\":\n      return \"3\";\n    case \"Apr\":\n      return \"4\";\n    case \"May\":\n      return \"5\";\n    case \"Jun\":\n      return \"6\";\n    case \"Jul\":\n      return \"7\";\n    case \"Aug\":\n      return \"8\";\n    case \"Sep\":\n      return \"9\";\n    case \"Oct\":\n      return \"10\";\n    case \"Nov\":\n      return \"11\";\n    case \"Dec\":\n      return \"12\";\n    default:\n      return name;\n  }\n};\n\nexport const convertDay = (name: string): string => {\n  switch (name) {\n    case \"Sun\":\n      return \"일\";\n    case \"Mon\":\n      return \"월\";\n    case \"Tue\":\n      return \"화\";\n    case \"Wed\":\n      return \"수\";\n    case \"Thu\":\n      return \"목\";\n    case \"Fri\":\n      return \"금\";\n    case \"Sat\":\n      return \"토\";\n    case \"0\":\n      return \"일\";\n    case \"1\":\n      return \"월\";\n    case \"2\":\n      return \"화\";\n    case \"3\":\n      return \"수\";\n    case \"4\":\n      return \"목\";\n    case \"5\":\n      return \"금\";\n    case \"6\":\n      return \"토\";\n    default:\n      return name;\n  }\n};\n","import { gql } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\nimport client, { adminLoginVar } from \"./apollo\";\nimport { forceHistory } from \"./forceHistory\";\n\nexport const adminQuery = gql`\n  query adminLogin {\n    adminLogin @client\n  }\n`;\n\nexport const adminLogin = () => {\n  client.cache.writeQuery({\n    query: adminQuery,\n    data: {\n      adminLogin: true,\n    },\n  });\n  localStorage.setItem(\"admin\", `${Date.now() + 7200000}`);\n  adminLoginVar(true);\n};\n\nexport const adminLogOut = () => {\n  client.cache.writeQuery({\n    query: adminQuery,\n    data: {\n      adminLogin: false,\n    },\n  });\n  localStorage.removeItem(\"admin\");\n  adminLoginVar(false);\n};\n\nexport const userLogin = (stno: string) => {\n  localStorage.setItem(`stno`, `${stno}`);\n};\n\nexport const userLogOut = () => {\n  localStorage.removeItem(\"stno\");\n  toast.success(\"로그아웃 되었습니다\");\n  forceHistory.push(\"/main\");\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const forceHistory = createBrowserHistory({ forceRefresh: true });\n","export interface ObjProps {\n  key: string;\n  title: string;\n  ko_title: string;\n}\nexport interface NavProps {\n  title: string;\n  ko_title: string;\n  subMenu: Array<ObjProps>;\n}\n\nexport const AdminNavData: NavProps[] = [\n  {\n    title: \"intro\",\n    ko_title: \"사업단 소개\",\n    subMenu: [\n      {\n        key: \"intro-introduce\",\n        title: \"introduce\",\n        ko_title: \"인사말\",\n      },\n      {\n        key: \"intro-overview\",\n        title: \"overview\",\n        ko_title: \"사업개요\",\n      },\n      {\n        key: \"intro-history\",\n        title: \"history\",\n        ko_title: \"연혁\",\n      },\n      {\n        key: \"intro-task\",\n        title: \"task\",\n        ko_title: \"조직도 및 업무\",\n      },\n      {\n        key: \"intro-route\",\n        title: \"route\",\n        ko_title: \"오시는길\",\n      },\n    ],\n  },\n  {\n    title: \"basic\",\n    ko_title: \"SW기초교육\",\n    subMenu: [\n      {\n        key: \"basic-overview\",\n        title: \"basic-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"basic-pre\",\n        title: \"basic-pre-education\",\n        ko_title: \"입학전 SW교육\",\n      },\n      {\n        key: \"basic-basicedu\",\n        title: \"basic-education\",\n        ko_title: \"SW기초교육\",\n      },\n      {\n        key: \"basic-creativity\",\n        title: \"basic-creativity\",\n        ko_title: \"SW창의역량인증\",\n      },\n      {\n        key: \"basic-lecture\",\n        title: \"basic-lecture\",\n        ko_title: \"ST@R EDX 공개강좌\",\n      },\n      {\n        key: \"basic-clinic\",\n        title: \"basic-clinic\",\n        ko_title: \"SW클리닉\",\n      },\n      {\n        key: \"basic-tutoring\",\n        title: \"basic-tutoring\",\n        ko_title: \"SW튜터링\",\n      },\n      {\n        key: \"basic-AI\",\n        title: \"basic-AI\",\n        ko_title: \"AI SW 서포터즈 맨토링\",\n      },\n      {\n        key: \"basic-online\",\n        title: \"basic-online\",\n        ko_title: \"개방형 온라인 플랫폼(K-MOOC)\",\n      },\n    ],\n  },\n  {\n    title: \"major\",\n    ko_title: \"SW전공교육\",\n    subMenu: [\n      {\n        key: \"major-overview\",\n        title: \"major-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"major-project\",\n        title: \"major-project\",\n        ko_title: \"프로젝트 기반 교육과정\",\n      },\n      {\n        key: \"major-sw\",\n        title: \"major-sw\",\n        ko_title: \"몰입형 SW교육과정\",\n      },\n      {\n        key: \"major-opensource\",\n        title: \"major-opensource\",\n        ko_title: \"오픈소스 SW 교육\",\n      },\n      {\n        key: \"major-verify\",\n        title: \"major-verify\",\n        ko_title: \"소프트웨어 전문역량 인증제\",\n      },\n      {\n        key: \"major-contest\",\n        title: \"major-contest\",\n        ko_title: \"SW 경진대회\",\n      },\n      {\n        key: \"major-training\",\n        title: \"major-training\",\n        ko_title: \"해외현장실습\",\n      },\n      {\n        key: \"major-taprogram\",\n        title: \"major-taprogram\",\n        ko_title: \"프로그래밍교과목 멘토(TA) 프로그램\",\n      },\n    ],\n  },\n  {\n    title: \"integration\",\n    ko_title: \"SW융합교육\",\n    subMenu: [\n      {\n        key: \"integration-overview\",\n        title: \"integration-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"integration-software\",\n        title: \"integration-software\",\n        ko_title: \"소프트웨어 융합경영전공\",\n      },\n      {\n        key: \"integration-product\",\n        title: \"integration-product\",\n        ko_title: \"스마트제조 IOT융합전공\",\n      },\n      {\n        key: \"integration-content\",\n        title: \"integration-content\",\n        ko_title: \"스마트콘텐츠 융합전공\",\n      },\n      {\n        key: \"integration-automobile\",\n        title: \"integration-automobile\",\n        ko_title: \"미래자동차 융합전공\",\n      },\n      {\n        key: \"integration-inteligence\",\n        title: \"integration-inteligence\",\n        ko_title: \"지능형 전장 제어 전공\",\n      },\n    ],\n  },\n  {\n    title: \"value\",\n    ko_title: \"SW가치확산\",\n    subMenu: [\n      {\n        key: \"value-overview\",\n        title: \"value-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"value-edu\",\n        title: \"value-edu\",\n        ko_title: \"수요중심 AI · SW 교육\",\n      },\n      {\n        key: \"value-training\",\n        title: \"value-training\",\n        ko_title: \"AI · SW 선도자 양성\",\n      },\n      {\n        key: \"value-share\",\n        title: \"value-share\",\n        ko_title: \"AI · SW 가치공유\",\n      },\n      {\n        key: \"value-platform\",\n        title: \"value-platform\",\n        ko_title: \"SW 가치확산 플랫폼\",\n      },\n    ],\n  },\n  {\n    title: \"cooperation\",\n    ko_title: \"SW산학협력\",\n    subMenu: [\n      {\n        key: \"cooperation-overview\",\n        title: \"cooperation-overview\",\n        ko_title: \"개요\",\n      },\n      {\n        key: \"cooperation-network\",\n        title: \"cooperation-network\",\n        ko_title: \"국내 · 외 기관과의 네트워크\",\n      },\n      {\n        key: \"cooperation-project\",\n        title: \"cooperation-project\",\n        ko_title: \"국내 · 외 기관과의 프로젝트\",\n      },\n      {\n        key: \"cooperation-internship\",\n        title: \"cooperation-internship\",\n        ko_title: \"국내 · 외 기관과의 연계 인턴쉽\",\n      },\n    ],\n  },\n  {\n    title: \"achievement\",\n    ko_title: \"사업성과\",\n    subMenu: [\n      {\n        key: \"acheivement-news\",\n        title: \"acheivement-news\",\n        ko_title: \"사업단 소식\",\n      },\n      {\n        key: \"acheivement-aidnew\",\n        title: \"acheivement-aidnew\",\n        ko_title: \"SW교육지원 소식\",\n      },\n      {\n        key: \"acheivement-valuenews\",\n        title: \"acheivement-valuenews\",\n        ko_title: \"SW가치확산 소식\",\n      },\n      {\n        key: \"acheivement-coopnews\",\n        title: \"acheivement-coopnews\",\n        ko_title: \"SW산학협력소식\",\n      },\n      {\n        key: \"acheivement-startup\",\n        title: \"acheivement-startup\",\n        ko_title: \"창업지원 소식\",\n      },\n    ],\n  },\n  {\n    title: \"community\",\n    ko_title: \"알림마당\",\n    subMenu: [\n      {\n        key: \"community-notice\",\n        title: \"community-notice\",\n        ko_title: \"공지사항\",\n      },\n      {\n        key: \"community-administration\",\n        title: \"community-administration\",\n        ko_title: \"학사공지\",\n      },\n      {\n        key: \"community-storaoge\",\n        title: \"community-storage\",\n        ko_title: \"서식자료실\",\n      },\n      {\n        key: \"community-request\",\n        title: \"community-request\",\n        ko_title: \"건의사항\",\n      },\n      {\n        key: \"community-help\",\n        title: \"community-help\",\n        ko_title: \"헬프데스크\",\n      },\n      {\n        key: \"community-sitemap\",\n        title: \"community-sitemap\",\n        ko_title: \"사이트맵\",\n      },\n    ],\n  },\n  {\n    title: \"sitelink\",\n    ko_title: \"사이트링크\",\n    subMenu: [\n      {\n        key: \"site-link\",\n        title: \"link\",\n        ko_title: \"링크관리\",\n      },\n    ],\n  },\n];\n","import styled from \"@emotion/styled\";\nimport { Button as Btn } from \"antd\";\n\nexport const Container = styled.div`\n  & .button-group {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Button = styled(Btn)`\n  margin: 15px 0;\n  margin-right: 15px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { GET_BOARD_BY_ID } from \"../../../queries/sharedQuery\";\nimport {\n  getBoardById,\n  getBoardById_getBoardById_data,\n  getBoardById_getBoardById_data_files,\n} from \"../../../typings/api\";\nimport { Descriptions, Typography } from \"antd\";\nimport { Button, Container } from \"./styles\";\nimport { DELETE_BOARD } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { getDate } from \"../../../utils/convertDate\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n}\n\nconst BoardDetail: React.VFC = () => {\n  const { search } = useLocation<locationProps>();\n  const { param } = useParams<paramProps>();\n  const history = useHistory();\n  const queryObj = queryString.parse(search);\n  const { id, category } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [files, setFiles] =\n    useState<(getBoardById_getBoardById_data_files | undefined | null)[]>();\n  const [getBoardById, { loading, data }] =\n    useLazyQuery<getBoardById>(GET_BOARD_BY_ID);\n\n  const [deleteBoard] = useMutation(DELETE_BOARD, {\n    onCompleted: ({ deleteBoard }) => {\n      const { ok, err } = deleteBoard;\n      if (ok) {\n        toast.success(\"게시물이 삭제 되었습니다.\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleDeleteBoard = useCallback(() => {\n    deleteBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n      },\n    });\n  }, [id, deleteBoard]);\n\n  useEffect(() => {\n    if (id) {\n      getBoardById({ variables: { id: parseInt(id as string, 10) } });\n    }\n  }, [id, getBoardById]);\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.files\n    ) {\n      setFiles(data.getBoardById.data.files);\n    }\n  }, [data]);\n\n  if (loading) {\n    return <>loading</>;\n  }\n\n  return (\n    <Container>\n      <Button type=\"ghost\" onClick={() => history.goBack()}>\n        뒤로\n      </Button>\n      <Descriptions\n        bordered\n        // column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <Descriptions.Item label=\"제목\" span={4} labelStyle={{ width: 100 }}>\n          <Typography.Title level={3}>{board?.title}</Typography.Title>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"작성일\" span={4} labelStyle={{ width: 100 }}>\n          {getDate(board?.createdAt || \"\")}\n        </Descriptions.Item>\n        <Descriptions.Item\n          label=\"첨부파일\"\n          span={4}\n          labelStyle={{ width: 100 }}\n        >\n          {files && files.length !== 0 ? (\n            <>\n              {files.map((elem, idx) => {\n                return (\n                  <span key={idx} style={{ display: \"inline-block\" }}>\n                    <a\n                      href={elem?.url}\n                      download\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      {elem?.fileName}\n                    </a>\n                  </span>\n                );\n              })}\n            </>\n          ) : (\n            <>첨부파일 없음</>\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"내용\" span={4}>\n          <span style={{ whiteSpace: \"pre-wrap\" }}>{board?.content}</span>\n        </Descriptions.Item>\n      </Descriptions>\n      <div className=\"button-group\">\n        <Link\n          to={`/admin/${param}/edit-${param}?category=${category}&id=${id}`}\n        >\n          <Button type=\"primary\">수정</Button>\n        </Link>\n        <Button type=\"primary\" danger onClick={handleDeleteBoard}>\n          삭제\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default BoardDetail;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n","import { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { Table, Space, Button } from \"antd\";\nimport Column from \"antd/lib/table/Column\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  DELETE_BOARD,\n  GET_BOARD_BY_CATEGORY,\n} from \"../../../queries/adminQuery\";\nimport { getBoardByCategory } from \"../../../typings/api\";\nimport { getDate } from \"../../../utils/convertDate\";\nimport { Container } from \"./styles\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\ninterface TableBoardProps {\n  id: number | null;\n  index: number | null;\n  title: string | null;\n  createdAt: string | null;\n  category: string;\n}\n\ninterface LocationProps {\n  refresh?: boolean;\n}\n\nconst StoragePage = () => {\n  const { param, subparam } = useParams<ParamProps>();\n  const { state } = useLocation<LocationProps>();\n  const [boards, setBoards] = useState<Array<TableBoardProps>>();\n  const [getBoard, { loading, data, refetch }] =\n    useLazyQuery<getBoardByCategory>(GET_BOARD_BY_CATEGORY);\n\n  const [deleteBoard] = useMutation(DELETE_BOARD, {\n    onCompleted: ({ deleteBoard }) => {\n      const { ok, err } = deleteBoard;\n      if (ok) {\n        toast.success(\"게시물이 삭제 되었습니다\");\n        if (refetch) {\n          refetch();\n        }\n      } else {\n        toast.error(err);\n      }\n    },\n  });\n\n  useEffect(() => {\n    getBoard({ variables: { category: subparam } });\n  }, [getBoard, subparam]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) {\n        refetch();\n      }\n    };\n    if (state && state.refresh) {\n      excuteRefetch();\n    }\n    return () => excuteRefetch();\n  }, [refetch, state]);\n\n  useEffect(() => {\n    if (data && data.getBoardByCategory && data.getBoardByCategory.data) {\n      const res = data.getBoardByCategory.data;\n      const dataSource: Array<TableBoardProps> = [];\n      res.map((elem, i) => {\n        const obj: TableBoardProps = {\n          id: elem.id,\n          index: res.length - i,\n          title: elem.title,\n          createdAt: getDate(elem.createdAt || \"\"),\n          category: elem.category,\n        };\n        return dataSource.push(obj);\n      });\n      setBoards(dataSource);\n    }\n  }, [data]);\n\n  if (loading) {\n    return <>loading</>;\n  }\n\n  return (\n    <Container>\n      <Link\n        to={`/admin/${param}/create-${param}?category=${subparam}&param=${param}&subparam=${subparam}`}\n      >\n        <Button type=\"primary\" style={{ marginTop: 15, marginBottom: 20 }}>\n          글쓰기\n        </Button>\n      </Link>\n      <Table dataSource={boards} rowKey={\"id\"}>\n        <Column title=\"번호\" dataIndex=\"index\" key=\"index\" width={80} />\n        <Column\n          title=\"제목\"\n          dataIndex=\"title\"\n          key=\"title\"\n          render={(text, record: TableBoardProps) => {\n            return (\n              <Space>\n                <Link\n                  to={`/admin/${param}/detail-${param}?category=${subparam}&id=${record.id}`}\n                >\n                  {text}\n                </Link>\n              </Space>\n            );\n          }}\n        />\n        <Column\n          title=\"작성일\"\n          dataIndex=\"createdAt\"\n          key=\"createdAt\"\n          width={150}\n        />\n        <Column\n          title=\"Action\"\n          key=\"action\"\n          width={150}\n          render={(text, record: TableBoardProps) => (\n            <Space size=\"middle\">\n              <Button\n                type=\"primary\"\n                danger\n                onClick={() => deleteBoard({ variables: { id: record.id } })}\n              >\n                삭제\n              </Button>\n            </Space>\n          )}\n        />\n      </Table>\n    </Container>\n  );\n};\n\nexport default StoragePage;\n","import styled from \"@emotion/styled\";\nimport { Col as antCol, Row } from \"antd\";\n\nexport const Container = styled.div``;\n\nexport const Col = styled(antCol)`\n  height: 300px;\n`;\n\nexport const TableRowSpan = styled.span`\n  cursor: pointer;\n  &:hover {\n    transition: 0.2s linear;\n    color: #438ef7;\n  }\n`;\n\nexport const ExtendedRow = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Container, Col, TableRowSpan, ExtendedRow } from \"./styles\";\nimport { Row, Typography, Table, Divider, Button } from \"antd\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD, GET_LINK } from \"../../../queries/sharedQuery\";\nimport {\n  getBoard,\n  getBoard_getBoard_data,\n  getLinks,\n  getLinks_getLinks_data,\n} from \"../../../typings/api\";\nimport Column from \"antd/lib/table/Column\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { DELETE_LINK } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { getDate } from \"../../../utils/convertDate\";\n\ninterface LocationProps {\n  refresh?: boolean;\n}\n\nconst Dashboard: React.VFC = () => {\n  const { data, loading, refetch, error } = useQuery<getBoard>(GET_BOARD);\n  const {\n    data: linkData,\n    loading: linkLoading,\n    refetch: linkRefetch,\n    error: linkError,\n  } = useQuery<getLinks>(GET_LINK);\n  const { state } = useLocation<LocationProps>();\n  const [notice, setNotice] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [admission, setAdmission] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [links, setLinks] = useState<\n    Array<getLinks_getLinks_data> | undefined\n  >();\n\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  useEffect(() => {\n    if (data?.getBoard.data) {\n      setNotice(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-notice\"))\n          .slice(0, 5)\n      );\n      setAdmission(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-administration\"))\n          .slice(0, 5)\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (linkData?.getLinks.data) {\n      setLinks(linkData.getLinks.data as getLinks_getLinks_data[]);\n    }\n  }, [linkData]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) refetch();\n      if (linkRefetch) linkRefetch();\n    };\n    if (state && state.refresh) excuteRefetch();\n    return () => excuteRefetch();\n  }, [refetch, state, linkRefetch]);\n\n  const handleLinkDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: { id },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되엇습니다\");\n        }\n      });\n      refetch();\n      linkRefetch();\n    },\n    [refetch, deleteLink, linkRefetch]\n  );\n\n  if (error) console.error(error);\n  if (linkError) console.error(linkError);\n\n  return (\n    <Container>\n      {loading ? (\n        <>loading...</>\n      ) : (\n        <Row gutter={[30, 40]} justify={\"space-between\"}>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>공지사항</Typography.Title>\n              )}\n              dataSource={notice}\n              showHeader={false}\n              rowKey={\"id\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                render={(value, record: getBoard_getBoard_data) => {\n                  return (\n                    <TableRowSpan>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                render={(value, record: getBoard_getBoard_data) => {\n                  return (\n                    <span>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>학사공지</Typography.Title>\n              )}\n              dataSource={admission}\n              showHeader={false}\n              rowKey={\"id\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                render={(value, record: getBoard_getBoard_data) => {\n                  return (\n                    <TableRowSpan>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                render={(value, record: getBoard_getBoard_data) => {\n                  return (\n                    <span>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n        </Row>\n      )}\n      <Divider />\n      <ExtendedRow>\n        <Typography.Title level={4}>사이트 링크</Typography.Title>\n        {linkLoading ? (\n          <>loading...</>\n        ) : (\n          <Table showHeader={false} dataSource={links} pagination={false}>\n            <Column\n              dataIndex=\"title\"\n              align=\"left\"\n              render={(value) => {\n                return <span>{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"center\"\n              render={(value) => {\n                return <span>{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"right\"\n              render={(value, record: getLinks_getLinks_data) => {\n                return (\n                  <div>\n                    <a href={`${value}`}>\n                      <Button>바로가기</Button>\n                    </a>\n                    <Button\n                      danger\n                      onClick={() => handleLinkDelete(record.id)}\n                      style={{ marginLeft: 15 }}\n                    >\n                      링크삭제\n                    </Button>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n        )}\n      </ExtendedRow>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import styled from \"@emotion/styled\";\nimport { Button as Btn } from \"antd\";\n\nexport const Container = styled.div`\n  & .button-group {\n    display: flex;\n    align-items: center;\n  }\n\n  & .attach-group {\n    display: flex;\n    margin: 5px 0;\n  }\n\n  & .attach-button {\n    margin-left: 15px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      transition: linear 0.2s;\n    }\n  }\n`;\n\nexport const Button = styled(Btn)`\n  margin: 15px 0;\n  margin-right: 15px;\n`;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDM5Cqu1m1YJ7E44OfM9Yo3LH0ZUN8Y6x4\",\n  authDomain: \"sunmoon-swe.firebaseapp.com\",\n  projectId: \"sunmoon-swe\",\n  storageBucket: \"sunmoon-swe.appspot.com\",\n  messagingSenderId: \"1064857281018\",\n  appId: \"1:1064857281018:web:b2881ce151e1a16b068443\",\n  measurementId: \"G-JYK8JT1WEN\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nexport { storage, firebase as default };\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport queryString from \"query-string\";\nimport {\n  getBoardByCategory_getBoardByCategory_data_files,\n  getBoardById,\n  getBoardById_getBoardById_data,\n} from \"../../../typings/api\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { GET_BOARD } from \"../../../queries/sharedQuery\";\nimport {\n  CREATE_FILE,\n  DELETE_BOARD,\n  DELETE_FILE,\n  EDIT_BOARD,\n} from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { Container, Button } from \"./styles\";\nimport { Descriptions, Input, Upload } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport {\n  DeleteOutlined,\n  LoadingOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport { storage } from \"../../../utils/firebase\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n}\n\nconst EditBoardPage: React.VFC = () => {\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const history = useHistory();\n  const { param } = useParams<paramProps>();\n  const { id, category } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [files, setFiles] =\n    useState<\n      (getBoardByCategory_getBoardByCategory_data_files | null | undefined)[]\n    >();\n  const [tmpFiles, setTmpFiles] = useState<{ url: string; fileName: string }[]>(\n    []\n  );\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [content, onChangeContent, setContent] = useInput(\"\");\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [progress, setProgress] = useState<number>(0);\n\n  const [getBoardById, { loading, data, refetch }] =\n    useLazyQuery<getBoardById>(GET_BOARD);\n\n  const [deleteBoard] = useMutation(DELETE_BOARD, {\n    onCompleted: ({ deleteBoard }) => {\n      const { ok, err } = deleteBoard;\n      if (ok) {\n        toast.success(\"게시물이 삭제 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const [deleteFile] = useMutation(DELETE_FILE, {\n    onCompleted: ({ deleteFile }) => {\n      const { ok, err } = deleteFile;\n      if (ok) {\n        toast.success(\"파일이 삭제 되었습니다\");\n        if (refetch) refetch();\n        else {\n          console.log(err);\n          toast.error(err);\n        }\n      }\n    },\n  });\n\n  const [createFile] = useMutation(CREATE_FILE);\n\n  const [editBoard] = useMutation(EDIT_BOARD, {\n    onCompleted: ({ editBoard }) => {\n      const { ok, err } = editBoard;\n      if (ok) {\n        toast.success(\"게시물이 수정 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleDeleteBoard = useCallback(() => {\n    deleteBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n      },\n    });\n  }, [id, deleteBoard]);\n\n  const handleEditBoard = useCallback(() => {\n    editBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n        title,\n        content: content,\n        link,\n      },\n    });\n  }, [id, title, content, link, editBoard]);\n\n  const handleDeleteFile = useCallback(\n    async (id?: number, name?: string) => {\n      storage.ref(`/files/${category}/${name}`).delete();\n      await deleteFile({\n        variables: {\n          id,\n        },\n      });\n    },\n    [deleteFile, category]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then(async (url) => {\n              setTmpFiles((prev) => [\n                ...prev,\n                { url: url, fileName: file.name },\n              ]);\n              await createFile({\n                variables: {\n                  url,\n                  fileName: file.name,\n                  boardId: parseInt(id as string, 10),\n                },\n                onCompleted: ({ createFile }) => {\n                  const { ok, err } = createFile;\n                  if (ok) {\n                    toast.success(\"파일이 업로드 되었습니다\");\n                    if (refetch) refetch();\n                  } else {\n                    toast.error(\"파일 업로드에 실패 하였습니다\");\n                    console.log(err);\n                  }\n                },\n              });\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [createFile, id, category, progress, refetch]\n  );\n\n  useEffect(() => {\n    if (id) {\n      getBoardById({ variables: { id: parseInt(id as string, 10) } });\n    }\n  }, [id, getBoardById]);\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n      setTitle(data.getBoardById.data.title || \"\");\n      setContent(data.getBoardById.data.content || \"\");\n      setLink(data.getBoardById.data.link || \"\");\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.files\n    ) {\n      setFiles(data.getBoardById.data.files);\n    }\n  }, [data, setTitle, setContent, setLink]);\n\n  useEffect(() => {\n    if (progress < 0) {\n      setProgress(0);\n    }\n  }, [progress]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Button type=\"ghost\" onClick={() => history.goBack()}>\n        뒤로\n      </Button>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        <Descriptions.Item label=\"제목\" span={4} labelStyle={{ width: 100 }}>\n          <Input\n            placeholder={board?.title || undefined}\n            value={title}\n            onChange={onChangeTitle}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item\n          label=\"첨부파일\"\n          span={4}\n          labelStyle={{ width: 100 }}\n        >\n          {files && files.length !== 0 ? (\n            <>\n              {files.map((elem, idx) => {\n                return (\n                  <div key={idx} className=\"attach-group\">\n                    <a\n                      href={elem?.url}\n                      download\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      {elem?.fileName}\n                    </a>\n                    <button\n                      className=\"attach-button\"\n                      onClick={() => handleDeleteFile(elem?.id, elem?.fileName)}\n                    >\n                      <DeleteOutlined />\n                    </button>\n                  </div>\n                );\n              })}\n            </>\n          ) : tmpFiles.length === 0 ? (\n            <div>첨부파일 없음</div>\n          ) : (\n            <></>\n          )}\n          <Upload\n            multiple={true}\n            maxCount={4}\n            className=\"upload-list-inline\"\n            customRequest={({ file }) => handleFileUpload(file)}\n            onChange={({ file: callbackFile }) => {\n              if (tmpFiles.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n          >\n            <Button icon={<UploadOutlined />}>파일 업로드</Button>\n          </Upload>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"링크\" span={4}>\n          <Input\n            placeholder={board?.link || undefined}\n            value={link}\n            onChange={onChangeLink}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"내용\" span={4}>\n          <Input.TextArea\n            placeholder={board?.content || undefined}\n            rows={10}\n            value={content}\n            onChange={onChangeContent}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n      <div className=\"button-group\">\n        <Button\n          type=\"primary\"\n          onClick={() => handleEditBoard()}\n          disabled={progress !== 0 ? true : false}\n        >\n          {!loading ? (\n            progress <= 0 ? (\n              \"올리기\"\n            ) : (\n              <>\n                <LoadingOutlined /> 이미지 / 파일 업로드 중입니다...\n              </>\n            )\n          ) : (\n            \"Uploading...\"\n          )}\n        </Button>\n        <Button type=\"primary\" danger onClick={handleDeleteBoard}>\n          삭제하기\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default EditBoardPage;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  & .link-checkbox {\n    margin: 20px;\n    margin-left: 40px;\n  }\n\n  & .upload-list-inline {\n    width: 200px;\n    margin-right: 8px;\n  }\n\n  & .ant-upload-list-picture-container {\n    width: 300px;\n  }\n  & .ant-upload-list-item-info {\n    width: 300px;\n  }\n`;\n","export const linkSwitcher = (subparam?: string | null) => {\n  switch (subparam) {\n    case subparam?.includes(\"storage\"):\n      return false;\n    default:\n      return true;\n  }\n};\n\nexport const imageSwitcher = (subparam?: string | null) => {\n  switch (subparam) {\n    case subparam?.includes(\"storage\"):\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const fileSwitcher = (subparam?: string | null) => {\n  // return true\n\n  if (subparam?.includes(\"storage\")) return true;\n  else return false;\n};\n\nexport const contentSwitcher = (subparam?: string | null) => {\n  if (subparam?.includes(\"introduce\")) return false;\n  else return true;\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileUploader = (\n  type: string,\n  file: any,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>,\n  progress: number,\n  setProgress: Dispatch<SetStateAction<number>>,\n  createImage?: any,\n  boardId?: number\n) => {\n  const upload = storage.ref(`/${type}/${category}/${filename}`).put(file);\n  upload.on(\n    \"state_changed\",\n    (snapshot) => {},\n    (err) => console.log(err),\n    () => {\n      setProgress(1);\n      storage\n        .ref(`/${type}/${category}/${filename}`)\n        .getDownloadURL()\n        .then(async (url) => {\n          state(url);\n          if (createImage && boardId) {\n            await createImage({\n              variables: {\n                url,\n                fileName: filename,\n                boardId,\n              },\n            });\n          }\n          toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n          setProgress(0);\n        });\n    }\n  );\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileRemover = (\n  type: string,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>\n) => {\n  storage\n    .ref(`/${type}/${category}/${filename}`)\n    .delete()\n    .then(() => {\n      state(\"\");\n    })\n    .catch((err) => toast.error(err));\n};\n","import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport useInput from \"../../../hooks/useInput\";\nimport { Container } from \"./styles\";\nimport { Form, Input, Button, Checkbox, Upload } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_BOARD } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { useHistory, useLocation } from \"react-router\";\nimport {\n  contentSwitcher,\n  fileSwitcher,\n  imageSwitcher,\n  linkSwitcher,\n} from \"../../../utils/switcher\";\nimport { LoadingOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\nimport { storage } from \"../../../utils/firebase\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface fileProps {\n  url: string;\n  fileName: string;\n}\n\nconst layout = {\n  wrapperCol: { span: 16 },\n};\n\n//upload progressing needed\n\nconst UploadBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const { category, param, subparam } = queryObj;\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [content, onChangeContent, setContent] = useInput(\"\");\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [showLink, setShowLink] = useState<boolean>(false);\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [file, setFile] = useState<fileProps[]>([]);\n\n  const [isLinkNeeded, setIsLinkNeeded] = useState<boolean>(false);\n  const [isFileNeeded, setIsFileNeeded] = useState<boolean>(false);\n  const [isImageNeeded, setIsImageNeeded] = useState<boolean>(false);\n  const [isContentNeeded, setIsContentNeeded] = useState<boolean>(true);\n  const [progress, setProgress] = useState<number>(0);\n\n  useEffect(() => {\n    setIsLinkNeeded(linkSwitcher(subparam as string));\n    setIsImageNeeded(imageSwitcher(subparam as string));\n    setIsFileNeeded(fileSwitcher(subparam as string));\n    setIsContentNeeded(contentSwitcher(subparam as string));\n  }, [subparam]);\n\n  const [createBoard, { loading }] = useMutation(CREATE_BOARD, {\n    onCompleted: ({ createBoard }) => {\n      const { ok, err } = createBoard;\n      if (ok) {\n        setTitle(\"\");\n        setContent(\"\");\n        setLink(\"\");\n        setImgUrl(\"\");\n        toast.success(\"게시물을 생성 하였습니다\");\n        history.push({\n          pathname: `/admin/${param}/${subparam}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 생성 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleLinkAdd = useCallback(() => {\n    setShowLink(!showLink);\n    if (!showLink) {\n      setLink(\"\");\n    }\n  }, [showLink, setLink, setShowLink]);\n\n  const onFinish = useCallback(async () => {\n    if (file.length !== 0) {\n      await createBoard({\n        variables: {\n          title: title.trim() ? title : null,\n          content: content.trim() ? content : null,\n          link: link.trim() ? link : null,\n          category,\n          files: file.length !== 0 ? file : null,\n          images: imgUrl?.trim() ? [{ url: imgUrl, fileName: imgName }] : null,\n        },\n      });\n    } else {\n      await createBoard({\n        variables: {\n          title: title.trim() ? title : null,\n          content: content.trim() ? content : null,\n          link: link.trim() ? link : null,\n          category,\n        },\n      });\n    }\n  }, [title, content, link, createBoard, category, file, imgName, imgUrl]);\n\n  const handleImageUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const filename = file.name;\n      setImgName(file.name);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        filename,\n        setImgUrl,\n        progress,\n        setProgress\n      );\n    },\n    [category, progress]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then((url) => {\n              setFile((prev) => [...prev, { url: url, fileName: file.name }]);\n              toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [category, progress]\n  );\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  const handleFileRemover = useCallback(\n    (propFile: any) => {\n      storage\n        .ref(`/files/${category}/${propFile.name}`)\n        .delete()\n        .then(() => {\n          toast.success(\"업로드 된 파일/이미지가 삭제 되었습니다\");\n          setFile(\n            file.filter((elem: fileProps) => elem.fileName !== propFile.name)\n          );\n        })\n        .catch((err) => toast.error(err));\n    },\n    [category, file]\n  );\n\n  useEffect(() => {\n    if (progress < 0) {\n      setProgress(0);\n    }\n  }, [progress]);\n\n  return (\n    <Container>\n      <Form {...layout} name=\"upload-board\" onFinish={onFinish}>\n        <Form.Item name={[\"title\"]} label=\"제목\">\n          <Input type=\"text\" onChange={onChangeTitle} value={title} />\n        </Form.Item>\n        {isLinkNeeded && (\n          <>\n            <div className=\"link-checkbox\">\n              <Checkbox onChange={handleLinkAdd}>\n                {showLink ? \"링크제거\" : \"링크추가\"}\n              </Checkbox>\n            </div>\n            {showLink && (\n              <Form.Item name={[\"link\"]} label=\"링크\">\n                <Input type=\"text\" onChange={onChangeLink} value={link} />\n              </Form.Item>\n            )}\n          </>\n        )}\n        {isImageNeeded && (\n          <Upload\n            style={{ marginBottom: 20 }}\n            listType=\"picture\"\n            customRequest={({ file }) => handleImageUpload(file)}\n            progress={{ showInfo: true }}\n            onChange={({ file }) => {\n              if (imgUrl !== \"\") {\n                file.status = \"done\";\n              } else {\n                file.status = \"removed\";\n              }\n            }}\n            className=\"upload-list-inline\"\n            maxCount={1}\n            onRemove={() => handleImageRemover()}\n          >\n            <Button icon={<UploadOutlined />}>Upload</Button>\n          </Upload>\n        )}\n        {isFileNeeded && (\n          <Upload\n            multiple={true}\n            customRequest={({ file }) => handleFileUpload(file)}\n            maxCount={4}\n            onChange={({ file: callbackFile }) => {\n              if (file.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            onRemove={(file) => handleFileRemover(file)}\n          >\n            <Button style={{ marginBottom: 20 }} icon={<UploadOutlined />}>\n              Upload\n            </Button>\n          </Upload>\n        )}\n        {isContentNeeded && (\n          <Form.Item name={[\"content\"]} label=\"내용\" style={{ marginTop: 20 }}>\n            <Input.TextArea\n              onChange={onChangeContent}\n              rows={10}\n              value={content}\n            />\n          </Form.Item>\n        )}\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={progress !== 0 ? true : false}\n          >\n            {!loading ? (\n              progress <= 0 ? (\n                \"올리기\"\n              ) : (\n                <>\n                  <LoadingOutlined /> 이미지 / 파일 업로드 중입니다...\n                </>\n              )\n            ) : (\n              \"Uploading...\"\n            )}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n};\n\nexport default UploadBoardPage;\n","import styled from \"@emotion/styled\";\nimport { Button as Btn } from \"antd\";\n\nexport const Container = styled.div`\n  & .button-group {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &.attach-group {\n    display: flex;\n    flex-direction: column;\n  }\n\n  img {\n    object-fit: contain;\n    width: 400px;\n    height: 400px;\n  }\n`;\n\nexport const Button = styled(Btn)`\n  margin: 15px 0;\n`;\n","import { Descriptions, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { Container, Button } from \"./styles\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  getBoardByCategory,\n  getBoardByCategoryVariables,\n  getBoardByCategory_getBoardByCategory_data_files,\n  getBoardByCategory_getBoardByCategory_data_images,\n} from \"../../../typings/api\";\nimport { GET_BOARD_BY_CATEGORY } from \"../../../queries/adminQuery\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\n\ninterface locationProps {\n  search: string;\n  refresh?: boolean;\n}\n\nconst ImageBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { param, subparam } = useParams<ParamProps>();\n  let sub = subparam;\n  const { state } = useLocation<locationProps>();\n  const [file, setFile] = useState<\n    (getBoardByCategory_getBoardByCategory_data_files | null)[] | undefined\n  >();\n  const [image, setImage] =\n    useState<\n      (getBoardByCategory_getBoardByCategory_data_images | null | undefined)[]\n    >();\n\n  const { data, loading, refetch } = useQuery<\n    getBoardByCategory,\n    getBoardByCategoryVariables\n  >(GET_BOARD_BY_CATEGORY, {\n    variables: {\n      category: sub,\n    },\n  });\n\n  useEffect(() => {\n    const initData = () => {\n      if (\n        data?.getBoardByCategory.ok &&\n        data.getBoardByCategory.data?.length !== 0\n      ) {\n        if (\n          data.getBoardByCategory.data &&\n          data.getBoardByCategory.data.length !== 0\n        ) {\n          if (data.getBoardByCategory.data[0].files)\n            setFile(data.getBoardByCategory.data[0].files);\n          if (data.getBoardByCategory.data[0].images)\n            setImage(data.getBoardByCategory.data[0].images);\n        }\n      } else {\n        setFile([]);\n        setImage([]);\n      }\n    };\n    initData();\n    return () => initData();\n  }, [data]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) refetch();\n    };\n    if (state && state.refresh) {\n      excuteRefetch();\n    }\n    return () => excuteRefetch();\n  }, [refetch, state]);\n\n  if (loading) {\n    return <>loading</>;\n  }\n\n  return (\n    <Container>\n      <div className=\"button-group\">\n        <Button type=\"ghost\" onClick={() => history.goBack()}>\n          뒤로\n        </Button>\n        {data?.getBoardByCategory.data?.length !== 0 &&\n        data?.getBoardByCategory.ok ? (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              history.push(\n                `/admin/${param}/edit-image-${param}?category=${subparam}&id=${\n                  data.getBoardByCategory.data &&\n                  data.getBoardByCategory.data[0].id\n                }`\n              )\n            }\n          >\n            수정하기\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              history.push(\n                `/admin/${param}/create-image-${param}?category=${subparam}&param=${param}&subparam=${subparam}`\n              )\n            }\n          >\n            글쓰기\n          </Button>\n        )}\n      </div>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        <Descriptions.Item label=\"링크\" span={4} labelStyle={{ width: 100 }}>\n          {data?.getBoardByCategory.data?.length !== 0 &&\n          data?.getBoardByCategory.ok ? (\n            <a\n              href={`${\n                data.getBoardByCategory.data &&\n                data.getBoardByCategory.data[0].link\n              }`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {data.getBoardByCategory.data &&\n                data.getBoardByCategory.data[0].link}\n            </a>\n          ) : (\n            <Typography.Text>링크가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item\n          label=\"첨부파일\"\n          span={4}\n          labelStyle={{ width: 100 }}\n        >\n          {file && file.length ? (\n            file.map((elem, idx) => {\n              return (\n                <span key={elem?.fileName} className={\"attach-group\"}>\n                  <a\n                    href={`${elem?.url}`}\n                    download\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {elem?.fileName}\n                  </a>\n                </span>\n              );\n            })\n          ) : (\n            <Typography.Text>첨부파일이 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"이미지\" span={4} labelStyle={{ width: 100 }}>\n          {image && image[0] ? (\n            <img src={image[0].url} alt={image[0].fileName} />\n          ) : (\n            <Typography.Text>업로드 된 이미지가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n      </Descriptions>\n    </Container>\n  );\n};\n\nexport default ImageBoardPage;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Container } from \"./styles\";\nimport { linkSwitcher } from \"../../../utils/switcher\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_BOARD } from \"../../../queries/adminQuery\";\nimport useInput from \"../../../hooks/useInput\";\nimport { toast } from \"react-toastify\";\nimport { Button, Checkbox, Form, Input, Upload } from \"antd\";\nimport { LoadingOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\nimport { storage } from \"../../../utils/firebase\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface fileProps {\n  url: string;\n  fileName: string;\n}\n\nconst layout = {\n  wrapperCol: { span: 16 },\n};\n\nconst UploadImageBoardPage = () => {\n  const history = useHistory();\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const { category, param, subparam } = queryObj;\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [showLink, setShowLink] = useState<boolean>(false);\n  const [file, setFile] = useState<fileProps[]>([]);\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [isLinkNeeded, setIsLinkNeeded] = useState<boolean>(false);\n  const [progress, setProgress] = useState<number>(0);\n\n  useEffect(() => {\n    setIsLinkNeeded(linkSwitcher(subparam as string));\n  }, [subparam]);\n\n  const [createBoard, { loading }] = useMutation(CREATE_BOARD, {\n    onCompleted: ({ createBoard }) => {\n      const { ok, err } = createBoard;\n      if (ok) {\n        setLink(\"\");\n        toast.success(\"게시물을 생성 하였습니다\");\n        history.push({\n          pathname: `/admin/${param}/${subparam}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 생성 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleLinkAdd = useCallback(() => {\n    setShowLink(!showLink);\n    if (!showLink) setLink(\"\");\n  }, [showLink, setLink, setShowLink]);\n\n  const onFinish = useCallback(async () => {\n    await createBoard({\n      variables: {\n        link: link.trim()\n          ? link.includes(\"http\")\n            ? link\n            : `http://${link}`\n          : null,\n        category,\n        files: file.length !== 0 ? file : null,\n        images: imgUrl?.trim() ? [{ url: imgUrl, fileName: imgName }] : null,\n      },\n    });\n  }, [createBoard, category, file, imgName, imgUrl, link]);\n\n  const handleImageUpload = useCallback(\n    (file: any) => {\n      const filename = file.name;\n      setImgName(file.name);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        filename,\n        setImgUrl,\n        progress,\n        setProgress\n      );\n      setProgress(0);\n    },\n    [category, progress]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then((url) => {\n              setFile((prev) => [...prev, { url: url, fileName: file.name }]);\n              toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n              setProgress(0);\n            });\n        }\n      );\n    },\n    [category, progress]\n  );\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n      setProgress(0);\n    }\n  }, [category, imgName]);\n\n  const handleFileRemover = useCallback(\n    (propFile: any) => {\n      storage\n        .ref(`/files/${category}/${propFile.name}`)\n        .delete()\n        .then(() => {\n          toast.success(\"업로드 된 파일/이미지가 삭제 되었습니다\");\n          setFile(\n            file.filter((elem: fileProps) => elem.fileName !== propFile.name)\n          );\n        })\n        .catch((err) => toast.error(err));\n    },\n    [category, file]\n  );\n\n  return (\n    <Container>\n      <Form {...layout} name=\"upload-board\" onFinish={onFinish}>\n        {isLinkNeeded && (\n          <>\n            <div className=\"link-checkbox\">\n              <Checkbox onChange={handleLinkAdd}>\n                {showLink ? \"링크제거\" : \"링크추가\"}\n              </Checkbox>\n            </div>\n            {showLink && (\n              <Form.Item name={[\"link\"]} label=\"링크\">\n                <Input type=\"text\" onChange={onChangeLink} value={link} />\n              </Form.Item>\n            )}\n          </>\n        )}\n        <Form.Item name={[\"file\"]} label=\"파일\">\n          <Upload\n            style={{ marginBottom: 20 }}\n            multiple={true}\n            customRequest={({ file }) => handleFileUpload(file)}\n            maxCount={4}\n            onChange={({ file: callbackFile }) => {\n              if (file.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            onRemove={(file) => handleFileRemover(file)}\n          >\n            <Button icon={<UploadOutlined />}>Upload</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item name={[\"image\"]} label=\"이미지\">\n          <Upload\n            style={{ marginBottom: 20 }}\n            listType=\"picture\"\n            customRequest={({ file }) => handleImageUpload(file)}\n            progress={{ showInfo: true }}\n            onChange={({ file: callbackFile }) => {\n              if (file.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            maxCount={1}\n            onRemove={() => handleImageRemover()}\n          >\n            <Button icon={<UploadOutlined />}>Upload</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button\n            type={\"primary\"}\n            htmlType=\"submit\"\n            disabled={progress !== 0 ? true : false}\n          >\n            {!loading ? (\n              progress <= 0 ? (\n                \"올리기\"\n              ) : (\n                <>\n                  <LoadingOutlined /> 이미지 / 파일 업로드 중입니다...\n                </>\n              )\n            ) : (\n              \"Uploading...\"\n            )}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n};\n\nexport default UploadImageBoardPage;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  & .attach-group {\n    display: flex;\n    margin: 5px 0;\n  }\n\n  & .attach-button {\n    margin-left: 15px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      transition: linear 0.2s;\n    }\n  }\n  & .button-group {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  img {\n    object-fit: contain;\n    width: 300px;\n    height: 400px;\n  }\n`;\n","import { Descriptions, Input, Typography, Upload } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { Container } from \"./styles\";\nimport {\n  getBoardById,\n  getBoardById_getBoardById_data,\n  getBoardById_getBoardById_data_files,\n  getBoardById_getBoardById_data_images,\n} from \"../../../typings/api\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { GET_BOARD } from \"../../../queries/sharedQuery\";\nimport useInput from \"../../../hooks/useInput\";\nimport { Button } from \"../EditBoardPage/styles\";\nimport {\n  UploadOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { storage } from \"../../../utils/firebase\";\nimport {\n  CREATE_FILE,\n  CREATE_IMAGE,\n  DELETE_FILE,\n  DELETE_IMAGE,\n  EDIT_BOARD,\n} from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n}\n\nconst EditImageBoardPage: React.VFC = () => {\n  const history = useHistory();\n  const { param } = useParams<paramProps>();\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const { category, id } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [file, setFile] =\n    useState<(getBoardById_getBoardById_data_files | null)[]>();\n  const [tmpFiles, setTmpFiles] = useState<{ url: string; fileName: string }[]>(\n    []\n  );\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [image, setImage] =\n    useState<getBoardById_getBoardById_data_images | null>();\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [progress, setProgress] = useState<number>(0);\n\n  const [getBoardById, { loading, data, refetch }] =\n    useLazyQuery<getBoardById>(GET_BOARD);\n  const [createImage] = useMutation(CREATE_IMAGE, {\n    onCompleted: ({ createImage }) => {\n      const { ok } = createImage;\n      if (ok) {\n        setProgress(0);\n        if (refetch) refetch();\n      }\n    },\n  });\n  const [deleteImage] = useMutation(DELETE_IMAGE, {\n    onCompleted: ({ deleteImage }) => {\n      const { ok, err } = deleteImage;\n      if (ok) {\n        if (refetch) refetch();\n        toast.error(\"이미지가 삭제 되었습니다\");\n      } else {\n        console.log(err);\n        toast.error(err);\n      }\n    },\n  });\n  const [createFile] = useMutation(CREATE_FILE, {\n    onCompleted: ({ createFile }) => {\n      const { ok } = createFile;\n      if (ok) {\n        setProgress(0);\n        if (refetch) refetch();\n      }\n    },\n  });\n  const [deleteFile] = useMutation(DELETE_FILE, {\n    onCompleted: ({ deleteFile }) => {\n      const { ok, err } = deleteFile;\n      if (ok) {\n        toast.success(\"파일이 삭제 되었습니다\");\n        if (refetch) refetch();\n      } else {\n        console.log(err);\n        toast.error(err);\n      }\n    },\n  });\n\n  const [editBoard] = useMutation(EDIT_BOARD, {\n    onCompleted: ({ editBoard }) => {\n      const { ok, err } = editBoard;\n      if (ok) {\n        toast.success(\"게시물이 수정 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  const handleImageUpload = useCallback(\n    async (file: any) => {\n      handleImageRemover();\n      setProgress(progress + 1);\n      const filename = file.name;\n      setImgName(file.name);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        filename,\n        setImgUrl,\n        progress,\n        setProgress,\n        createImage,\n        parseInt(id as string, 10)\n      );\n    },\n    [category, progress, handleImageRemover, createImage, id]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then(async (url) => {\n              setTmpFiles((prev) => [\n                ...prev,\n                { url: url, fileName: file.name },\n              ]);\n              await createFile({\n                variables: {\n                  url,\n                  fileName: file.name,\n                  boardId: parseInt(id as string, 10),\n                },\n                onCompleted: ({ createFile }) => {\n                  const { ok, err } = createFile;\n                  if (ok) {\n                    toast.success(\"파일이 업로드 되었습니다\");\n                    if (refetch) refetch();\n                  } else {\n                    toast.error(\"파일 업로드에 실패 하였습니다\");\n                    console.log(err);\n                  }\n                },\n              });\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [createFile, id, category, progress, refetch]\n  );\n\n  const handleDeleteFile = useCallback(\n    async (id?: number, name?: string) => {\n      storage.ref(`/files/${category}/${name}`).delete();\n      await deleteFile({\n        variables: {\n          id,\n        },\n      });\n    },\n    [deleteFile, category]\n  );\n\n  useEffect(() => {\n    if (id) {\n      getBoardById({ variables: { id: parseInt(id as string, 10) } });\n    }\n  }, [id, getBoardById]);\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n      setLink(data.getBoardById.data.link || \"\");\n    }\n    if (data?.getBoardById.data?.files) setFile(data.getBoardById.data.files);\n    if (data?.getBoardById.data?.images) {\n      setImage(data.getBoardById.data.images[0]);\n      setImgName(data.getBoardById.data.images[0]?.fileName);\n    }\n  }, [data, setBoard, setLink]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Container>\n      <div className=\"button-group\">\n        <Button type=\"ghost\" onClick={() => history.goBack()}>\n          뒤로\n        </Button>\n        <Button\n          type=\"primary\"\n          disabled={progress === 0 ? false : true}\n          onClick={() =>\n            editBoard({\n              variables: {\n                id: parseInt(id as string, 10),\n                link: link.includes(\"http\") ? link : `http://${link}`,\n              },\n            })\n          }\n        >\n          {progress === 0 ? (\n            \"완료\"\n          ) : (\n            <>\n              <LoadingOutlined /> 파일 / 이미지 업로딩 중\n            </>\n          )}\n        </Button>\n      </div>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        <Descriptions.Item label=\"링크\" span={4} labelStyle={{ width: 100 }}>\n          <Input\n            placeholder={board?.link || undefined}\n            value={link}\n            onChange={onChangeLink}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item\n          label=\"첨부파일\"\n          span={4}\n          labelStyle={{ width: 100 }}\n        >\n          {file && file.length !== 0 ? (\n            <>\n              {file.map((elem, idx) => {\n                return (\n                  <div key={idx} className=\"attach-group\">\n                    <a\n                      href={elem?.url}\n                      download\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      {elem?.fileName}\n                    </a>\n                    <button\n                      className=\"attach-button\"\n                      onClick={() => handleDeleteFile(elem?.id, elem?.fileName)}\n                    >\n                      <DeleteOutlined />\n                    </button>\n                  </div>\n                );\n              })}\n            </>\n          ) : tmpFiles.length === 0 ? (\n            <div>첨부파일 없음</div>\n          ) : (\n            <></>\n          )}\n          <Upload\n            multiple={true}\n            maxCount={4}\n            className=\"upload-list-inline\"\n            customRequest={({ file }) => handleFileUpload(file)}\n            onChange={({ file: callbackFile }) => {\n              if (tmpFiles.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n          >\n            <Button icon={<UploadOutlined />}>파일 업로드</Button>\n          </Upload>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"이미지\" span={4} labelStyle={{ width: 100 }}>\n          {image && (\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                fileRemover(\n                  \"images\",\n                  category as string,\n                  image.fileName,\n                  setImgUrl\n                );\n                deleteImage({ variables: { id: image.id } });\n              }}\n            >\n              이미지 삭제\n            </Button>\n          )}\n          <Upload\n            listType=\"picture\"\n            customRequest={({ file }) => {\n              if (image) {\n                deleteImage({ variables: { id: image && image.id } });\n              }\n              handleImageUpload(file);\n            }}\n            progress={{ showInfo: true }}\n            onChange={({ file: callbackFile }) => {\n              if (imgUrl) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n            maxCount={1}\n          >\n            <Button icon={<UploadOutlined />}>이미지 업로드</Button>\n          </Upload>\n          {image ? (\n            <img src={image.url} alt={image.fileName} />\n          ) : (\n            <Typography.Text>업로드 된 이미지가 없습니다</Typography.Text>\n          )}\n        </Descriptions.Item>\n      </Descriptions>\n    </Container>\n  );\n};\n\nexport default EditImageBoardPage;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & .list-description {\n    margin: 8px 0;\n    width: 800px;\n  }\n\n  & .list-title {\n    display: inline-block;\n    min-width: 100px;\n  }\n\n  & .list-href {\n    margin-left: 30px;\n  }\n\n  & .button-group {\n    display: inline-block;\n    margin-left: 15px;\n  }\n\n  & .button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover {\n      color: red;\n      transition: 0.2s linear;\n    }\n  }\n\n  & .edit-input {\n    display: block;\n    width: 400px;\n    margin: 8px 0;\n  }\n\n  & .delete-button {\n    margin-left: 5px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & .input-row {\n    margin: 5px 0;\n    max-width: 800px;\n  }\n`;\n","import { Container, List, Row } from \"./styles\";\nimport { Input, Button, Divider } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_LINK } from \"../../../queries/sharedQuery\";\nimport { getLinks } from \"../../../typings/api\";\nimport {\n  CREATE_LINK,\n  DELETE_LINK,\n  EDIT_LINK,\n} from \"../../../queries/adminQuery\";\nimport {\n  CheckOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport React, { useCallback, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst LinkManager: React.VFC = () => {\n  const [url, onChangeUrl, setUrl] = useInput(\"\");\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [onAdd, setOnAdd] = useState<boolean>(false);\n  const [onEdit, setOnEdit] = useState<number>(0);\n\n  const { data, loading, refetch } = useQuery<getLinks>(GET_LINK);\n\n  const [createLink] = useMutation(CREATE_LINK);\n  const [editLink] = useMutation(EDIT_LINK);\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  const handleAdd = useCallback(async () => {\n    if (!url.trim() || !url) {\n      toast.error(\"링크를 입력해 주세요\");\n    } else if (!title.trim() || !title) {\n      toast.error(\"사이트 이름을 입력해 주세요\");\n    }\n    await createLink({\n      variables: {\n        url: url.includes(\"http\") ? url : `http://${url}`,\n        title,\n      },\n    }).then(({ data }) => {\n      if (data?.createLink.ok) {\n        setUrl(\"\");\n        setTitle(\"\");\n        toast.success(\"링크가 생성되었습니다\");\n      }\n    });\n    refetch();\n    setOnAdd(false);\n  }, [url, title, createLink, refetch, setUrl, setTitle]);\n\n  const handleDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: {\n          id,\n        },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되었습니다\");\n        }\n      });\n      refetch();\n    },\n    [refetch, deleteLink]\n  );\n\n  const handleEdit = useCallback(\n    async (id: number) => {\n      await editLink({\n        variables: {\n          id,\n          title,\n          url: url.includes(\"http\") ? url : `http://${url}`,\n        },\n      }).then(({ data }) => {\n        if (data?.editLink.ok) {\n          toast.success(\"링크가 수정 되었습니다\");\n        }\n      });\n      setOnEdit(0);\n      setTitle(\"\");\n      setUrl(\"\");\n      refetch();\n    },\n    [title, url, editLink, refetch, setOnEdit, setTitle, setUrl]\n  );\n\n  if (loading) {\n    return <>loading...</>;\n  }\n\n  return (\n    <Container>\n      <List style={{ backgroundColor: \"white\" }}>\n        {data?.getLinks.data?.map((elem, idx) => {\n          return (\n            <div key={idx}>\n              <Divider style={{ marginTop: 5 }} />\n              <div className=\"list-description\">\n                {onEdit === elem?.id ? (\n                  <Input\n                    placeholder={\"사이트 명\"}\n                    className=\"edit-input\"\n                    value={title}\n                    onChange={onChangeTitle}\n                  />\n                ) : (\n                  <span className=\"list-title\">{elem?.title}</span>\n                )}\n                {onEdit === elem?.id ? (\n                  <Input\n                    placeholder={\"링크 URL\"}\n                    className=\"edit-input\"\n                    value={url}\n                    onChange={onChangeUrl}\n                  />\n                ) : (\n                  <a\n                    href={elem?.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"list-href\"\n                  >\n                    {elem?.url}\n                  </a>\n                )}\n                <div className=\"button-group\">\n                  <button\n                    className=\"button edit-button\"\n                    onClick={() => {\n                      if (onEdit === 0) {\n                        setUrl(elem!.url);\n                        setTitle(elem!.title);\n                        setOnEdit(elem!.id);\n                      } else {\n                        handleEdit(elem!.id);\n                      }\n                    }}\n                  >\n                    {onEdit === 0 ? <EditOutlined /> : <CheckOutlined />}\n                  </button>\n                  <button\n                    className=\"button delete-button\"\n                    onClick={() => handleDelete(elem!.id)}\n                  >\n                    <DeleteOutlined />\n                  </button>\n                </div>\n              </div>\n              <Divider style={{ marginBottom: 5 }} />\n            </div>\n          );\n        })}\n      </List>\n      {onAdd && (\n        <Row>\n          <Input\n            placeholder={\"사이트 명\"}\n            className=\"input-row\"\n            value={title}\n            onChange={onChangeTitle}\n          />\n          <Input\n            placeholder={\"링크 URL\"}\n            className=\"input-row\"\n            value={url}\n            onChange={onChangeUrl}\n          />\n        </Row>\n      )}\n      <Row style={{ marginTop: 20 }}>\n        {!onAdd ? (\n          <Button type=\"dashed\" onClick={() => setOnAdd(!onAdd)}>\n            <PlusOutlined style={{ fontSize: 14 }} /> Add Link\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              url.trim() || title.trim() ? handleAdd() : setOnAdd(false)\n            }\n          >\n            생성\n          </Button>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default LinkManager;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport BoardDetail from \"../pages/Admin/BoardDetail\";\nimport StoragePage from \"../pages/Admin/StoragePage\";\nimport Dashboard from \"../pages/Admin/Dashboard\";\nimport EditBoardPage from \"../pages/Admin/EditBoardPage\";\nimport UploadBoardPage from \"../pages/Admin/UploadBoardPage\";\nimport ImageBoardPage from \"../pages/Admin/ImageBoardPage\";\nimport UploadImageBoardPage from \"../pages/Admin/UploadImageBoardPage\";\nimport EditImageBoardPage from \"../pages/Admin/EditImageBoardPage\";\nimport LinkManager from \"../pages/Admin/LinkManager\";\n\ninterface IProps {\n  param: string;\n  subparam: string;\n}\n\nconst AdminRouteHandler: React.VFC = () => {\n  const { param, subparam } = useParams<IProps>();\n  const routehandler = (param: string, subparam: string) => {\n    switch (param) {\n      case \"dashboard\":\n        return <Dashboard />;\n      case \"intro\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n      case \"basic\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"major\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"integration\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"value\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"cooperation\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"achievement\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <ImageBoardPage />;\n\n      case \"community\":\n        if (subparam === `create-image-${param}`)\n          return <UploadImageBoardPage />;\n        else if (subparam === `edit-image-${param}`)\n          return <EditImageBoardPage />;\n        else if (subparam === `create-${param}`) return <UploadBoardPage />;\n        else if (subparam === `detail-${param}`) return <BoardDetail />;\n        else if (subparam === `edit-${param}`) return <EditBoardPage />;\n        else if (subparam.includes(\"storage\")) return <StoragePage />;\n        else return <StoragePage />;\n      case \"sitelink\":\n        return <LinkManager />;\n      default:\n        return;\n    }\n  };\n\n  return <>{routehandler(param, subparam)}</>;\n};\nexport default AdminRouteHandler;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n\nexport const LoginContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  & .login-form {\n    height: 700px;\n    width: 800px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  & .login-input {\n    width: 300px;\n  }\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Layout, Menu, Breadcrumb, Form, Input, Button } from \"antd\";\nimport { AdminNavData, NavProps, ObjProps } from \"../../assets/AdminNavData\";\nimport AdminRouteHandler from \"../../utils/AdminRouteHandler\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { adminLoginVar } from \"../../utils/apollo\";\nimport useInput from \"../../hooks/useInput\";\nimport { adminLogin, adminLogOut } from \"../../utils/loginResolver\";\nimport { toast } from \"react-toastify\";\nimport { UserOutlined, LockOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport { LoginContainer } from \"./styles\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\n\nconst Admin: React.FC = () => {\n  const loginStatus = useReactiveVar(adminLoginVar);\n  const history = useHistory();\n  const [adminId, adminIdOnChange, setAdminId] = useInput(\"\");\n  const [adminPW, adminPWOnChange, setAdminPW] = useInput(\"\");\n  const [pickMenu, setPickMenu] = useState<string>(\"대시보드\");\n  const [parentMenu, setParentMenu] = useState<string>(\"대시보드\");\n  const [params, setParams] = useState<ParamProps>({\n    param: \"dashboard\",\n    subparam: \"dashboard\",\n  });\n  const [showBreadCrumb, setShowBreadCrumb] = useState<boolean>(false);\n  const { SubMenu } = Menu;\n  const { Header, Content, Sider } = Layout;\n\n  const onFinish = useCallback(() => {\n    if (adminId === \"adminswe\" && adminPW === \"adminswe\") {\n      setAdminId(\"\");\n      setAdminPW(\"\");\n      adminLogin();\n      toast.success(\"로그인 되었습니다\");\n    } else {\n      toast.error(\"아이디 & 암호가 틀립니다\");\n    }\n  }, [adminId, adminPW, setAdminId, setAdminPW]);\n\n  const handlePickMenu = useCallback(\n    (koMenu, koParentMenu, menu, parentMenu) => {\n      setShowBreadCrumb(true);\n      setParentMenu(koParentMenu);\n      setPickMenu(koMenu);\n      setParams({\n        param: menu,\n        subparam: parentMenu,\n      });\n    },\n    []\n  );\n\n  const handleClickDashboard = useCallback(() => {\n    setShowBreadCrumb(false);\n    setParentMenu(\"대시보드\");\n    setPickMenu(\"대시보드\");\n    setParams({\n      param: \"dashboard\",\n      subparam: \"dashboard\",\n    });\n  }, []);\n\n  useEffect(() => {\n    const time = localStorage.getItem(\"admin\");\n    if (time) {\n      if (parseInt(time, 10) / 1000 < Date.now() / 1000) {\n        adminLogOut();\n      }\n    }\n  }, []);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {loginStatus ? (\n        <>\n          <Header className=\"header\">\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <Menu.Item\n                key={1}\n                onClick={() => {\n                  adminLogOut();\n                  history.push(\"/main\");\n                }}\n              >\n                메인으로 가기\n              </Menu.Item>\n              <Menu.Item key={2} onClick={() => adminLogOut()}>\n                <LogoutOutlined /> Logout\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Layout>\n            <Sider width={200} className=\"site-layout-background\">\n              <Menu\n                mode=\"inline\"\n                defaultSelectedKeys={[\"dashboard\"]}\n                defaultOpenKeys={[\"dashboard\"]}\n                style={{ height: \"100%\", borderRight: 0 }}\n              >\n                <Menu.Item key={\"dashboard\"} title=\"대시보드\">\n                  <Link\n                    to={{\n                      pathname: `/admin/dashboard/dashboard`,\n                      state: { refresh: true },\n                    }}\n                    onClick={handleClickDashboard}\n                  >\n                    <span>대시보드</span>\n                  </Link>\n                </Menu.Item>\n                {AdminNavData.map((data: NavProps) => {\n                  return (\n                    <SubMenu key={data.ko_title} title={data.ko_title}>\n                      {data.subMenu.map((elem: ObjProps) => {\n                        return (\n                          <Menu.Item key={elem.key}>\n                            <Link\n                              to={`/admin/${data.title}/${elem.key}`}\n                              onClick={() =>\n                                handlePickMenu(\n                                  elem.ko_title,\n                                  data.ko_title,\n                                  data.title,\n                                  elem.key\n                                )\n                              }\n                            >\n                              <span>{elem.ko_title}</span>\n                            </Link>\n                          </Menu.Item>\n                        );\n                      })}\n                    </SubMenu>\n                  );\n                })}\n              </Menu>\n            </Sider>\n            <Layout style={{ padding: \"0 24px 24px\" }}>\n              {showBreadCrumb && (\n                <Breadcrumb style={{ margin: \"16px 0\" }}>\n                  <Breadcrumb.Item>{parentMenu}</Breadcrumb.Item>\n                  <Breadcrumb.Item>{pickMenu}</Breadcrumb.Item>\n                </Breadcrumb>\n              )}\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  padding: 24,\n                  margin: 0,\n                  minHeight: 280,\n                }}\n              >\n                <AdminRouteHandler />\n              </Content>\n            </Layout>\n          </Layout>\n        </>\n      ) : (\n        <LoginContainer>\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Please input your Username!\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n                value={adminId}\n                onChange={adminIdOnChange}\n                className=\"login-input\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                value={adminPW}\n                onChange={adminPWOnChange}\n                className={\"login-input\"}\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </LoginContainer>\n      )}\n    </Layout>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}