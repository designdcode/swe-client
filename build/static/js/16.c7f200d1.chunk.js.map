{"version":3,"sources":["../../../../src/react/parser/index.ts","queries/adminQuery.ts","../../../../src/react/data/OperationData.ts","utils/convertDate.ts","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/antd/es/_util/hooks/useForceUpdate.js","../../../../src/react/data/MutationData.ts","../../../../src/react/hooks/useMutation.ts","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js","pages/Admin/StoragePage/styles.tsx","pages/Admin/StoragePage/index.tsx","../../../../src/react/hooks/useLazyQuery.ts"],"names":["DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","variables","cached","get","fragments","definitions","filter","x","kind","queries","operation","mutations","subscriptions","length","definition","CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","requiredOperationName","usedOperationName","getDate","time","itemDate","Date","Math","floor","parseInt","getFullYear","getMonth","CloseOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","displayName","useForceUpdate","_React$useReducer","_slicedToArray","result","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","catch","error","onError","onMutationError","data","undefined","errors","mutation","mostRecentMutationId","execute","afterExecute","bind","loading","ignoreResults","updateResult","called","onCompleted","graphQLErrors","isMostRecentMutation","previousResult","OperationData","useMutation","updatedOptions","mutationDataRef","mutationData","current","Item","_ref","className","direction","index","marginDirection","children","split","wrap","_React$useContext","SpaceContext","horizontalSize","verticalSize","latestIndex","style","supportFlexGap","marginBottom","_extends","_defineProperty","paddingBottom","concat","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","spaceSize","small","middle","large","Space","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","align","_props$direction","customizePrefixCls","prefixCls","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","map","item","getNumberSize","_React$useMemo2","childNodes","toArray","keepEmpty","mergedAlign","cn","classNames","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider","value","Container","styled","div","StoragePage","query","useParams","param","subparam","state","useLocation","useState","boards","setBoards","useBaseQuery","getBoard","refetch","deleteBoard","ok","err","toast","success","useEffect","category","excuteRefetch","refresh","getBoardByCategory","res","dataSource","elem","obj","id","title","createdAt","push","to","marginTop","rowKey","dataIndex","width","ellipsis","render","text","record","danger","onClick"],"mappings":"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","file":"static/js/16.c7f200d1.chunk.js","sourcesContent":["import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to saftey check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import { invariant } from '../../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\n\nimport { ApolloClient } from '../../core';\nimport { DocumentType, parser, operationName } from '../parser';\nimport { CommonOptions } from '../types/types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: any = {};\n  public client: ApolloClient<object>;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: any) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","export const getDate = (time: string) => {\n  const itemDate = new Date(Math.floor(parseInt(time, 10) / 1000) * 1000);\n  const date =\n    itemDate.getFullYear() +\n    \"-\" +\n    (itemDate.getMonth() + 1 >= 10\n      ? itemDate.getMonth() + 1\n      : `0${itemDate.getMonth() + 1}`) +\n    \"-\" +\n    (itemDate.getDate() >= 10 ? itemDate.getDate() : `0${itemDate.getDate()}`);\n  return date;\n};\n\nexport const convertMonth = (name: string): string => {\n  switch (name) {\n    case \"Jan\":\n      return \"1\";\n    case \"Feb\":\n      return \"2\";\n    case \"Mar\":\n      return \"3\";\n    case \"Apr\":\n      return \"4\";\n    case \"May\":\n      return \"5\";\n    case \"Jun\":\n      return \"6\";\n    case \"Jul\":\n      return \"7\";\n    case \"Aug\":\n      return \"8\";\n    case \"Sep\":\n      return \"9\";\n    case \"Oct\":\n      return \"10\";\n    case \"Nov\":\n      return \"11\";\n    case \"Dec\":\n      return \"12\";\n    default:\n      return name;\n  }\n};\n\nexport const convertDay = (name: string): string => {\n  switch (name) {\n    case \"Sun\":\n      return \"일\";\n    case \"Mon\":\n      return \"월\";\n    case \"Tue\":\n      return \"화\";\n    case \"Wed\":\n      return \"수\";\n    case \"Thu\":\n      return \"목\";\n    case \"Fri\":\n      return \"금\";\n    case \"Sat\":\n      return \"토\";\n    case \"0\":\n      return \"일\";\n    case \"1\":\n      return \"월\";\n    case \"2\":\n      return \"화\";\n    case \"3\":\n      return \"수\";\n    case \"4\":\n      return \"목\";\n    case \"5\":\n      return \"금\";\n    case \"6\":\n      return \"토\";\n    default:\n      return name;\n  }\n};\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useForceUpdate() {\n  var _React$useReducer = React.useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      forceUpdate = _React$useReducer2[1];\n\n  return forceUpdate;\n}","import { equal } from '@wry/equality';\n\nimport { DocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport {\n  MutationDataOptions,\n  MutationTuple,\n  MutationFunctionOptions,\n  MutationResult,\n} from '../types/types';\nimport { OperationData } from './OperationData';\nimport { MutationOptions, mergeOptions, ApolloCache, OperationVariables, DefaultContext } from '../../core';\nimport { FetchResult } from '../../link/core';\n\ntype MutationResultWithoutClient<TData = any> = Omit<MutationResult<TData>, 'client'>;\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n> extends OperationData<MutationDataOptions<TData, TVariables, TContext, TCache>> {\n  private mostRecentMutationId: number;\n  private result: MutationResultWithoutClient<TData>;\n  private previousResult?: MutationResultWithoutClient<TData>;\n  private setResult: (result: MutationResultWithoutClient<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationDataOptions<TData, TVariables, TContext, TCache>;\n    context: any;\n    result: MutationResultWithoutClient<TData>;\n    setResult: (result: MutationResultWithoutClient<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResultWithoutClient<TData>): MutationTuple<TData, TVariables, TContext, TCache> {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    return [\n      this.runMutation,\n      { ...result, client: this.refreshClient().client }\n    ] as MutationTuple<TData, TVariables, TContext, TCache>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {} as MutationFunctionOptions<TData, TVariables, TContext, TCache>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: FetchResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        const { onError } = this.getOptions();\n        this.onMutationError(error, mutationId);\n        if (onError) {\n          onError(error);\n          return {\n            data: undefined,\n            errors: error,\n          };\n        } else {\n          throw error;\n        }\n      });\n  };\n\n  private mutate(\n    options: MutationFunctionOptions<TData, TVariables, TContext, TCache>\n  ) {\n    return this.refreshClient().client.mutate(\n      mergeOptions(\n        this.getOptions(),\n        options as MutationOptions<TData, TVariables, TContext>,\n      ),\n    );\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: FetchResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResultWithoutClient<TData>): MutationResultWithoutClient<TData> | undefined {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !equal(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n      return result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { MutationHookOptions, MutationTuple } from '../types/types';\nimport { MutationData } from '../data';\nimport { ApolloCache, DefaultContext, OperationVariables } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext>\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables, TContext>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables, TContext>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap;\n\n  var _React$useContext = React.useContext(SpaceContext),\n      horizontalSize = _React$useContext.horizontalSize,\n      verticalSize = _React$useContext.verticalSize,\n      latestIndex = _React$useContext.latestIndex,\n      supportFlexGap = _React$useContext.supportFlexGap;\n\n  var style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nimport Item from './Item';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      split = props.split,\n      style = props.style,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? false : _props$wrap,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n\n  var supportFlexGap = useFlexGapSupport();\n\n  var _React$useMemo = React.useMemo(function () {\n    return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n      return getNumberSize(item);\n    });\n  }, [size]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      horizontalSize = _React$useMemo2[0],\n      verticalSize = _React$useMemo2[1];\n\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight'; // Calculate latest one\n\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    /* eslint-disable react/no-array-index-key */\n\n\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: \"\".concat(itemClassName, \"-\").concat(i),\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n    /* eslint-enable */\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]); // =========================== Render ===========================\n\n  if (childNodes.length === 0) {\n    return null;\n  }\n\n  var gapStyle = {};\n\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap'; // Patch for gap not support\n\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\n\nexport default Space;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n","import { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { Table, Space, Button } from \"antd\";\nimport Column from \"antd/lib/table/Column\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  DELETE_BOARD,\n  GET_BOARD_BY_CATEGORY,\n} from \"../../../queries/adminQuery\";\nimport { getBoardByCategory } from \"../../../typings/api\";\nimport { getDate } from \"../../../utils/convertDate\";\nimport { Container } from \"./styles\";\n\ninterface ParamProps {\n  param: string;\n  subparam: string;\n}\ninterface TableBoardProps {\n  id: number | null;\n  index: number | null;\n  title: string | null;\n  createdAt: string | null;\n  category: string;\n}\n\ninterface LocationProps {\n  refresh?: boolean;\n}\n\nconst StoragePage = () => {\n  const { param, subparam } = useParams<ParamProps>();\n  const { state } = useLocation<LocationProps>();\n  const [boards, setBoards] = useState<Array<TableBoardProps>>();\n  const [getBoard, { loading, data, refetch }] =\n    useLazyQuery<getBoardByCategory>(GET_BOARD_BY_CATEGORY);\n\n  const [deleteBoard] = useMutation(DELETE_BOARD, {\n    onCompleted: ({ deleteBoard }) => {\n      const { ok, err } = deleteBoard;\n      if (ok) {\n        toast.success(\"게시물이 삭제 되었습니다\");\n        if (refetch) {\n          refetch();\n        }\n      } else {\n        toast.error(err);\n      }\n    },\n  });\n\n  useEffect(() => {\n    getBoard({ variables: { category: subparam } });\n  }, [getBoard, subparam]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) {\n        refetch();\n      }\n    };\n    if (state && state.refresh) {\n      excuteRefetch();\n    }\n    return () => excuteRefetch();\n  }, [refetch, state]);\n\n  useEffect(() => {\n    if (data && data.getBoardByCategory && data.getBoardByCategory.data) {\n      const res = data.getBoardByCategory.data;\n      const dataSource: Array<TableBoardProps> = [];\n      res.map((elem, i) => {\n        const obj: TableBoardProps = {\n          id: elem.id,\n          index: res.length - i,\n          title: elem.title,\n          createdAt: getDate(elem.createdAt || \"\"),\n          category: elem.category,\n        };\n        return dataSource.push(obj);\n      });\n      setBoards(dataSource);\n    }\n  }, [data]);\n\n  if (loading) {\n    return <>loading</>;\n  }\n\n  return (\n    <Container>\n      <Link\n        to={`/admin/${param}/create-${param}?category=${subparam}&param=${param}&subparam=${subparam}`}\n      >\n        <Button type=\"primary\" style={{ marginTop: 15, marginBottom: 20 }}>\n          글쓰기\n        </Button>\n      </Link>\n      <Table dataSource={boards} rowKey={\"id\"}>\n        <Column title=\"번호\" dataIndex=\"index\" key=\"index\" width={80} />\n        <Column\n          title=\"제목\"\n          dataIndex=\"title\"\n          key=\"title\"\n          ellipsis={true}\n          render={(text, record: TableBoardProps) => {\n            return (\n              <Space>\n                <Link\n                  to={`/admin/${param}/detail-${param}?category=${subparam}&id=${record.id}`}\n                >\n                  {text}\n                </Link>\n              </Space>\n            );\n          }}\n        />\n        <Column\n          title=\"작성일\"\n          dataIndex=\"createdAt\"\n          key=\"createdAt\"\n          width={150}\n        />\n        <Column\n          title=\"Action\"\n          key=\"action\"\n          width={150}\n          render={(text, record: TableBoardProps) => (\n            <Space size=\"middle\">\n              <Button\n                type=\"primary\"\n                danger\n                onClick={() => deleteBoard({ variables: { id: record.id } })}\n              >\n                삭제\n              </Button>\n            </Space>\n          )}\n        />\n      </Table>\n    </Container>\n  );\n};\n\nexport default StoragePage;\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { LazyQueryHookOptions, QueryTuple } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useLazyQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: LazyQueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, true) as QueryTuple<\n    TData,\n    TVariables\n  >;\n}\n"],"sourceRoot":""}