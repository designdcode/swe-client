{"version":3,"sources":["queries/adminQuery.ts","../../../../src/react/hooks/useApolloClient.ts","../../../../src/react/parser/index.ts","queries/sharedQuery.ts","../../../../src/react/hooks/useQuery.ts","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../../../../src/react/hooks/useMutation.ts","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/antd/es/divider/index.js","pages/Admin/LinkManager/styles.tsx","pages/Admin/LinkManager/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","useApolloClient","override","context","client","DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","document","variables","cached","get","fragments","definitions","filter","x","kind","queries","operation","mutations","subscriptions","length","definition","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","useQuery","query","options","partial","watchQueryOptions","createWatchQueryOptions","obsQuery","renderPromises","getSSRObservable","watchQuery","registerSSRObservable","ssr","skip","getCurrentResult","loading","addQueryPromise","getOptions","fetchData","Promise","resolve","sub","subscribe","next","result","unsubscribe","error","complete","setObsQuery","onError","data","onCompleted","setResult","ref","previousData","nextResult","current","setOptions","catch","previousResult","Object","assign","subscription","onNext","last","resetLastResults","hasOwnProperty","networkStatus","disableNetworkFetches","partialRefetch","keys","fetchPolicy","refetch","ready","errors","graphQLErrors","obsQueryFields","bind","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","called","CheckOutlined","props","React","AntdIcon","_objectSpread","icon","CheckOutlinedSvg","displayName","useMutation","mutation","mutationId","isMounted","execute","executeOptions","baseOptions","ignoreResults","clientOptions","mutate","then","response","reset","PlusOutlined","PlusOutlinedSvg","EditOutlined","EditOutlinedSvg","DeleteOutlined","DeleteOutlinedSvg","__rest","s","e","t","p","prototype","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","Divider","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","Container","styled","div","List","Row","LinkManager","useInput","url","onChangeUrl","setUrl","title","onChangeTitle","setTitle","useState","onAdd","setOnAdd","onEdit","setOnEdit","createLink","editLink","deleteLink","handleAdd","useCallback","a","trim","toast","includes","ok","success","handleDelete","id","handleEdit","style","backgroundColor","getLinks","map","elem","idx","marginTop","placeholder","value","onChange","href","target","rel","onClick","marginBottom","fontSize"],"mappings":"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","file":"static/js/13.bc075067.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient' +\n    'ApolloClient instance in via options.',\n  );\n\n  return client;\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a ${requiredOperationName} requires a graphql ` +\n      `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n  );\n}\n\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","import { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { equal } from '@wry/equality';\nimport { OperationVariables } from '../../core';\nimport { getApolloContext } from '../context';\nimport { ApolloError } from '../../errors';\nimport {\n  ApolloQueryResult,\n  NetworkStatus,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from '../../core';\nimport {\n  QueryHookOptions,\n  QueryResult,\n} from '../types/types';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useQuery<\n  TData = any,\n  TVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n): QueryResult<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(query, DocumentType.Query);\n  const [obsQuery, setObsQuery] = useState(() => {\n    const watchQueryOptions = createWatchQueryOptions(query, options);\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    let obsQuery: ObservableQuery<TData, TVariables> | null = null;\n    if (context.renderPromises) {\n      obsQuery = context.renderPromises.getSSRObservable(watchQueryOptions);\n    }\n\n    if (!obsQuery) {\n      // Is it safe (StrictMode/memory-wise) to call client.watchQuery here?\n      obsQuery = client.watchQuery(watchQueryOptions);\n      if (context.renderPromises) {\n        context.renderPromises.registerSSRObservable(\n          obsQuery,\n          watchQueryOptions,\n        );\n      }\n    }\n\n    if (\n      context.renderPromises &&\n      options?.ssr !== false &&\n      !options?.skip &&\n      obsQuery.getCurrentResult().loading\n    ) {\n      // TODO: This is a legacy API which could probably be cleaned up\n      context.renderPromises.addQueryPromise(\n        {\n          // The only options which seem to actually be used by the\n          // RenderPromises class are query and variables.\n          getOptions: () => createWatchQueryOptions(query, options),\n          fetchData: () => new Promise<void>((resolve) => {\n            const sub = obsQuery!.subscribe({\n              next(result) {\n                if (!result.loading) {\n                  resolve()\n                  sub.unsubscribe();\n                }\n              },\n              error() {\n                resolve();\n                sub.unsubscribe();\n              },\n              complete() {\n                resolve();\n              },\n            });\n          }),\n        },\n        // This callback never seemed to do anything\n        () => null,\n      );\n    }\n\n    return obsQuery;\n  });\n\n  let [result, setResult] = useState(() => {\n    const result = obsQuery.getCurrentResult();\n    if (!result.loading && options) {\n      if (result.error) {\n        options.onError?.(result.error);\n      } else if (result.data) {\n        options.onCompleted?.(result.data);\n      }\n    }\n\n    return result;\n  });\n\n  const ref = useRef({\n    client,\n    query,\n    options,\n    result,\n    previousData: void 0 as TData | undefined,\n    watchQueryOptions: createWatchQueryOptions(query, options),\n  });\n\n  // An effect to recreate the obsQuery whenever the client or query changes.\n  // This effect is also responsible for checking and updating the obsQuery\n  // options whenever they change.\n  useEffect(() => {\n    const watchQueryOptions = createWatchQueryOptions(query, options);\n    let nextResult: ApolloQueryResult<TData> | undefined;\n    if (ref.current.client !== client || !equal(ref.current.query, query)) {\n      const obsQuery = client.watchQuery(watchQueryOptions);\n      setObsQuery(obsQuery);\n      nextResult = obsQuery.getCurrentResult();\n    } else if (!equal(ref.current.watchQueryOptions, watchQueryOptions)) {\n      obsQuery.setOptions(watchQueryOptions).catch(() => {});\n      nextResult = obsQuery.getCurrentResult();\n      ref.current.watchQueryOptions = watchQueryOptions;\n    }\n\n    if (nextResult) {\n      const previousResult = ref.current.result;\n      if (previousResult.data) {\n        ref.current.previousData = previousResult.data;\n      }\n\n      setResult(ref.current.result = nextResult);\n      if (!nextResult.loading && options) {\n        if (!result.loading) {\n          if (result.error) {\n            options.onError?.(result.error);\n          } else if (result.data) {\n            options.onCompleted?.(result.data);\n          }\n        }\n      }\n    }\n\n    Object.assign(ref.current, { client, query });\n  }, [obsQuery, client, query, options]);\n\n  // An effect to subscribe to the current observable query\n  useEffect(() => {\n    if (context.renderPromises) {\n      return;\n    }\n\n    let subscription = obsQuery.subscribe(onNext, onError);\n    // We use `getCurrentResult()` instead of the callback argument because\n    // the values differ slightly. Specifically, loading results will have\n    // an empty object for data instead of `undefined` for some reason.\n    function onNext() {\n      const previousResult = ref.current.result;\n      const result = obsQuery.getCurrentResult();\n      // Make sure we're not attempting to re-render similar results\n      if (\n        previousResult &&\n        previousResult.loading === result.loading &&\n        previousResult.networkStatus === result.networkStatus &&\n        equal(previousResult.data, result.data)\n      ) {\n        return;\n      }\n\n      if (previousResult.data) {\n        ref.current.previousData = previousResult.data;\n      }\n\n      setResult(ref.current.result = result);\n      if (!result.loading) {\n        ref.current.options?.onCompleted?.(result.data);\n      }\n    }\n\n    function onError(error: Error) {\n      const last = obsQuery[\"last\"];\n      subscription.unsubscribe();\n      // Unfortunately, if `lastError` is set in the current\n      // `observableQuery` when the subscription is re-created,\n      // the subscription will immediately receive the error, which will\n      // cause it to terminate again. To avoid this, we first clear\n      // the last error/result from the `observableQuery` before re-starting\n      // the subscription, and restore it afterwards (so the subscription\n      // has a chance to stay open).\n      try {\n        obsQuery.resetLastResults();\n        subscription = obsQuery.subscribe(onNext, onError);\n      } finally {\n        obsQuery[\"last\"] = last;\n      }\n\n      if (!error.hasOwnProperty('graphQLErrors')) {\n        // The error is not a GraphQL error\n        throw error;\n      }\n\n      const previousResult = ref.current.result;\n      if (\n        (previousResult && previousResult.loading) ||\n        !equal(error, previousResult.error)\n      ) {\n        setResult(ref.current.result = {\n          data: previousResult.data,\n          error: error as ApolloError,\n          loading: false,\n          networkStatus: NetworkStatus.error,\n        });\n        ref.current.options?.onError?.(error as ApolloError);\n      }\n    }\n\n    return () => subscription.unsubscribe();\n  }, [obsQuery, context.renderPromises, client.disableNetworkFetches]);\n\n  let partial: boolean | undefined;\n  ({ partial, ...result } = result);\n\n  {\n    // BAD BOY CODE BLOCK WHERE WE PUT SIDE-EFFECTS IN THE RENDER FUNCTION\n    //\n    // TODO: This code should be removed when the partialRefetch option is\n    // removed. I was unable to get this hook to behave reasonably in certain\n    // edge cases when this block was put in an effect.\n    if (\n      partial &&\n      options?.partialRefetch &&\n      !result.loading &&\n      (!result.data || Object.keys(result.data).length === 0) &&\n      obsQuery.options.fetchPolicy !== 'cache-only'\n    ) {\n      result = {\n        ...result,\n        loading: true,\n        networkStatus: NetworkStatus.refetch,\n      };\n\n      obsQuery.refetch();\n    }\n\n    // TODO: This is a hack to make sure useLazyQuery executions update the\n    // obsevable query options for ssr.\n    if (\n      context.renderPromises &&\n      options?.ssr !== false &&\n      !options?.skip &&\n      result.loading\n    ) {\n      obsQuery.setOptions(createWatchQueryOptions(query, options)).catch(() => {});\n    }\n\n    // We assign options during rendering as a guard to make sure that\n    // callbacks like onCompleted and onError are not stale.\n    Object.assign(ref.current, { options });\n  }\n\n  if (\n    (context.renderPromises || client.disableNetworkFetches) &&\n    options?.ssr === false\n  ) {\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    result = ref.current.result = {\n      loading: true,\n      data: void 0 as unknown as TData,\n      error: void 0,\n      networkStatus: NetworkStatus.loading,\n    };\n  } else if (options?.skip || options?.fetchPolicy === 'standby') {\n    // When skipping a query (ie. we're not querying for data but still want to\n    // render children), make sure the `data` is cleared out and `loading` is\n    // set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate that\n    // previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n    // to address this.\n    result = {\n      loading: false,\n      data: void 0 as unknown as TData,\n      error: void 0,\n      networkStatus: NetworkStatus.ready,\n    };\n  }\n\n  if (result.errors && result.errors.length) {\n    // Until a set naming convention for networkError and graphQLErrors is\n    // decided upon, we map errors (graphQLErrors) to the error options.\n    // TODO: Is it possible for both result.error and result.errors to be\n    // defined here?\n    result = {\n      ...result,\n      error: result.error || new ApolloError({ graphQLErrors: result.errors }),\n    };\n  }\n\n  const obsQueryFields = useMemo(() => ({\n    refetch: obsQuery.refetch.bind(obsQuery),\n    fetchMore: obsQuery.fetchMore.bind(obsQuery),\n    updateQuery: obsQuery.updateQuery.bind(obsQuery),\n    startPolling: obsQuery.startPolling.bind(obsQuery),\n    stopPolling: obsQuery.stopPolling.bind(obsQuery),\n    subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n  }), [obsQuery]);\n\n  return {\n    ...obsQueryFields,\n    variables: createWatchQueryOptions(query, options).variables,\n    client,\n    called: true,\n    previousData: ref.current.previousData,\n    ...result,\n  };\n}\n\n/**\n * A function to massage options before passing them the ObservableQuery.\n */\nfunction createWatchQueryOptions<TData, TVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<TData, TVariables> = {},\n): WatchQueryOptions<TVariables, TData> {\n  // TODO: For some reason, we pass context, which is the React Apollo Context,\n  // into observable queries, and test for that.\n  // removing hook specific options\n  const {\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    displayName,\n    ...watchQueryOptions\n  } = options;\n\n  if (skip) {\n    watchQueryOptions.fetchPolicy = 'standby';\n  } else if (\n    watchQueryOptions.context?.renderPromises &&\n    (\n      watchQueryOptions.fetchPolicy === 'network-only' ||\n      watchQueryOptions.fetchPolicy === 'cache-and-network'\n    )\n  ) {\n    // this behavior was added to react-apollo without explanation in this PR\n    // https://github.com/apollographql/react-apollo/pull/1579\n    watchQueryOptions.fetchPolicy = 'cache-first';\n  } else if (!watchQueryOptions.fetchPolicy) {\n    // cache-first is the default policy, but we explicitly assign it here so\n    // the cache policies computed based on options can be cleared\n    watchQueryOptions.fetchPolicy = 'cache-first';\n  }\n\n  if (!watchQueryOptions.variables) {\n    watchQueryOptions.variables = {} as TVariables;\n  }\n\n  return { query, ...watchQueryOptions };\n}\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\n\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      baseOptions.onCompleted?.(response.data!);\n      executeOptions.onCompleted?.(response.data!);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (baseOptions.onError || clientOptions.onError) {\n        baseOptions.onError?.(error);\n        executeOptions.onError?.(error);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    setResult({ called: false, loading: false, client });\n  }, []);\n\n  useEffect(() => () => {\n    ref.current.isMounted = false;\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div``;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & .list-description {\n    margin: 8px 0;\n    width: 800px;\n  }\n\n  & .list-title {\n    display: inline-block;\n    min-width: 100px;\n  }\n\n  & .list-href {\n    margin-left: 30px;\n  }\n\n  & .button-group {\n    display: inline-block;\n    margin-left: 15px;\n  }\n\n  & .button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover {\n      color: red;\n      transition: 0.2s linear;\n    }\n  }\n\n  & .edit-input {\n    display: block;\n    width: 400px;\n    margin: 8px 0;\n  }\n\n  & .delete-button {\n    margin-left: 5px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & .input-row {\n    margin: 5px 0;\n    max-width: 800px;\n  }\n`;\n","import { Container, List, Row } from \"./styles\";\nimport { Input, Button, Divider } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_LINK } from \"../../../queries/sharedQuery\";\nimport { getLinks } from \"../../../typings/api\";\nimport {\n  CREATE_LINK,\n  DELETE_LINK,\n  EDIT_LINK,\n} from \"../../../queries/adminQuery\";\nimport {\n  CheckOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport React, { useCallback, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst LinkManager: React.VFC = () => {\n  const [url, onChangeUrl, setUrl] = useInput(\"\");\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [onAdd, setOnAdd] = useState<boolean>(false);\n  const [onEdit, setOnEdit] = useState<number>(0);\n\n  const { data, loading, refetch } = useQuery<getLinks>(GET_LINK);\n\n  const [createLink] = useMutation(CREATE_LINK);\n  const [editLink] = useMutation(EDIT_LINK);\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  const handleAdd = useCallback(async () => {\n    if (!url.trim() || !url) {\n      toast.error(\"링크를 입력해 주세요\");\n    } else if (!title.trim() || !title) {\n      toast.error(\"사이트 이름을 입력해 주세요\");\n    }\n    await createLink({\n      variables: {\n        url: url.includes(\"http\") ? url : `http://${url}`,\n        title,\n      },\n    }).then(({ data }) => {\n      if (data?.createLink.ok) {\n        setUrl(\"\");\n        setTitle(\"\");\n        toast.success(\"링크가 생성되었습니다\");\n      }\n    });\n    refetch();\n    setOnAdd(false);\n  }, [url, title, createLink, refetch, setUrl, setTitle]);\n\n  const handleDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: {\n          id,\n        },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되었습니다\");\n        }\n      });\n      refetch();\n    },\n    [refetch, deleteLink]\n  );\n\n  const handleEdit = useCallback(\n    async (id: number) => {\n      await editLink({\n        variables: {\n          id,\n          title,\n          url: url.includes(\"http\") ? url : `http://${url}`,\n        },\n      }).then(({ data }) => {\n        if (data?.editLink.ok) {\n          toast.success(\"링크가 수정 되었습니다\");\n        }\n      });\n      setOnEdit(0);\n      setTitle(\"\");\n      setUrl(\"\");\n      refetch();\n    },\n    [title, url, editLink, refetch, setOnEdit, setTitle, setUrl]\n  );\n\n  if (loading) {\n    return <>loading...</>;\n  }\n\n  return (\n    <Container>\n      <List style={{ backgroundColor: \"white\" }}>\n        {data?.getLinks.data?.map((elem, idx) => {\n          return (\n            <div key={idx}>\n              <Divider style={{ marginTop: 5 }} />\n              <div className=\"list-description\">\n                {onEdit === elem?.id ? (\n                  <Input\n                    placeholder={\"사이트 명\"}\n                    className=\"edit-input\"\n                    value={title}\n                    onChange={onChangeTitle}\n                  />\n                ) : (\n                  <span className=\"list-title\">{elem?.title}</span>\n                )}\n                {onEdit === elem?.id ? (\n                  <Input\n                    placeholder={\"링크 URL\"}\n                    className=\"edit-input\"\n                    value={url}\n                    onChange={onChangeUrl}\n                  />\n                ) : (\n                  <a\n                    href={elem?.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"list-href\"\n                  >\n                    {elem?.url}\n                  </a>\n                )}\n                <div className=\"button-group\">\n                  <button\n                    className=\"button edit-button\"\n                    onClick={() => {\n                      if (onEdit === 0) {\n                        setUrl(elem!.url);\n                        setTitle(elem!.title);\n                        setOnEdit(elem!.id);\n                      } else {\n                        handleEdit(elem!.id);\n                      }\n                    }}\n                  >\n                    {onEdit === 0 ? <EditOutlined /> : <CheckOutlined />}\n                  </button>\n                  <button\n                    className=\"button delete-button\"\n                    onClick={() => handleDelete(elem!.id)}\n                  >\n                    <DeleteOutlined />\n                  </button>\n                </div>\n              </div>\n              <Divider style={{ marginBottom: 5 }} />\n            </div>\n          );\n        })}\n      </List>\n      {onAdd && (\n        <Row>\n          <Input\n            placeholder={\"사이트 명\"}\n            className=\"input-row\"\n            value={title}\n            onChange={onChangeTitle}\n          />\n          <Input\n            placeholder={\"링크 URL\"}\n            className=\"input-row\"\n            value={url}\n            onChange={onChangeUrl}\n          />\n        </Row>\n      )}\n      <Row style={{ marginTop: 20 }}>\n        {!onAdd ? (\n          <Button type=\"dashed\" onClick={() => setOnAdd(!onAdd)}>\n            <PlusOutlined style={{ fontSize: 14 }} /> Add Link\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              url.trim() || title.trim() ? handleAdd() : setOnAdd(false)\n            }\n          >\n            생성\n          </Button>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default LinkManager;\n"],"sourceRoot":""}