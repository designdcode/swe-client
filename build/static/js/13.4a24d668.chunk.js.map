{"version":3,"sources":["../../../../src/react/parser/index.ts","queries/adminQuery.ts","../../../../src/react/data/OperationData.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","queries/sharedQuery.ts","utils/convertDate.ts","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/antd/es/_util/hooks/useForceUpdate.js","../../../../src/react/data/MutationData.ts","../../../../src/react/hooks/useMutation.ts","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/divider/index.js","pages/Admin/Dashboard/styles.tsx","pages/Admin/Dashboard/index.tsx"],"names":["DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","variables","cached","get","fragments","definitions","filter","x","kind","queries","operation","mutations","subscriptions","length","definition","CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","requiredOperationName","usedOperationName","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","getDate","time","itemDate","Date","Math","floor","parseInt","getFullYear","getMonth","CloseOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","displayName","useForceUpdate","_React$useReducer","_slicedToArray","result","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","response","onMutationCompleted","catch","onError","onMutationError","data","errors","mutation","mostRecentMutationId","execute","afterExecute","bind","loading","ignoreResults","updateResult","called","onCompleted","graphQLErrors","isMostRecentMutation","previousResult","OperationData","useMutation","updatedOptions","mutationDataRef","mutationData","current","Row","Col","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","Divider","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","Container","styled","div","antCol","TableRowSpan","span","ExtendedRow","Dashboard","useQuery","refetch","linkData","linkLoading","linkRefetch","linkError","state","useLocation","useState","notice","setNotice","admission","setAdmission","links","setLinks","deleteLink","useEffect","getBoard","item","category","includes","slice","getLinks","excuteRefetch","refresh","handleLinkDelete","useCallback","id","a","ok","toast","success","console","gutter","justify","title","Title","level","dataSource","showHeader","rowKey","pagination","size","dataIndex","align","ellipsis","render","record","to","idx","href","danger","onClick","style","marginLeft"],"mappings":"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","file":"static/js/13.4a24d668.chunk.js","sourcesContent":["import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to saftey check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import { invariant } from '../../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\n\nimport { ApolloClient } from '../../core';\nimport { DocumentType, parser, operationName } from '../parser';\nimport { CommonOptions } from '../types/types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: any = {};\n  public client: ApolloClient<object>;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: any) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","export const getDate = (time: string) => {\n  const itemDate = new Date(Math.floor(parseInt(time, 10) / 1000) * 1000);\n  const date =\n    itemDate.getFullYear() +\n    \"-\" +\n    (itemDate.getMonth() + 1 >= 10\n      ? itemDate.getMonth() + 1\n      : `0${itemDate.getMonth() + 1}`) +\n    \"-\" +\n    (itemDate.getDate() >= 10 ? itemDate.getDate() : `0${itemDate.getDate()}`);\n  return date;\n};\n\nexport const convertMonth = (name: string): string => {\n  switch (name) {\n    case \"Jan\":\n      return \"1\";\n    case \"Feb\":\n      return \"2\";\n    case \"Mar\":\n      return \"3\";\n    case \"Apr\":\n      return \"4\";\n    case \"May\":\n      return \"5\";\n    case \"Jun\":\n      return \"6\";\n    case \"Jul\":\n      return \"7\";\n    case \"Aug\":\n      return \"8\";\n    case \"Sep\":\n      return \"9\";\n    case \"Oct\":\n      return \"10\";\n    case \"Nov\":\n      return \"11\";\n    case \"Dec\":\n      return \"12\";\n    default:\n      return name;\n  }\n};\n\nexport const convertDay = (name: string): string => {\n  switch (name) {\n    case \"Sun\":\n      return \"일\";\n    case \"Mon\":\n      return \"월\";\n    case \"Tue\":\n      return \"화\";\n    case \"Wed\":\n      return \"수\";\n    case \"Thu\":\n      return \"목\";\n    case \"Fri\":\n      return \"금\";\n    case \"Sat\":\n      return \"토\";\n    case \"0\":\n      return \"일\";\n    case \"1\":\n      return \"월\";\n    case \"2\":\n      return \"화\";\n    case \"3\":\n      return \"수\";\n    case \"4\":\n      return \"목\";\n    case \"5\":\n      return \"금\";\n    case \"6\":\n      return \"토\";\n    default:\n      return name;\n  }\n};\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useForceUpdate() {\n  var _React$useReducer = React.useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      forceUpdate = _React$useReducer2[1];\n\n  return forceUpdate;\n}","import { equal } from '@wry/equality';\n\nimport { DocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport {\n  MutationDataOptions,\n  MutationTuple,\n  MutationFunctionOptions,\n  MutationResult,\n} from '../types/types';\nimport { OperationData } from './OperationData';\nimport { MutationOptions, mergeOptions, ApolloCache, OperationVariables, DefaultContext } from '../../core';\nimport { FetchResult } from '../../link/core';\n\ntype MutationResultWithoutClient<TData = any> = Omit<MutationResult<TData>, 'client'>;\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n> extends OperationData<MutationDataOptions<TData, TVariables, TContext, TCache>> {\n  private mostRecentMutationId: number;\n  private result: MutationResultWithoutClient<TData>;\n  private previousResult?: MutationResultWithoutClient<TData>;\n  private setResult: (result: MutationResultWithoutClient<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationDataOptions<TData, TVariables, TContext, TCache>;\n    context: any;\n    result: MutationResultWithoutClient<TData>;\n    setResult: (result: MutationResultWithoutClient<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResultWithoutClient<TData>): MutationTuple<TData, TVariables, TContext, TCache> {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    return [\n      this.runMutation,\n      { ...result, client: this.refreshClient().client }\n    ] as MutationTuple<TData, TVariables, TContext, TCache>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {} as MutationFunctionOptions<TData, TVariables, TContext, TCache>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: FetchResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        const { onError } = this.getOptions();\n        this.onMutationError(error, mutationId);\n        if (onError) {\n          onError(error);\n          return {\n            data: undefined,\n            errors: error,\n          };\n        } else {\n          throw error;\n        }\n      });\n  };\n\n  private mutate(\n    options: MutationFunctionOptions<TData, TVariables, TContext, TCache>\n  ) {\n    return this.refreshClient().client.mutate(\n      mergeOptions(\n        this.getOptions(),\n        options as MutationOptions<TData, TVariables, TContext>,\n      ),\n    );\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: FetchResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResultWithoutClient<TData>): MutationResultWithoutClient<TData> | undefined {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !equal(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n      return result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { MutationHookOptions, MutationTuple } from '../types/types';\nimport { MutationData } from '../data';\nimport { ApolloCache, DefaultContext, OperationVariables } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext>\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables, TContext>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables, TContext>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import styled from \"@emotion/styled\";\nimport { Col as antCol, Row } from \"antd\";\n\nexport const Container = styled.div``;\n\nexport const Col = styled(antCol)`\n  height: 300px;\n`;\n\nexport const TableRowSpan = styled.span`\n  cursor: pointer;\n  &:hover {\n    transition: 0.2s linear;\n    color: #438ef7;\n  }\n`;\n\nexport const ExtendedRow = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Container, Col, TableRowSpan, ExtendedRow } from \"./styles\";\nimport { Row, Typography, Table, Divider, Button } from \"antd\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD, GET_LINK } from \"../../../queries/sharedQuery\";\nimport {\n  getBoard,\n  getBoard_getBoard_data,\n  getLinks,\n  getLinks_getLinks_data,\n} from \"../../../typings/api\";\nimport Column from \"antd/lib/table/Column\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { DELETE_LINK } from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { getDate } from \"../../../utils/convertDate\";\n\ninterface LocationProps {\n  refresh?: boolean;\n}\n\nconst Dashboard: React.VFC = () => {\n  const { data, loading, refetch, error } = useQuery<getBoard>(GET_BOARD);\n  const {\n    data: linkData,\n    loading: linkLoading,\n    refetch: linkRefetch,\n    error: linkError,\n  } = useQuery<getLinks>(GET_LINK);\n  const { state } = useLocation<LocationProps>();\n  const [notice, setNotice] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [admission, setAdmission] = useState<\n    Array<getBoard_getBoard_data> | undefined\n  >();\n  const [links, setLinks] = useState<\n    Array<getLinks_getLinks_data> | undefined\n  >();\n\n  const [deleteLink] = useMutation(DELETE_LINK);\n\n  useEffect(() => {\n    if (data?.getBoard.data) {\n      setNotice(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-notice\"))\n          .slice(0, 5)\n      );\n      setAdmission(\n        data.getBoard.data\n          .filter((item) => item.category.includes(\"community-administration\"))\n          .slice(0, 5)\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (linkData?.getLinks.data) {\n      setLinks(linkData.getLinks.data as getLinks_getLinks_data[]);\n    }\n  }, [linkData]);\n\n  useEffect(() => {\n    const excuteRefetch = () => {\n      if (refetch) refetch();\n      if (linkRefetch) linkRefetch();\n    };\n    if (state && state.refresh) excuteRefetch();\n    return () => excuteRefetch();\n  }, [refetch, state, linkRefetch]);\n\n  const handleLinkDelete = useCallback(\n    async (id: number) => {\n      await deleteLink({\n        variables: { id },\n      }).then(({ data }) => {\n        if (data?.deleteLink.ok) {\n          toast.success(\"링크가 삭제 되엇습니다\");\n        }\n      });\n      refetch();\n      linkRefetch();\n    },\n    [refetch, deleteLink, linkRefetch]\n  );\n\n  if (error) console.error(error);\n  if (linkError) console.error(linkError);\n\n  return (\n    <Container>\n      {loading ? (\n        <>loading...</>\n      ) : (\n        <Row gutter={[30, 40]} justify={\"space-between\"}>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>공지사항</Typography.Title>\n              )}\n              dataSource={notice}\n              showHeader={false}\n              rowKey={\"noticeid\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                key={\"noticesubid\"}\n                render={(value, record: getBoard_getBoard_data, i) => {\n                  return (\n                    <TableRowSpan key={i}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                key={\"noticetime\"}\n                render={(value, record: getBoard_getBoard_data, i) => {\n                  return (\n                    <span key={i}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n          <Col span={11}>\n            <Table\n              title={() => (\n                <Typography.Title level={4}>학사공지</Typography.Title>\n              )}\n              dataSource={admission}\n              showHeader={false}\n              rowKey={\"admissionkey\"}\n              pagination={false}\n              size=\"middle\"\n            >\n              <Column\n                dataIndex=\"title\"\n                align=\"left\"\n                ellipsis={true}\n                key={\"subadmissionkey\"}\n                render={(value, record: getBoard_getBoard_data, id) => {\n                  return (\n                    <TableRowSpan key={id}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {value}\n                      </Link>\n                    </TableRowSpan>\n                  );\n                }}\n              />\n              <Column\n                dataIndex=\"createdAt\"\n                align=\"right\"\n                key={\"subadmissionkeydate\"}\n                render={(value, record: getBoard_getBoard_data, idx) => {\n                  return (\n                    <span key={idx}>\n                      <Link\n                        to={`/admin/community/detail-community?category=${record.category}&id=${record.id}`}\n                      >\n                        {getDate(value)}\n                      </Link>\n                    </span>\n                  );\n                }}\n              />\n            </Table>\n          </Col>\n        </Row>\n      )}\n      <Divider />\n      <ExtendedRow>\n        <Typography.Title level={4}>사이트 링크</Typography.Title>\n        {linkLoading ? (\n          <>loading...</>\n        ) : (\n          <Table\n            showHeader={false}\n            dataSource={links}\n            pagination={false}\n            rowKey=\"linkKey\"\n          >\n            <Column\n              dataIndex=\"title\"\n              align=\"left\"\n              key=\"linkKey0\"\n              render={(value) => {\n                return <span key=\"first\">{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"center\"\n              key=\"linkKey1\"\n              render={(value) => {\n                return <span key=\"second\">{value}</span>;\n              }}\n            />\n            <Column\n              dataIndex=\"url\"\n              align=\"right\"\n              key=\"linkKey2\"\n              render={(value, record: getLinks_getLinks_data) => {\n                return (\n                  <div key=\"third\">\n                    <a href={`${value}`}>\n                      <Button>바로가기</Button>\n                    </a>\n                    <Button\n                      danger\n                      onClick={() => handleLinkDelete(record.id)}\n                      style={{ marginLeft: 15 }}\n                    >\n                      링크삭제\n                    </Button>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n        )}\n      </ExtendedRow>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}