{"version":3,"sources":["queries/adminQuery.ts","utils/firebase.ts","queries/sharedQuery.ts","../../../../src/react/data/QueryData.ts","../../../../../src/react/hooks/utils/useBaseQuery.ts","../../../../../src/react/hooks/utils/useDeepMemo.ts","../../../../../src/react/hooks/utils/useAfterFastRefresh.ts","utils/fileRemover.ts","utils/fileUploader.ts","../../../../src/react/hooks/useQuery.ts","pages/Admin/EditBoardPage/styles.tsx","../node_modules/antd/es/descriptions/Cell.js","../node_modules/antd/es/descriptions/Row.js","../node_modules/antd/es/descriptions/Item.js","../node_modules/antd/es/descriptions/index.js","pages/Admin/EditBoardPage/index.tsx"],"names":["CREATE_BOARD","gql","GET_BOARD_BY_CATEGORY","DELETE_BOARD","EDIT_BOARD","DELETE_FILE","DELETE_IMAGE","CREATE_FILE","CREATE_IMAGE","CREATE_LINK","DELETE_LINK","EDIT_LINK","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","GET_BOARD_BY_ID","GET_LINK","GET_BOARD","USER_LOGIN","GET_BOARD_BY_MONTH","options","context","onNewData","runLazy","previous","Object","create","runLazyQuery","cleanup","lazyOptions","obsRefetch","variables","currentObservable","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","this","refreshClient","getOptions","skip","query","removeQuerySubscription","removeObservable","updateObservableQuery","getExecuteSsrResult","getExecuteResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","Promise","resolve","startQuerySubscription","afterExecute","lazy","isMounted","ssrInitiated","handleErrorOrCompleted","previousOptions","unmount","bind","result","renderPromises","ssrDisabled","fetchDisabled","client","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","verifyDocumentType","Query","displayName","fetchPolicy","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","setOptions","catch","currentSubscription","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","last","resetLastResults","currentResult","getCurrentResult","partial","errors","length","graphQLErrors","assign","getLastResult","keys","previousData","resetQueryStoreErrors","onCompleted","onError","unsubscribe","andDelete","useBaseQuery","x","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","then","memoFn","key","ref","value","useDeepMemo","queryResult","__DEV__","effectFn","useAfterFastRefresh","fileRemover","type","category","filename","state","delete","err","toast","fileUploader","file","progress","setProgress","createImage","boardId","put","on","snapshot","console","log","getDownloadURL","url","a","fileName","success","useQuery","Container","styled","div","Button","Btn","notEmpty","val","Cell","_ref","_classNames","itemPrefixCls","component","span","className","style","labelStyle","contentStyle","bordered","label","content","colon","Component","React","classNames","_defineProperty","concat","colSpan","renderCells","items","_ref2","prefixCls","showLabel","showContent","rootLabelStyle","rootContentStyle","map","_ref3","index","_ref3$props","props","_ref3$props$prefixCls","_ref3$props$span","_extends","Row","descContext","DescriptionsContext","vertical","row","DescriptionsItem","DEFAULT_COLUMN_MAP","xxl","xl","lg","md","sm","xs","getFilledItem","node","rowRestCol","clone","cloneElement","devWarning","Descriptions","customizePrefixCls","title","extra","_ref$column","column","_ref$colon","layout","size","_React$useContext","ConfigContext","getPrefixCls","direction","_React$useState","_React$useState2","_slicedToArray","screens","setScreens","mergedColumn","_typeof","i","responsiveArray","breakpoint","getColumn","token","ResponsiveObserve","newScreens","rows","childNodes","toArray","filter","n","tmpRow","forEach","_a","mergedSpan","push","getRows","Provider","Item","EditBoardPage","search","useLocation","queryObj","queryString","parse","history","useHistory","param","useParams","id","useState","board","setBoard","files","setFiles","tmpFiles","setTmpFiles","images","setImages","useInput","onChangeTitle","setTitle","onChangeContent","setContent","link","onChangeLink","setLink","imgUrl","setImgUrl","imgName","setImgName","uploadLoading","setUploadLoading","parseInt","useMutation","deleteBoard","ok","pathname","refresh","deleteFile","createFile","editBoard","handleDeleteBoard","useCallback","handleEditBoard","handleDeleteFile","name","handleImageUpload","handleFileUpload","prev","handleImageRemover","trim","useEffect","getBoardById","onClick","goBack","width","placeholder","onChange","elem","idx","href","download","target","rel","multiple","maxCount","customRequest","callbackFile","status","icon","src","alt","listType","showInfo","onRemove","TextArea","disabled","danger"],"mappings":"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","file":"static/js/12.08a16287.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_BOARD = gql`\n  mutation createBoard(\n    $title: String\n    $content: String\n    $category: String!\n    $files: [AttachModel]\n    $images: [AttachModel]\n    $link: String\n  ) {\n    createBoard(\n      title: $title\n      content: $content\n      category: $category\n      files: $files\n      images: $images\n      link: $link\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_CATEGORY = gql`\n  query getBoardByCategory($category: String!) {\n    getBoardByCategory(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOARD = gql`\n  mutation deleteBoard($id: Int!) {\n    deleteBoard(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_BOARD = gql`\n  mutation editBoard(\n    $id: Int!\n    $title: String\n    $content: String\n    $link: String\n  ) {\n    editBoard(id: $id, title: $title, content: $content, link: $link) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_FILE = gql`\n  mutation editFile($id: Int!, $url: String!, $fileName: String!) {\n    editFile(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_IMAGE = gql`\n  mutation editImage($id: Int!, $url: String!, $fileName: String!) {\n    editImage(id: $id, url: $url, fileName: $fileName) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_FILE = gql`\n  mutation deleteFile($id: Int!) {\n    deleteFile(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_IMAGE = gql`\n  mutation deleteImage($id: Int!) {\n    deleteImage(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_FILE = gql`\n  mutation createFile($url: String!, $fileName: String!, $boardId: Int!) {\n    createFile(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_IMAGE = gql`\n  mutation createImage($url: String!, $fileName: String!, $boardId: Int!) {\n    createImage(url: $url, fileName: $fileName, boardId: $boardId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_LINK = gql`\n  mutation createLink($title: String!, $url: String!) {\n    createLink(title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const DELETE_LINK = gql`\n  mutation deleteLink($id: Int!) {\n    deleteLink(id: $id) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const EDIT_LINK = gql`\n  mutation editLink($id: Int!, $title: String, $url: String) {\n    editLink(id: $id, title: $title, url: $url) {\n      ok\n      err\n    }\n  }\n`;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDM5Cqu1m1YJ7E44OfM9Yo3LH0ZUN8Y6x4\",\n  authDomain: \"sunmoon-swe.firebaseapp.com\",\n  projectId: \"sunmoon-swe\",\n  storageBucket: \"sunmoon-swe.appspot.com\",\n  messagingSenderId: \"1064857281018\",\n  appId: \"1:1064857281018:web:b2881ce151e1a16b068443\",\n  measurementId: \"G-JYK8JT1WEN\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nexport { storage, firebase as default };\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BOARD_BY_ID = gql`\n  query getBoardById($id: Int!) {\n    getBoardById(id: $id) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        files {\n          id\n          url\n          fileName\n        }\n        images {\n          id\n          url\n          fileName\n        }\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const GET_LINK = gql`\n  query getLinks {\n    getLinks {\n      ok\n      err\n      data {\n        id\n        url\n        title\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD = gql`\n  query getBoard {\n    getBoard {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  mutation UserLogin($id: String!, $pwd: String!) {\n    UserLogin(id: $id, pwd: $pwd) {\n      success\n      error\n      data {\n        id\n        stno\n      }\n    }\n  }\n`;\n\nexport const GET_BOARD_BY_MONTH = gql`\n  query getBoardByMonth($category: String!) {\n    getBoardByMonth(category: $category) {\n      ok\n      err\n      data {\n        id\n        title\n        content\n        category\n        link\n        createdAt\n        updatedAt\n        deleteAt\n      }\n    }\n  }\n`;\n","import { equal } from '@wry/equality';\n\nimport { ApolloError } from '../../errors';\n\nimport {\n  ApolloClient,\n  NetworkStatus,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  DocumentNode,\n  TypedDocumentNode,\n} from '../../core';\n\nimport {\n  ObservableSubscription\n} from '../../utilities';\n\nimport { DocumentType } from '../parser';\nimport {\n  QueryResult,\n  QueryDataOptions,\n  QueryTuple,\n  QueryLazyOptions,\n  ObservableQueryFields,\n} from '../types/types';\nimport { OperationData } from './OperationData';\n\ntype ObservableQueryOptions<TData, TVars> =\n  ReturnType<QueryData<TData, TVars>[\"prepareObservableQueryOptions\"]>;\n\nexport class QueryData<TData, TVariables> extends OperationData<\n  QueryDataOptions<TData, TVariables>\n> {\n  public onNewData: () => void;\n  public currentObservable?: ObservableQuery<TData, TVariables>;\n  private currentSubscription?: ObservableSubscription;\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n  private previous: {\n    client?: ApolloClient<object>;\n    query?: DocumentNode | TypedDocumentNode<TData, TVariables>;\n    observableQueryOptions?: ObservableQueryOptions<TData, TVariables>;\n    result?: QueryResult<TData, TVariables>;\n    loading?: boolean;\n    options?: QueryDataOptions<TData, TVariables>;\n    error?: ApolloError;\n  } = Object.create(null);\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryDataOptions<TData, TVariables>;\n    context: any;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previous.query) {\n      this.removeQuerySubscription();\n      this.removeObservable(!skip);\n      this.previous.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          }\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<void> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    return new Promise(resolve => this.startQuerySubscription(resolve));\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n    const options = this.getOptions();\n    if (this.currentObservable && !this.ssrInitiated()) {\n      this.startQuerySubscription();\n    }\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = options;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    this.removeObservable(true);\n    delete this.previous.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      } as TVariables;\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteSsrResult() {\n    const { ssr, skip } = this.getOptions();\n    const ssrDisabled = ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client,\n      ...this.observableQueryFields(),\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previous.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    if (this.ssrInitiated()) {\n      const result = this.getExecuteResult() || ssrLoading;\n      if (result.loading && !skip) {\n        this.context.renderPromises!.addQueryPromise(this, () => null);\n      }\n      return result;\n    }\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previous.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: void 0,\n      };\n      this.currentObservable = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context!.renderPromises!.registerSSRObservable(\n          this.currentObservable,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: void 0,\n    };\n\n    if (this.getOptions().skip) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      return;\n    }\n\n    if (\n      !equal(newObservableQueryOptions, this.previous.observableQueryOptions)\n    ) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  // Setup a subscription to watch for Apollo Client `ObservableQuery` changes.\n  // When new data is received, and it doesn't match the data that was used\n  // during the last `QueryData.execute` call (and ultimately the last query\n  // component render), trigger the `onNewData` callback. If not specified,\n  // `onNewData` will fallback to the default `QueryData.onNewData` function\n  // (which usually leads to a query component re-render).\n  private startQuerySubscription(onNewData: () => void = this.onNewData) {\n    if (this.currentSubscription || this.getOptions().skip) return;\n\n    this.currentSubscription = this.currentObservable!.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previous.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          equal(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previous.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !equal(error, this.previous.error)\n        ) {\n          this.previous.error = error;\n          onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const { currentObservable } = this;\n    if (currentObservable) {\n      const last = currentObservable[\"last\"];\n      try {\n        currentObservable.resetLastResults();\n        this.startQuerySubscription();\n      } finally {\n        currentObservable[\"last\"] = last;\n      }\n    }\n  }\n\n  private getExecuteResult(): QueryResult<TData, TVariables> {\n    let result = this.observableQueryFields() as QueryResult<TData, TVariables>;\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate\n    // that previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client\n    // 4.0 to address this.\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: NetworkStatus.ready,\n        called: true,\n      };\n    } else if (this.currentObservable) {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.getCurrentResult();\n      const { data, loading, partial, networkStatus, errors } = currentResult;\n      let { error } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        data,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        // Fall through without modifying result...\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          partial &&\n          (!data || Object.keys(data).length === 0) &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n      }\n    }\n\n    result.client = this.client;\n    // Store options as this.previousOptions.\n    this.setOptions(options, true);\n\n    const previousResult = this.previous.result;\n\n    this.previous.loading =\n      previousResult && previousResult.loading || false;\n\n    // Ensure the returned result contains previousData as a separate\n    // property, to give developers the flexibility of leveraging outdated\n    // data while new data is loading from the network. Falling back to\n    // previousResult.previousData when previousResult.data is falsy here\n    // allows result.previousData to persist across multiple results.\n    result.previousData = previousResult &&\n      (previousResult.data || previousResult.previousData);\n\n    this.previous.result = result;\n\n    // Any query errors that exist are now available in `result`, so we'll\n    // remove the original errors from the `ObservableQuery` query store to\n    // make sure they aren't re-displayed on subsequent (potentially error\n    // free) requests/responses.\n    this.currentObservable && this.currentObservable.resetQueryStoreErrors();\n\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    if (!this.currentObservable || !this.previous.result) return;\n\n    const { data, loading, error } = this.previous.result;\n\n    if (!loading) {\n      const {\n        query,\n        variables,\n        onCompleted,\n        onError,\n        skip\n      } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previous.loading &&\n        equal(this.previousOptions.query, query) &&\n        equal(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error && !skip) {\n        onCompleted(data as TData);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentSubscription) {\n      this.currentSubscription.unsubscribe();\n      delete this.currentSubscription;\n    }\n  }\n\n  private removeObservable(andDelete: boolean) {\n    if (this.currentObservable) {\n      this.currentObservable[\"tearDownQuery\"]();\n      if (andDelete) {\n        delete this.currentObservable;\n      }\n    }\n  }\n\n  private obsRefetch = (variables?: Partial<TVariables>) =>\n    this.currentObservable?.refetch(variables);\n\n  private obsFetchMore = (\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable?.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable?.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable?.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable?.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable?.subscribeToMore(options);\n\n  private observableQueryFields() {\n    return {\n      variables: this.currentObservable?.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import '../../../utilities/globals';\n\nimport { useContext, useEffect, useReducer, useRef } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport {\n  QueryHookOptions,\n  QueryDataOptions,\n  QueryTuple,\n  QueryResult,\n} from '../../types/types';\nimport { QueryData } from '../../data';\nimport { useDeepMemo } from './useDeepMemo';\nimport { OperationVariables } from '../../../core';\nimport { getApolloContext } from '../../context';\nimport { useAfterFastRefresh } from './useAfterFastRefresh';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData = queryDataRef.current || (\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryDataOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        if (!queryData.ssrInitiated()) {\n          // When new data is received from the `QueryData` object, we want to\n          // force a re-render to make sure the new data is displayed. We can't\n          // force that re-render if we're already rendering however so to be\n          // safe we'll trigger the re-render in a microtask. In case the\n          // component gets unmounted before this callback fires, we re-check\n          // queryDataRef.current.isMounted before calling forceUpdate().\n          Promise.resolve().then(() => queryDataRef.current && queryDataRef.current.isMounted && forceUpdate());\n        } else {\n          // If we're rendering on the server side we can force an update at\n          // any point.\n          forceUpdate();\n        }\n      }\n    })\n  );\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: {\n      ...updatedOptions,\n      onError: void 0,\n      onCompleted: void 0\n    } as QueryHookOptions<TData, TVariables>,\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  if (__DEV__) {\n    // ensure we run an update after refreshing so that we reinitialize\n    useAfterFastRefresh(forceUpdate);\n  }\n\n  useEffect(() => {\n    return () => {\n      queryData.cleanup();\n      // this effect can run multiple times during a fast-refresh\n      // so make sure we clean up the ref\n      queryDataRef.current = void 0;\n    }\n  }, []);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data,\n    queryData.currentObservable,\n  ]);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import '../../../utilities/globals';\nimport { useEffect, useRef } from \"react\";\n\n/**\n * This hook allows running a function only immediately after a react\n * fast refresh or live reload.\n *\n * Useful in order to ensure that we can reinitialize things that have been\n * disposed by cleanup functions in `useEffect`.\n * @param effectFn a function to run immediately after a fast refresh\n */\nexport function useAfterFastRefresh(effectFn: () => unknown) {\n  if (__DEV__) {\n    const didRefresh = useRef(false);\n    useEffect(() => {\n      return () => {\n        // Detect fast refresh, only runs multiple times in fast refresh\n        didRefresh.current = true;\n      };\n    }, []);\n\n    useEffect(() => {\n      if (didRefresh.current === true) {\n        // This block only runs after a fast refresh\n        didRefresh.current = false;\n        effectFn();\n      }\n    }, [])\n  }\n}\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileRemover = (\n  type: string,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>\n) => {\n  storage\n    .ref(`/${type}/${category}/${filename}`)\n    .delete()\n    .then(() => {\n      state(\"\");\n    })\n    .catch((err) => toast.error(err));\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { storage } from \"./firebase\";\n\nexport const fileUploader = (\n  type: string,\n  file: any,\n  category: string,\n  filename: string,\n  state: Dispatch<SetStateAction<string | undefined>>,\n  progress: number,\n  setProgress: Dispatch<SetStateAction<number>>,\n  createImage?: any,\n  boardId?: number\n) => {\n  const upload = storage.ref(`/${type}/${category}/${filename}`).put(file);\n  upload.on(\n    \"state_changed\",\n    (snapshot) => {},\n    (err) => console.log(err),\n    () => {\n      setProgress(1);\n      storage\n        .ref(`/${type}/${category}/${filename}`)\n        .getDownloadURL()\n        .then(async (url) => {\n          state(url);\n          if (createImage && boardId) {\n            await createImage({\n              variables: {\n                url,\n                fileName: filename,\n                boardId,\n              },\n            });\n          }\n          toast.success(\"파일 / 이미지가 업로드 되었습니다\");\n          setProgress(0);\n        });\n    }\n  );\n};\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import styled from \"@emotion/styled\";\nimport { Button as Btn } from \"antd\";\n\nexport const Container = styled.div`\n  & .button-group {\n    display: flex;\n    align-items: center;\n  }\n\n  & .attach-group {\n    display: flex;\n    margin: 5px 0;\n  }\n\n  & .attach-button {\n    margin-left: 15px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      transition: linear 0.2s;\n    }\n  }\n`;\n\nexport const Button = styled(Btn)`\n  margin: 15px 0;\n  margin-right: 15px;\n`;\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\n\nvar Cell = function Cell(_ref) {\n  var itemPrefixCls = _ref.itemPrefixCls,\n      component = _ref.component,\n      span = _ref.span,\n      className = _ref.className,\n      style = _ref.style,\n      labelStyle = _ref.labelStyle,\n      contentStyle = _ref.contentStyle,\n      bordered = _ref.bordered,\n      label = _ref.label,\n      content = _ref.content,\n      colon = _ref.colon;\n  var Component = component;\n\n  if (bordered) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-label\"), notEmpty(label)), _defineProperty(_classNames, \"\".concat(itemPrefixCls, \"-item-content\"), notEmpty(content)), _classNames), className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item\"), className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(itemPrefixCls, \"-item-container\")\n  }, label && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-label\"), _defineProperty({}, \"\".concat(itemPrefixCls, \"-item-no-colon\"), !colon)),\n    style: labelStyle\n  }, label), content && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(itemPrefixCls, \"-item-content\")),\n    style: contentStyle\n  }, content)));\n};\n\nexport default Cell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from './Cell';\nimport { DescriptionsContext } from '.';\n\nfunction renderCells(items, _ref, _ref2) {\n  var colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  var component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent,\n      rootLabelStyle = _ref2.labelStyle,\n      rootContentStyle = _ref2.contentStyle;\n  return items.map(function (_ref3, index) {\n    var _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        labelStyle = _ref3$props.labelStyle,\n        contentStyle = _ref3$props.contentStyle,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: \"\".concat(type, \"-\").concat(key || index),\n        className: className,\n        style: style,\n        labelStyle: _extends(_extends({}, rootLabelStyle), labelStyle),\n        contentStyle: _extends(_extends({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: \"label-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: \"content-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nvar Row = function Row(props) {\n  var descContext = React.useContext(DescriptionsContext);\n  var prefixCls = props.prefixCls,\n      vertical = props.vertical,\n      row = props.row,\n      index = props.index,\n      bordered = props.bordered;\n\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"label-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"content-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"\".concat(prefixCls, \"-row\")\n  }, renderCells(row, props, _extends({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\n\nexport default Row;","var DescriptionsItem = function DescriptionsItem(_ref) {\n  var children = _ref.children;\n  return children;\n};\n\nexport default DescriptionsItem;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport devWarning from '../_util/devWarning';\nimport { ConfigContext } from '../config-provider';\nimport Row from './Row';\nimport DescriptionsItem from './Item';\nimport { cloneElement } from '../_util/reactNode';\nexport var DescriptionsContext = /*#__PURE__*/React.createContext({});\nvar DEFAULT_COLUMN_MAP = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\nfunction getColumn(column, screens) {\n  if (typeof column === 'number') {\n    return column;\n  }\n\n  if (_typeof(column) === 'object') {\n    for (var i = 0; i < responsiveArray.length; i++) {\n      var breakpoint = responsiveArray[i];\n\n      if (screens[breakpoint] && column[breakpoint] !== undefined) {\n        return column[breakpoint] || DEFAULT_COLUMN_MAP[breakpoint];\n      }\n    }\n  }\n\n  return 3;\n}\n\nfunction getFilledItem(node, span, rowRestCol) {\n  var clone = node;\n\n  if (span === undefined || span > rowRestCol) {\n    clone = cloneElement(node, {\n      span: rowRestCol\n    });\n    devWarning(span === undefined, 'Descriptions', 'Sum of column `span` in a line not match `column` of Descriptions.');\n  }\n\n  return clone;\n}\n\nfunction getRows(children, column) {\n  var childNodes = toArray(children).filter(function (n) {\n    return n;\n  });\n  var rows = [];\n  var tmpRow = [];\n  var rowRestCol = column;\n  childNodes.forEach(function (node, index) {\n    var _a;\n\n    var span = (_a = node.props) === null || _a === void 0 ? void 0 : _a.span;\n    var mergedSpan = span || 1; // Additional handle last one\n\n    if (index === childNodes.length - 1) {\n      tmpRow.push(getFilledItem(node, span, rowRestCol));\n      rows.push(tmpRow);\n      return;\n    }\n\n    if (mergedSpan < rowRestCol) {\n      rowRestCol -= mergedSpan;\n      tmpRow.push(node);\n    } else {\n      tmpRow.push(getFilledItem(node, mergedSpan, rowRestCol));\n      rows.push(tmpRow);\n      rowRestCol = column;\n      tmpRow = [];\n    }\n  });\n  return rows;\n}\n\nfunction Descriptions(_ref) {\n  var _classNames;\n\n  var customizePrefixCls = _ref.prefixCls,\n      title = _ref.title,\n      extra = _ref.extra,\n      _ref$column = _ref.column,\n      column = _ref$column === void 0 ? DEFAULT_COLUMN_MAP : _ref$column,\n      _ref$colon = _ref.colon,\n      colon = _ref$colon === void 0 ? true : _ref$colon,\n      bordered = _ref.bordered,\n      layout = _ref.layout,\n      children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      size = _ref.size,\n      labelStyle = _ref.labelStyle,\n      contentStyle = _ref.contentStyle;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      screens = _React$useState2[0],\n      setScreens = _React$useState2[1];\n\n  var mergedColumn = getColumn(column, screens); // Responsive\n\n  React.useEffect(function () {\n    var token = ResponsiveObserve.subscribe(function (newScreens) {\n      if (_typeof(column) !== 'object') {\n        return;\n      }\n\n      setScreens(newScreens);\n    });\n    return function () {\n      ResponsiveObserve.unsubscribe(token);\n    };\n  }, []); // Children\n\n  var rows = getRows(children, mergedColumn);\n  return /*#__PURE__*/React.createElement(DescriptionsContext.Provider, {\n    value: {\n      labelStyle: labelStyle,\n      contentStyle: contentStyle\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size && size !== 'default'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), !!bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    style: style\n  }, (title || extra) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\")\n  }, title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-title\")\n  }, title), extra && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-extra\")\n  }, extra)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-view\")\n  }, /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tbody\", null, rows.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      index: index,\n      colon: colon,\n      prefixCls: prefixCls,\n      vertical: layout === 'vertical',\n      bordered: bordered,\n      row: row\n    });\n  }))))));\n}\n\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport queryString from \"query-string\";\nimport {\n  createFile,\n  createFileVariables,\n  createImage,\n  createImageVariables,\n  deleteBoard,\n  deleteBoardVariables,\n  deleteFile,\n  deleteFileVariables,\n  editBoard,\n  editBoardVariables,\n  getBoardByCategory_getBoardByCategory_data_files,\n  getBoardById,\n  getBoardByIdVariables,\n  getBoardById_getBoardById_data,\n  getBoardById_getBoardById_data_images,\n} from \"../../../typings/api\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_BOARD_BY_ID } from \"../../../queries/sharedQuery\";\nimport {\n  CREATE_FILE,\n  CREATE_IMAGE,\n  DELETE_BOARD,\n  DELETE_FILE,\n  EDIT_BOARD,\n} from \"../../../queries/adminQuery\";\nimport { toast } from \"react-toastify\";\nimport { Container, Button } from \"./styles\";\nimport { Descriptions, Input, Upload } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport {\n  DeleteOutlined,\n  LoadingOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport { storage } from \"../../../utils/firebase\";\nimport { fileRemover } from \"../../../utils/fileRemover\";\nimport { fileUploader } from \"../../../utils/fileUploader\";\n\ninterface locationProps {\n  search: string;\n}\n\ninterface paramProps {\n  param: string;\n}\n\nconst EditBoardPage: React.VFC = () => {\n  const { search } = useLocation<locationProps>();\n  const queryObj = queryString.parse(search);\n  const history = useHistory();\n  const { param } = useParams<paramProps>();\n  const { id, category } = queryObj;\n  const [board, setBoard] = useState<getBoardById_getBoardById_data>();\n  const [files, setFiles] =\n    useState<\n      (getBoardByCategory_getBoardByCategory_data_files | null | undefined)[]\n    >();\n  const [tmpFiles, setTmpFiles] = useState<{ url: string; fileName: string }[]>(\n    []\n  );\n  const [images, setImages] =\n    useState<(getBoardById_getBoardById_data_images | undefined | null)[]>();\n\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\n  const [content, onChangeContent, setContent] = useInput(\"\");\n  const [link, onChangeLink, setLink] = useInput(\"\");\n  const [progress, setProgress] = useState<number>(0);\n  const [imgUrl, setImgUrl] = useState<string | undefined>();\n  const [imgName, setImgName] = useState<string>();\n  const [uploadLoading, setUploadLoading] = useState<boolean>(false);\n\n  const { data, loading, refetch } = useQuery<\n    getBoardById,\n    getBoardByIdVariables\n  >(GET_BOARD_BY_ID, {\n    variables: {\n      id: parseInt(id as string, 10),\n    },\n  });\n\n  const [deleteBoard] = useMutation<deleteBoard, deleteBoardVariables>(\n    DELETE_BOARD,\n    {\n      onCompleted: ({ deleteBoard }) => {\n        const { ok, err } = deleteBoard;\n        if (ok) {\n          toast.success(\"게시물이 삭제 되었습니다\");\n          history.push({\n            pathname: `/admin/${param}/${category}`,\n            state: { refresh: true },\n          });\n        } else {\n          console.log(err);\n          toast.error(\"게시물을 삭제 할 수 없습니다\");\n        }\n      },\n    }\n  );\n\n  const [deleteFile] = useMutation<deleteFile, deleteFileVariables>(\n    DELETE_FILE,\n    {\n      onCompleted: ({ deleteFile }) => {\n        const { ok, err } = deleteFile;\n        if (ok) {\n          toast.success(\"파일이 삭제 되었습니다\");\n          if (refetch) refetch();\n          else {\n            console.log(err);\n            toast.error(err);\n          }\n        }\n      },\n    }\n  );\n\n  const [createFile] = useMutation<createFile, createFileVariables>(\n    CREATE_FILE\n  );\n  const [createImage] = useMutation<createImage, createImageVariables>(\n    CREATE_IMAGE\n  );\n\n  const [editBoard] = useMutation<editBoard, editBoardVariables>(EDIT_BOARD, {\n    onCompleted: ({ editBoard }) => {\n      const { ok, err } = editBoard;\n      if (ok) {\n        toast.success(\"게시물이 수정 되었습니다\");\n        history.push({\n          pathname: `/admin/${param}/${category}`,\n          state: { refresh: true },\n        });\n      } else {\n        console.log(err);\n        toast.error(\"게시물을 삭제 할 수 없습니다\");\n      }\n    },\n  });\n\n  const handleDeleteBoard = useCallback(() => {\n    deleteBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n      },\n    });\n  }, [id, deleteBoard]);\n\n  const handleEditBoard = useCallback(async () => {\n    await editBoard({\n      variables: {\n        id: parseInt(id as string, 10),\n        title,\n        content: content,\n        link,\n      },\n    });\n  }, [id, title, content, link, editBoard]);\n\n  const handleDeleteFile = useCallback(\n    async (id: number, name?: string) => {\n      storage.ref(`/files/${category}/${name}`).delete();\n      await deleteFile({\n        variables: {\n          id,\n        },\n      });\n    },\n    [deleteFile, category]\n  );\n\n  const handleImageUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      setImgName(file.name);\n      setUploadLoading(true);\n      fileUploader(\n        \"images\",\n        file,\n        category as string,\n        file.name,\n        setImgUrl,\n        progress,\n        setProgress,\n        createImage,\n        parseInt(id as string, 10)\n      );\n      setUploadLoading(false);\n      setProgress(0);\n    },\n    [category, progress, createImage, id]\n  );\n\n  const handleFileUpload = useCallback(\n    (file: any) => {\n      setProgress(progress + 1);\n      const upload = storage.ref(`/files/${category}/${file.name}`).put(file);\n      upload.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => console.log(err),\n        () => {\n          storage\n            .ref(`/files/${category}/${file.name}`)\n            .getDownloadURL()\n            .then(async (url) => {\n              setTmpFiles((prev) => [\n                ...prev,\n                { url: url, fileName: file.name },\n              ]);\n              await createFile({\n                variables: {\n                  url,\n                  fileName: file.name,\n                  boardId: parseInt(id as string, 10),\n                },\n                onCompleted: ({ createFile }) => {\n                  const { ok, err } = createFile;\n                  if (ok) {\n                    toast.success(\"파일이 업로드 되었습니다\");\n                    if (refetch) refetch();\n                  } else {\n                    toast.error(\"파일 업로드에 실패 하였습니다\");\n                    console.log(err);\n                  }\n                },\n              });\n              setProgress(progress - 1);\n            });\n        }\n      );\n    },\n    [createFile, id, category, progress, refetch]\n  );\n\n  const handleImageRemover = useCallback(() => {\n    if (imgName && imgName.trim()) {\n      fileRemover(\"images\", category as string, imgName, setImgUrl);\n    }\n  }, [category, imgName]);\n\n  useEffect(() => {\n    if (data && data.getBoardById && data.getBoardById.data) {\n      setBoard(data.getBoardById.data);\n      setTitle(data.getBoardById.data.title || \"\");\n      setContent(data.getBoardById.data.content || \"\");\n      setLink(data.getBoardById.data.link || \"\");\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.files\n    ) {\n      setFiles(data.getBoardById.data.files);\n    }\n    if (\n      data &&\n      data.getBoardById &&\n      data.getBoardById.data &&\n      data.getBoardById.data.images\n    ) {\n      setImages(data.getBoardById.data.images);\n    }\n  }, [data, setTitle, setContent, setLink]);\n\n  useEffect(() => {\n    if (progress < 0) {\n      setProgress(0);\n    }\n  }, [progress]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Button type=\"ghost\" onClick={() => history.goBack()}>\n        뒤로\n      </Button>\n      <Descriptions\n        bordered\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n        layout=\"horizontal\"\n      >\n        <Descriptions.Item label=\"제목\" span={4} labelStyle={{ width: 100 }}>\n          <Input\n            placeholder={board?.title || undefined}\n            value={title}\n            onChange={onChangeTitle}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"파일\" span={4} labelStyle={{ width: 100 }}>\n          {files && files.length !== 0 ? (\n            <>\n              {files.map((elem, idx) => {\n                return (\n                  <div key={idx} className=\"attach-group\">\n                    <a\n                      href={elem?.url}\n                      download\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      {elem?.fileName}\n                    </a>\n                    <button\n                      className=\"attach-button\"\n                      onClick={() => handleDeleteFile(elem!.id, elem!.fileName)}\n                    >\n                      <DeleteOutlined />\n                    </button>\n                  </div>\n                );\n              })}\n            </>\n          ) : tmpFiles.length === 0 ? (\n            <div>첨부파일 없음</div>\n          ) : (\n            <></>\n          )}\n          <Upload\n            multiple={true}\n            maxCount={4}\n            className=\"upload-list-inline\"\n            customRequest={({ file }) => handleFileUpload(file)}\n            onChange={({ file: callbackFile }) => {\n              if (tmpFiles.length !== 0) {\n                callbackFile.status = \"done\";\n              } else {\n                callbackFile.status = \"removed\";\n              }\n            }}\n          >\n            <Button icon={<UploadOutlined />}>파일 업로드</Button>\n          </Upload>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"링크\" span={4}>\n          <Input\n            placeholder={board?.link || undefined}\n            value={link}\n            onChange={onChangeLink}\n          />\n        </Descriptions.Item>\n        {param === \"achievement\" && (\n          <Descriptions.Item\n            label=\"이미지\"\n            span={4}\n            labelStyle={{ width: 100 }}\n          >\n            {images && images.length !== 0 ? (\n              <div>\n                {imgUrl ? (\n                  <img src={imgUrl} width={300} alt=\"upimage\" />\n                ) : (\n                  <img src={images[0]!.url} alt=\"ima\" width={300} />\n                )}\n              </div>\n            ) : (\n              <div>이미지 없음</div>\n            )}\n            <Upload\n              multiple={true}\n              maxCount={1}\n              listType=\"picture\"\n              className=\"upload-list-inline\"\n              progress={{ showInfo: true }}\n              onRemove={() => handleImageRemover()}\n              customRequest={({ file }) => handleImageUpload(file)}\n              onChange={({ file: callbackFile }) => {\n                if (tmpFiles.length !== 0) {\n                  callbackFile.status = \"done\";\n                } else {\n                  callbackFile.status = \"removed\";\n                }\n              }}\n            >\n              <Button icon={<UploadOutlined />}>이미지 업로드</Button>\n            </Upload>\n          </Descriptions.Item>\n        )}\n        <Descriptions.Item label=\"내용\" span={4}>\n          <Input.TextArea\n            placeholder={board?.content || undefined}\n            rows={10}\n            value={content}\n            onChange={onChangeContent}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n      <div className=\"button-group\">\n        <Button\n          type=\"primary\"\n          onClick={() => handleEditBoard()}\n          disabled={uploadLoading}\n        >\n          {!loading ? (\n            progress <= 0 ? (\n              \"올리기\"\n            ) : (\n              <>\n                <LoadingOutlined /> 이미지 / 파일 업로드 중입니다...\n              </>\n            )\n          ) : (\n            \"Uploading...\"\n          )}\n        </Button>\n        <Button type=\"primary\" danger onClick={handleDeleteBoard}>\n          삭제하기\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default EditBoardPage;\n"],"sourceRoot":""}