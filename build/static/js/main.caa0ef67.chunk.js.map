{"version":3,"sources":["utils/apollo.ts","layouts/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["adminLoginVar","makeVar","localStorage","getItem","cache","InMemoryCache","httpLink","HttpLink","uri","errLink","onError","graphQLErrors","networkError","map","message","console","log","linkCombine","split","query","getMainDefinition","kind","client","ApolloClient","link","ApolloLink","from","Main","lodable","Admin","App","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ApolloProvider","position","autoClose","document","getElementById"],"mappings":"wGAAA,sGAYaA,EAAgBC,cAAmBC,aAAaC,QAAQ,UAC/DC,EAAuB,IAAIC,IAE3BC,EAAW,IAAIC,IAAS,CAC5BC,IAAK,uCAKDC,EAAUC,aAAQ,YAA2C,IAAxCC,EAAuC,EAAvCA,cAAuC,EAAxBC,aACpCD,GACFA,EAAcE,KAAI,gBAAGC,EAAH,EAAGA,QAAH,OAChBC,QAAQC,IAAI,0BAA2BF,SAKvCG,EAAcC,aAAM,YAAgB,IAAbC,EAAY,EAAZA,MAE3B,MAAgB,wBADMC,YAAkBD,GAAhCE,OAEPf,GACGgB,EAA8C,IAAIC,IAAa,CACnEnB,QACAoB,KAAMC,IAAWC,KAAK,CAACjB,EAASQ,MAGnBK,O,uIChCTK,EAAOC,aAAQ,kBAAM,gEACrBC,EAAQD,aAAQ,kBAAM,sEAcbE,EAZO,WACpB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIC,GAAG,UAC5B,cAAC,IAAD,CAAUF,OAAK,EAACC,KAAK,SAASC,GAAG,+BAEjC,cAAC,IAAD,CAAOD,KAAK,QAAQE,UAAWP,IAC/B,cAAC,IAAD,CAAOK,KAAK,0BAA0BE,UAAWL,QCFxCM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCAdQ,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBxB,OAAQA,IAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgByB,SAAS,eAAeC,UAAW,MACnD,cAAC,EAAD,SAIJC,SAASC,eAAe,SAE1Bf,M","file":"static/js/main.caa0ef67.chunk.js","sourcesContent":["import {\n  ApolloClient,\n  ApolloLink,\n  HttpLink,\n  InMemoryCache,\n  makeVar,\n  NormalizedCacheObject,\n  split,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nexport const adminLoginVar = makeVar<boolean>(!!localStorage.getItem(\"admin\"));\nconst cache: InMemoryCache = new InMemoryCache();\n\nconst httpLink = new HttpLink({\n  uri: \"http://swedu.sunmoon.ac.kr/graphql\"\n  // uri: \"http://localhost:4000/graphql\",\n  // uri: \"http://ec2-15-165-19-80.ap-northeast-2.compute.amazonaws.com/graphql\",\n});\n\nconst errLink = onError(({ graphQLErrors, networkError }: any) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message }: any) =>\n      console.log(\"network graphql error :\", message)\n    );\n  }\n});\n\nconst linkCombine = split(({ query }) => {\n  const { kind }: any = getMainDefinition(query);\n  return kind === \"OperationDefinition\";\n}, httpLink);\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link: ApolloLink.from([errLink, linkCombine]),\n});\n\nexport default client;\n","import React from \"react\";\nimport lodable from \"@loadable/component\";\nimport \"./styles.css\";\n\nimport { Redirect, Route, Switch } from \"react-router\";\n\nconst Main = lodable(() => import(\"../Main\"));\nconst Admin = lodable(() => import(\"../Admin\"));\n\nconst App: React.FC = () => {\n  return (\n    <Switch>\n      <Redirect exact path=\"/\" to=\"/main\" />\n      <Redirect exact path=\"/admin\" to=\"/admin/dashboard/dashboard\" />\n\n      <Route path=\"/main\" component={Main} />\n      <Route path=\"/admin/:param/:subparam\" component={Admin} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport App from './layouts/App';\nimport reportWebVitals from './reportWebVitals';\nimport client from './utils/apollo';\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <ToastContainer position=\"bottom-right\" autoClose={3000} />\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}